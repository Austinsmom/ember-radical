<section>
  <p class="intro">Rad State is a purely functional component with no DOM output of its own. It provides the ability to create a sandboxed scope for basic state management and manipulation.</p>
  <p>It allows for an easy, purely template-based means for controlling components like modals, drawers, and dropdowns, or any other interactive elements that need simple on/off style state management and control, which helps keep your class javascript leaner. The majority of the examples of modals and drawers throughout this guide are using Rad State for control!</p>
  <p>Rad state yields a boolean state property and a hash of three actions for setting the state to true or false, or toggling the current value.</p>
</section>
<section>
  <h3>Examples</h3>

  {{#code-example
    title='Simple Example With Modal'
    language='handlebars' code='{{#rad-state as |state stateActions|}}
  {{#rad-button
    click=(action stateActions.open)}}Open a rad modal{{/rad-button}}
  {{#rad-modal
    open=state
    Header="Just Do Less"
    closeModal=(action stateActions.close) as |components|}}
    <iframe width="560" height="315" src="https://www.youtube.com/embed/PKIpCPS-oZc?rel=0" frameborder="0" allowfullscreen></iframe>{{/rad-modal}}
{{/rad-state}}'}}
      <hr class="divider">
      <p>This example uses the yielded <code>state</code> property to control the modal's state, and the <code>open</code> &amp; <code>close</code> actions from the yielded <code>stateActions</code> hash to manipulate the state itself.</p>
{{/code-example}}

{{#code-example
  title='Simple Toggle Example'
  language='handlebars' code='{{#rad-state as |state stateActions|}}
  <p>
    {{#rad-button
    click=(action stateActions.toggleState)}}Toggle visibility!{{/rad-button}}
  </p>
  {{#if state}}
    <h5>Awwwww yisssssssss.</h5>
    <img src="https://media.giphy.com/media/30zBdDtNEJIYg/giphy.gif" alt="THAT IS TOTALLY RAD" style="width: 100%;" />
  {{/if}}
{{/rad-state}}'}}
    <hr class="divider">
    <p>This example uses the yielded <code>state</code> property to control the visibility of some arbitrary content, and the <code>toggleState</code> action from the yielded <code>stateActions</code> hash to manipulate the state itself.</p>
{{/code-example}}

</section>
<section>
  <h3>Properties</h3>

  <hr>

  {{#rad-tabs
    card=true
    defaultTab='yielded-props' as |components|}}
    {{#components.content
      label='Yielded'
      elementId='yielded-props'}}
      <table class="full-width">
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Default</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>state</code></td>
            <td>{Boolean}</td>
            <td>false</td>
            <td>Simple boolean for managing the state of components contained within the rad-state instance's block scope.</td>
          </tr>
          <tr>
            <td><code>stateActions</code></td>
            <td>{Object}</td>
            <td>N/A</td>
            <td>
              <p>Hash of actions for manipulating the value of <code>state</code></p>
              <p class="small enums"><strong>Enums:</strong> stateActions.open, stateActions.close, stateActions.toggleState</p>
            </td>
          </tr>
        </tbody>
      </table>
    {{/components.content}}
  {{/rad-tabs}}
</section>