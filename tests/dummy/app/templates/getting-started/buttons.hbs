<section>
  <p class="intro">The <code>rad-button</code> is the base component used for composing any element
  with an interactive target. Any element that can be clicked should always be either
  an anchor with a valid href or a button. This ensures that screenreaders know the
  element can be interacted with, and is required in mobile for touch events.</p>
  <p class="intro">The button API is available for all interactive targets throughout
  Radical because all target elements extend the <code>rad-button</code> component.
  The component is also available for any custom elements or actions that you create
  in your application. The benefit being access to the component's basic tagging,
  focus styles and accessibility features.</p>
</section>
<section>
  <h3>Examples</h3>

  {{code-example
    title='Style Options'
    language='handlebars'
    code="
    {{#rad-button brand='primary' click=(action 'exampleAction')}}Primary{{/rad-button}}
    {{#rad-button brand='success' click=(action 'exampleAction')}}Success{{/rad-button}}
    {{#rad-button brand='info' click=(action 'exampleAction')}}Info{{/rad-button}}
    {{#rad-button brand='warning' click=(action 'exampleAction')}}Warning{{/rad-button}}
    {{#rad-button brand='danger' click=(action 'exampleAction')}}Danger{{/rad-button}}
    {{#rad-button classNames='btn-link' click=(action 'exampleAction')}}Link{{/rad-button}}"}}

  {{code-example
    title='Outline Style'
    language='handlebars'
    code="
    {{#rad-button brand='primary' outline=true}}Primary{{/rad-button}}
    {{#rad-button brand='success' outline=true}}Success{{/rad-button}}
    {{#rad-button brand='info' outline=true}}Info{{/rad-button}}
    {{#rad-button brand='warning' outline=true}}Warning{{/rad-button}}
    {{#rad-button brand='danger' outline=true}}Danger{{/rad-button}}"}}

  {{code-example
    title='Accessible Link Target'
    language='handlebars'
    code="When you need to include an interaction target that should look like an
    anchor inside of a block of text, the <code>link</code> property can be used for
    an accessible target {{#rad-button link=true click=(action 'exampleAction')}}that
    looks like an anchor{{/rad-button}}"}}

</section>
<section>
  <h3>Properties</h3>

  <hr>

  {{#rad-tabs
    defaultTab='passedProps'
    card=true as |components|}}
    {{#components.content
      label='Passed'
      elementId='passedProps'}}
      <table class="table">
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Default</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>brand</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>
              <p>The brand class to use to style the button</p>
              <p class="small enums"><strong>Enums:</strong>primary, secondary</p>
            </td>
          </tr>
          <tr>
            <td><code>outline</code></td>
            <td>{boolean}</td>
            <td>false</td>
            <td>
              <p>When true the button will have the outline style class.</p>
            </td>
          </tr>
          <tr>
            <td><code>click</code></td>
            <td>{Function}</td>
            <td>() => {}</td>
            <td>Function called on button click.</td>
          </tr>
          <tr>
            <td><code>link</code></td>
            <td>{Boolean}</td>
            <td>false</td>
            <td>Applies a <code>.btn-link</code> class to the button to give the same visual appearance as a hyperlink</td>
          </tr>
        </tbody>
      </table>
    {{/components.content}}
    {{#components.content
      label='Analytics'
      elementId='analyticsProps'}}
      <table class="table w-100">
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Default</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>tagcategory</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Value for a Google Analytics event tag category</td>
          </tr>
          <tr>
            <td><code>tagaction</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Value for a Google Analytics event tag action</td>
          </tr>
          <tr>
            <td><code>taglabel</code></td>
            <td>{String}</td>
            <td>''</td>
            <td>Value for a Google Analytics event tag label</td>
          </tr>
          <tr>
            <td><code>tagcd</code></td>
            <td>{String|Object}</td>
            <td>''</td>
            <td>Use Ember's <code>hash</code> helper to construct a hash of custom dimensions to associate with this specific event</td>
          </tr>
          <tr>
            <td><code>taghover</code></td>
            <td>{Boolean}</td>
            <td>false</td>
            <td>Whether to fire the analytics event on hover instead of click</td>
          </tr>
          <tr>
            <td><code>tagonce</code></td>
            <td>{Boolean}</td>
            <td>false</td>
            <td>Whether to fire the analytics event a single time only. Useful in conjunction with <code>taghover</code></td>
          </tr>
        </tbody>
      </table>
    {{/components.content}}
  {{/rad-tabs}}
</section>
