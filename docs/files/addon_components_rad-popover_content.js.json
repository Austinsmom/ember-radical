{
  "file": "addon/components/rad-popover/content.js",
  "content": "<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript}\"><span aria-hidden=\"true\" role=\"presentation\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> computed <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-computed'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> hbs <span class=\"token keyword\">from</span> <span class=\"token string\">'htmlbars-inline-precompile'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> $ <span class=\"token keyword\">from</span> <span class=\"token string\">'jquery'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Utils</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> hiddenForArias <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../utils/arias'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n *\n * Popover tooltips to Make UI Great Again.â„¢\n *\n * Child component to wrap the popover content.\n *\n * @class Component.RadPopover.Content\n * @constructor\n * @extends Ember.Component\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Component<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Passed Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * The position that the tooltip is created in relative to its anchor element.\n   * Valid options are:\n   * - `\"top\"`\n   * - `\"bottom\"`\n   * - `\"left\"`\n   * - `\"right\"`\n   * - `\"bottom-left\"`\n   * - `\"bottom-right\"`\n   *\n   * Defaults to `\"bottom\"` if no value is supplied.\n   *\n   * @property position\n   * @type {string}\n   * @default ''\n   */</span>\n  position<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * The size of the tooltip itself. A list of preset sizes available are:\n   * - `\"small\"`\n   * - `\"medium\"`\n   * - `\"large\"`\n   * - `\"x-large\"`\n   *\n   * Defaults to `\"medium\"` if no value is supplied.\n   *\n   * @property size\n   * @type {string}\n   * @default ''\n   */</span>\n  size<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Unique string generated by parent `rad-popover` Used for 508 attrs. Is\n   * bound to id here and `aria-describedby` on the popover title.\n   * @property aria-describedby\n   * @type {string}\n   */</span>\n  <span class=\"token string\">'aria-describedby'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Display status of the popover. Is bound to the properties `aria-hidden` for\n   * better usability and to handle css of show/hide. Is also bound to html5\n   * `hidden` attribute.\n   * @property hidden\n   * @type {Boolean}\n   * @default true\n   */</span>\n  hidden<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * The `aria` role of this tooltip. Improves usability.\n   * @property ariaRole\n   * @type {string}\n   */</span>\n  ariaRole<span class=\"token punctuation\">:</span> <span class=\"token string\">'tooltip'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Handle binding `hidden` and `aria-hidden` for A++ usability :thumbsup:\n   * @property attributeBindings\n   * @type {Array}\n   */</span>\n  attributeBindings<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'hiddenForArias:aria-hidden'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'data-test'</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Bind wrapping classname `popover-content`\n   * @property classNames\n   * @type {Array}\n   */</span>\n  classNames<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'popover-content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Bind size and position props\n   * @property classNameBindings\n   * @type {Array}\n   */</span>\n  classNameBindings<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'position'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Computed prop returning **strings** for boolean of hidden. This is done so\n   * that `aria-hidden` is always present on component and displays either \"true\"\n   * or \"false\". (Binding boolean removes `aria-hidden` entirely when hidden is\n   * true)\n   * @property hiddenForArias\n   * @type {string}\n   * @param {string} hidden\n   */</span>\n  hiddenForArias<span class=\"token punctuation\">:</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden'</span><span class=\"token punctuation\">,</span> hiddenForArias<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Remove wrapping ember element for subcomponent, it's not needed.\n   * @property tagName\n   * @type {string}\n   */</span>\n  tagName<span class=\"token punctuation\">:</span> <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Hooks</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Handle binding passed `aria-describedby` as this component's `elementId` on\n   * init.\n   * @event init\n   * @return {undefined}\n   */</span>\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_super</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// This should never happen so long as this component is called via the</span>\n    <span class=\"token comment\" spellcheck=\"true\">// \"public\" subcomponent reference but we will leave the check here just</span>\n    <span class=\"token comment\" spellcheck=\"true\">// to be safe</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aria-describedby'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Popover requires aria-describedby'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">// This id matches the `aria-describedby` of the tooltip title.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'elementId'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aria-describedby'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Handle checking component width against window width on render. If overflowing\n   * reset the width of the popover to prevent overflow\n   * @event didRender\n   * @return {undefined}\n   */</span>\n  <span class=\"token function\">didRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> boundingRect <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'elementId'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bodyWidth <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/*\n     * If the box is centered, it will center itself back off of the page when we\n     * subtract the necessary width from the component width. In these cases, we\n     * will need to subtract twice the necessary width. The box is only ever centered\n     * when position does not contain `-left`/`-right`.\n     */</span>\n    <span class=\"token keyword\">const</span> boxIsCentered <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'top'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'bottom'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// If the left offset of content is negative, then the content is to the left of the viewport.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>boundingRect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// determine length deduction based on centered.</span>\n      <span class=\"token keyword\">const</span> widthDeduction <span class=\"token operator\">=</span> boxIsCentered <span class=\"token operator\">?</span> boundingRect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> boundingRect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// note `boundingRect.left` is negative so we add the deduction.</span>\n      <span class=\"token keyword\">const</span> newWidth <span class=\"token operator\">=</span> boundingRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> widthDeduction<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">// Udpate component with new width, problem solved</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> newWidth <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token comment\" spellcheck=\"true\">// if the right right offset is greater than the body width, it is outside of our application.</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>boundingRect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">></span> bodyWidth <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// determine length deduction based on centered.</span>\n      <span class=\"token comment\" spellcheck=\"true\">// The general deduction in this case would be the right offset of popover content minus the body width</span>\n      <span class=\"token keyword\">const</span> widthDeduction <span class=\"token operator\">=</span> boxIsCentered <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>boundingRect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> bodyWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>boundingRect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> bodyWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> newWidth <span class=\"token operator\">=</span> boundingRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> widthDeduction<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">// Udpate component with new width, problem solved</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> newWidth <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Events</span>\n  <span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Nasty touch eventses. Tricksy touch eventses. Any short touch event on this\n   * content component will fire the focusOut and the mouseLeave on the\n   * `rad-popover` element. Real abnoxious when you're trying to click something.\n   * Fire the link or button manually. Through the wonderful power of JavaScript.\n   *\n   * @event touchEnd\n   */</span>\n  <span class=\"token function\">touchEnd</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">===</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">||</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">===</span> <span class=\"token string\">'BUTTON'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Layout</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  layout<span class=\"token punctuation\">:</span> hbs<span class=\"token template-string\"><span class=\"token string\">`\n    &lt;div class=\"tip\">&lt;/div>\n    {{yield}}\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>"
}