{
  "file": "addon/components/rad-dropdown/content.js",
  "content": "<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript}\"><span aria-hidden=\"true\" role=\"presentation\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> computed <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-computed'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> hbs <span class=\"token keyword\">from</span> <span class=\"token string\">'htmlbars-inline-precompile'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> $ <span class=\"token keyword\">from</span> <span class=\"token string\">'jquery'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> hiddenForArias <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../utils/arias'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * Core dropdown content component\n *\n * @class Component.RadDropdown.Content\n * @constructor\n * @extends Ember.Component\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Component<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Passed Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Adds `dropdown-menu` class which removes padding in order to show\n   * dropdown menu items.\n   * @property dropdownMenu\n   * @type {Boolean}\n   * @passed\n   */</span>\n  dropdownMenu<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * The position that the tooltip is created in relative to its anchor element.\n   * Combine \"top\" with \"right\" to get a top and right aligned menu.\n   *\n   * Valid options are:\n   * - `\"left\"`\n   * - `\"top\"`\n   * - `\"right\"`\n   * - `\"top right\"`\n   *\n   * Defaults to `\"left\"` if no value is supplied. Passed in from parent.\n   *\n   * @property position\n   * @type {string}\n   * @passed\n   * @default ''\n   */</span>\n  position<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * String representation of boolean state for `aria` attrs.\n   * @property hiddenForArias\n   * @type {string}\n   * @param hidden\n   */</span>\n  hiddenForArias<span class=\"token punctuation\">:</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden'</span><span class=\"token punctuation\">,</span> hiddenForArias<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Ember Props</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Bind `aria-hidden` for A+ usability;\n   * Auto-binds `data-test` attribute\n   * @property attributeBindings\n   * @type {Array}\n   */</span>\n  attributeBindings<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'hiddenForArias:aria-hidden'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'aria-labelledby:aria-labelledby'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'data-test'</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Bind `dropdown-content`\n   * @property classNames\n   * @type {Array}\n   */</span>\n  classNames<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'dropdown-content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Binds `dropdown-menu` class if {{cross-link class=\"Component.RadDropdown.Content\" item=\"dropdownMenu\"}} is true. Also\n   * binds the positional class to the container\n   * @property classNameBindings\n   * @type {Array}\n   */</span>\n  classNameBindings<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'dropdownMenu:dropdown-menu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'position'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Hooks</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Handle checking component width against window width on render. If\n   * overflowing reset the width of the popover to prevent overflow.\n   * @TODO: Adjust width of dropdown to be 90/100% of viewport and center it\n   * instead of shrinking it to fit.\n   * @event didRender\n   * @return {undefined}\n   */</span>\n  <span class=\"token function\">didRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> boundingRect <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'elementId'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bodyWidth <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/*\n     * If the box is centered, it will center itself back off of the page when we\n     * subtract the necessary width from the component width. In these cases, we\n     * will need to subtract twice the necessary width. The box is only ever centered\n     * when position does not contain `-left`/`-right`.\n     */</span>\n    <span class=\"token keyword\">const</span> boxIsCentered <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// If the left offset of content is negative, then the content is to the left of the viewport.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>boundingRect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// determine length deduction based on centered.</span>\n      <span class=\"token keyword\">const</span> widthDeduction <span class=\"token operator\">=</span> boxIsCentered <span class=\"token operator\">?</span> boundingRect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> boundingRect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// note `boundingRect.left` is negative so we add the deduction.</span>\n      <span class=\"token keyword\">const</span> newWidth <span class=\"token operator\">=</span> boundingRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> widthDeduction<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">// Udpate component with new width, problem solved</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> newWidth <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token comment\" spellcheck=\"true\">// if the right right offset is greater than the body width, it is outside of our application.</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>boundingRect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">></span> bodyWidth <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// determine length deduction based on centered.</span>\n      <span class=\"token comment\" spellcheck=\"true\">// The general deduction in this case would be the right offset of popover content minus the body width</span>\n      <span class=\"token keyword\">const</span> widthDeduction <span class=\"token operator\">=</span> boxIsCentered <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>boundingRect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> bodyWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>boundingRect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> bodyWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> newWidth <span class=\"token operator\">=</span> boundingRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> widthDeduction <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">// Udpate component with new width, problem solved</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> newWidth<span class=\"token punctuation\">,</span> minWidth<span class=\"token punctuation\">:</span> <span class=\"token string\">'auto'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Events</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Nasty touch eventses. Tricksy touch eventses. Any short touch event on this\n   * content component will fire the focusOut and the mouseLeave on the\n   * `rad-dropdown` element. Real abnoxious when you're trying to click\n   * something. Fire the link or button manually. Through the wonderful power\n   * of JavaScript.\n   *\n   * @event touchEnd\n   */</span>\n  <span class=\"token function\">touchEnd</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">===</span> <span class=\"token string\">'A'</span> <span class=\"token operator\">||</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">===</span> <span class=\"token string\">'BUTTON'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Layout</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  layout<span class=\"token punctuation\">:</span> hbs<span class=\"token template-string\"><span class=\"token string\">`{{{yield}}}`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>"
}