{
  "project": {},
  "files": {
    "addon/components/rad-card/body.js": {
      "name": "addon/components/rad-card/body.js",
      "modules": {},
      "classes": {
        "Component.RadCard.Body": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-card/footer.js": {
      "name": "addon/components/rad-card/footer.js",
      "modules": {},
      "classes": {
        "Component.RadCard.Footer": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-card/title.js": {
      "name": "addon/components/rad-card/title.js",
      "modules": {},
      "classes": {
        "Component.RadCard.Title": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-drawer/content.js": {
      "name": "addon/components/rad-drawer/content.js",
      "modules": {},
      "classes": {
        "Component.RadDrawer.Content": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-drawer/target.js": {
      "name": "addon/components/rad-drawer/target.js",
      "modules": {},
      "classes": {
        "Component.RadDrawer.Target": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-dropdown/content.js": {
      "name": "addon/components/rad-dropdown/content.js",
      "modules": {},
      "classes": {
        "Component.RadDropdown.Content": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-dropdown/menu-item.js": {
      "name": "addon/components/rad-dropdown/menu-item.js",
      "modules": {},
      "classes": {
        "Component.RadDropdown.MenuItem": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-dropdown/target.js": {
      "name": "addon/components/rad-dropdown/target.js",
      "modules": {},
      "classes": {
        "Component.RadDropdown.Target": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-modal/footer.js": {
      "name": "addon/components/rad-modal/footer.js",
      "modules": {},
      "classes": {
        "Component.RadModal.Footer": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-modal/header.js": {
      "name": "addon/components/rad-modal/header.js",
      "modules": {},
      "classes": {
        "Component.RadModal.Header": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-popover/content.js": {
      "name": "addon/components/rad-popover/content.js",
      "modules": {},
      "classes": {
        "Component.RadPopover.Content": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-tabs/content.js": {
      "name": "addon/components/rad-tabs/content.js",
      "modules": {},
      "classes": {
        "Component.RadTabs.Content": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-tooltip/content.js": {
      "name": "addon/components/rad-tooltip/content.js",
      "modules": {},
      "classes": {
        "Component.RadTooltip.Content": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-tooltip/title.js": {
      "name": "addon/components/rad-tooltip/title.js",
      "modules": {},
      "classes": {
        "Component.RadTooltip.Title": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-alert.js": {
      "name": "addon/components/rad-alert.js",
      "modules": {},
      "classes": {
        "Component.RadAlert": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-button.js": {
      "name": "addon/components/rad-button.js",
      "modules": {},
      "classes": {
        "Component.RadButton": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-card.js": {
      "name": "addon/components/rad-card.js",
      "modules": {},
      "classes": {
        "Component.RadCard": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-drawer.js": {
      "name": "addon/components/rad-drawer.js",
      "modules": {},
      "classes": {
        "Component.RadDrawer": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-dropdown.js": {
      "name": "addon/components/rad-dropdown.js",
      "modules": {},
      "classes": {
        "Component.RadDropdown": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-modal.js": {
      "name": "addon/components/rad-modal.js",
      "modules": {},
      "classes": {
        "Component.RadModal": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-popover.js": {
      "name": "addon/components/rad-popover.js",
      "modules": {},
      "classes": {
        "Component.RadPopover": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-state.js": {
      "name": "addon/components/rad-state.js",
      "modules": {},
      "classes": {
        "Component.RadState": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-svg.js": {
      "name": "addon/components/rad-svg.js",
      "modules": {},
      "classes": {
        "Component.RadSVG": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-tabs.js": {
      "name": "addon/components/rad-tabs.js",
      "modules": {},
      "classes": {
        "Component.RadTabs": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/rad-tooltip.js": {
      "name": "addon/components/rad-tooltip.js",
      "modules": {},
      "classes": {
        "Component.RadTooltip": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/helpers/eq.js": {
      "name": "addon/helpers/eq.js",
      "modules": {},
      "classes": {
        "Eq": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/instance-initializers/fixed-body.js": {
      "name": "addon/instance-initializers/fixed-body.js",
      "modules": {},
      "classes": {
        "InstanceInitializer.FixedBody": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/services/tagging.js": {
      "name": "addon/services/tagging.js",
      "modules": {},
      "classes": {
        "Tagging": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/utils/arias.js": {
      "name": "addon/utils/arias.js",
      "modules": {},
      "classes": {
        "Utils.Arias": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/utils/listeners.js": {
      "name": "addon/utils/listeners.js",
      "modules": {},
      "classes": {
        "Utils.Listeners": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/utils/setup-gtm.js": {
      "name": "addon/utils/setup-gtm.js",
      "modules": {},
      "classes": {
        "Util.Analytics.SetupGTM": 1
      },
      "fors": {},
      "namespaces": {}
    }
  },
  "modules": {},
  "classes": {
    "Component.RadCard.Body": {
      "name": "Component.RadCard.Body",
      "shortname": "Component.RadCard.Body",
      "classitems": [
        {
          "file": "addon/components/rad-card/body.js",
          "line": 24,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Body",
          "srcFileId": "addon_components_rad-card_body.js"
        },
        {
          "file": "addon/components/rad-card/body.js",
          "line": 14,
          "description": "<p>Bind standard core class: <code>card-body</code></p>\n",
          "itemtype": "property",
          "name": "cardBodyClassNames",
          "type": "{Array}",
          "class": "Component.RadCard.Body",
          "srcFileId": "addon_components_rad-card_body.js"
        },
        {
          "file": "addon/components/rad-card/body.js",
          "line": 31,
          "description": "<p>Bind props to classes on the root component element.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Body",
          "srcFileId": "addon_components_rad-card_body.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-card/body.js",
      "line": 4,
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-card/body.js",
          "line": 24,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Body",
          "srcFileId": "addon_components_rad-card_body.js"
        },
        {
          "file": "addon/components/rad-card/body.js",
          "line": 14,
          "description": "<p>Bind standard core class: <code>card-body</code></p>\n",
          "itemtype": "property",
          "name": "cardBodyClassNames",
          "type": "{Array}",
          "class": "Component.RadCard.Body",
          "srcFileId": "addon_components_rad-card_body.js"
        },
        {
          "file": "addon/components/rad-card/body.js",
          "line": 31,
          "description": "<p>Bind props to classes on the root component element.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Body",
          "srcFileId": "addon_components_rad-card_body.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-card_body.js"
    },
    "Component.RadCard.Footer": {
      "name": "Component.RadCard.Footer",
      "shortname": "Component.RadCard.Footer",
      "classitems": [
        {
          "file": "addon/components/rad-card/footer.js",
          "line": 24,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Footer",
          "srcFileId": "addon_components_rad-card_footer.js"
        },
        {
          "file": "addon/components/rad-card/footer.js",
          "line": 14,
          "description": "<p>Bind standard core class: <code>card-footer</code></p>\n",
          "itemtype": "property",
          "name": "cardFooterClassNames",
          "type": "{Array}",
          "class": "Component.RadCard.Footer",
          "srcFileId": "addon_components_rad-card_footer.js"
        },
        {
          "file": "addon/components/rad-card/footer.js",
          "line": 31,
          "description": "<p>Bind props to classes on the root component element.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Footer",
          "srcFileId": "addon_components_rad-card_footer.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-card/footer.js",
      "line": 4,
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-card/footer.js",
          "line": 24,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Footer",
          "srcFileId": "addon_components_rad-card_footer.js"
        },
        {
          "file": "addon/components/rad-card/footer.js",
          "line": 14,
          "description": "<p>Bind standard core class: <code>card-footer</code></p>\n",
          "itemtype": "property",
          "name": "cardFooterClassNames",
          "type": "{Array}",
          "class": "Component.RadCard.Footer",
          "srcFileId": "addon_components_rad-card_footer.js"
        },
        {
          "file": "addon/components/rad-card/footer.js",
          "line": 31,
          "description": "<p>Bind props to classes on the root component element.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Footer",
          "srcFileId": "addon_components_rad-card_footer.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-card_footer.js"
    },
    "Component.RadCard.Title": {
      "name": "Component.RadCard.Title",
      "shortname": "Component.RadCard.Title",
      "classitems": [
        {
          "file": "addon/components/rad-card/title.js",
          "line": 24,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Title",
          "srcFileId": "addon_components_rad-card_title.js"
        },
        {
          "file": "addon/components/rad-card/title.js",
          "line": 14,
          "description": "<p>Bind standard core class: <code>card-title</code></p>\n",
          "itemtype": "property",
          "name": "cardTitleClassNames",
          "type": "{Array}",
          "class": "Component.RadCard.Title",
          "srcFileId": "addon_components_rad-card_title.js"
        },
        {
          "file": "addon/components/rad-card/title.js",
          "line": 31,
          "description": "<p>Bind props to classes on the root component element.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Title",
          "srcFileId": "addon_components_rad-card_title.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-card/title.js",
      "line": 4,
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-card/title.js",
          "line": 24,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Title",
          "srcFileId": "addon_components_rad-card_title.js"
        },
        {
          "file": "addon/components/rad-card/title.js",
          "line": 14,
          "description": "<p>Bind standard core class: <code>card-title</code></p>\n",
          "itemtype": "property",
          "name": "cardTitleClassNames",
          "type": "{Array}",
          "class": "Component.RadCard.Title",
          "srcFileId": "addon_components_rad-card_title.js"
        },
        {
          "file": "addon/components/rad-card/title.js",
          "line": 31,
          "description": "<p>Bind props to classes on the root component element.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadCard.Title",
          "srcFileId": "addon_components_rad-card_title.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-card_title.js"
    },
    "Component.RadDrawer.Content": {
      "name": "Component.RadDrawer.Content",
      "shortname": "Component.RadDrawer.Content",
      "classitems": [
        {
          "file": "addon/components/rad-drawer/content.js",
          "line": 27,
          "description": "<p>Bind <code>aria-hidden</code> for A+ usability\nBind <code>data-test</code> attr to modified <code>dataTest</code> value</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDrawer.Content",
          "srcFileId": "addon_components_rad-drawer_content.js"
        },
        {
          "file": "addon/components/rad-drawer/content.js",
          "line": 34,
          "description": "<p>Bind <code>dropdown-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDrawer.Content",
          "srcFileId": "addon_components_rad-drawer_content.js"
        },
        {
          "file": "addon/components/rad-drawer/content.js",
          "line": 17,
          "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
          "itemtype": "property",
          "name": "hiddenForArias",
          "type": "{string}",
          "class": "Component.RadDrawer.Content",
          "subprops": [
            {
              "name": "hidden",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-drawer_content.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-drawer/content.js",
      "line": 6,
      "description": "<p>Core drawer content component</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-drawer/content.js",
          "line": 27,
          "description": "<p>Bind <code>aria-hidden</code> for A+ usability\nBind <code>data-test</code> attr to modified <code>dataTest</code> value</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDrawer.Content",
          "srcFileId": "addon_components_rad-drawer_content.js"
        },
        {
          "file": "addon/components/rad-drawer/content.js",
          "line": 34,
          "description": "<p>Bind <code>dropdown-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDrawer.Content",
          "srcFileId": "addon_components_rad-drawer_content.js"
        },
        {
          "file": "addon/components/rad-drawer/content.js",
          "line": 17,
          "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
          "itemtype": "property",
          "name": "hiddenForArias",
          "type": "{string}",
          "class": "Component.RadDrawer.Content",
          "subprops": [
            {
              "name": "hidden",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-drawer_content.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-drawer_content.js"
    },
    "Component.RadDrawer.Target": {
      "name": "Component.RadDrawer.Target",
      "shortname": "Component.RadDrawer.Target",
      "classitems": [
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 44,
          "description": "<p>Bind <code>aria-expanded</code> and <code>aria-controls</code> to the root element;\nBind modified <code>dataTest</code> to <code>data-test</code> attr</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDrawer.Target",
          "srcFileId": "addon_components_rad-drawer_target.js"
        },
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 18,
          "description": "<p>Display the target content as a button instead of a plain link. Passed in\nfrom the parent <code>rad-drawer</code> and ultimately updates the <code>link</code>\nproperty on <code>rad-button</code>.</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "class": "Component.RadDrawer.Target",
          "srcFileId": "addon_components_rad-drawer_target.js"
        },
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 54,
          "description": "<p>Bind <code>drawer-target</code> and <code>basic-b</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDrawer.Target",
          "srcFileId": "addon_components_rad-drawer_target.js"
        },
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 33,
          "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
          "itemtype": "property",
          "name": "expanded",
          "type": "{string}",
          "class": "Component.RadDrawer.Target",
          "subprops": [
            {
              "name": "hidden",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-drawer_target.js"
        },
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 26,
          "description": "<p>Name of icon to display. Removes icon from display if value is falsy.</p>\n",
          "itemtype": "property",
          "name": "suppressIcon",
          "type": "{string|Boolean}",
          "default": "false",
          "class": "Component.RadDrawer.Target",
          "srcFileId": "addon_components_rad-drawer_target.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-drawer/target.js",
      "line": 6,
      "description": "<p>Core drawer target component</p>\n",
      "is_constructor": 1,
      "extends": "Component.RadButton",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 44,
          "description": "<p>Bind <code>aria-expanded</code> and <code>aria-controls</code> to the root element;\nBind modified <code>dataTest</code> to <code>data-test</code> attr</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDrawer.Target",
          "srcFileId": "addon_components_rad-drawer_target.js"
        },
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 18,
          "description": "<p>Display the target content as a button instead of a plain link. Passed in\nfrom the parent <code>rad-drawer</code> and ultimately updates the <code>link</code>\nproperty on <code>rad-button</code>.</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "class": "Component.RadDrawer.Target",
          "srcFileId": "addon_components_rad-drawer_target.js"
        },
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 54,
          "description": "<p>Bind <code>drawer-target</code> and <code>basic-b</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDrawer.Target",
          "srcFileId": "addon_components_rad-drawer_target.js"
        },
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 33,
          "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
          "itemtype": "property",
          "name": "expanded",
          "type": "{string}",
          "class": "Component.RadDrawer.Target",
          "subprops": [
            {
              "name": "hidden",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-drawer_target.js"
        },
        {
          "file": "addon/components/rad-drawer/target.js",
          "line": 26,
          "description": "<p>Name of icon to display. Removes icon from display if value is falsy.</p>\n",
          "itemtype": "property",
          "name": "suppressIcon",
          "type": "{string|Boolean}",
          "default": "false",
          "class": "Component.RadDrawer.Target",
          "srcFileId": "addon_components_rad-drawer_target.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-drawer_target.js"
    },
    "Component.RadDropdown.Content": {
      "name": "Component.RadDropdown.Content",
      "shortname": "Component.RadDropdown.Content",
      "classitems": [
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 39,
          "description": "<p>Bind <code>aria-hidden</code> for A+ usability</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 54,
          "description": "<p>Binds <code>dropdown-menu</code> class if {{cross-link class=\"Component.RadDropdown.Content\" item=\"dropdownMenu\"}} is true</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 48,
          "description": "<p>Bind <code>dropdown-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 18,
          "description": "<p>Adds <code>dropdown-menu</code> class which removes padding in order to show\ndropdown menu items.</p>\n",
          "itemtype": "property",
          "name": "dropdownMenu",
          "type": "{Boolean}",
          "passed": "",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 29,
          "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
          "itemtype": "property",
          "name": "hiddenForArias",
          "type": "{string}",
          "class": "Component.RadDropdown.Content",
          "subprops": [
            {
              "name": "hidden",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 64,
          "description": "<p>Nasty touch eventses. Tricksy touch eventses. Any short touch event on this\ncontent component will fire the focusOut and the mouseLeave on the\n<code>rad-popover</code> element. Real abnoxious when you're trying to click something.\nFire the link or button manually. Through the wonderful power of JavaScript.</p>\n",
          "itemtype": "event",
          "name": "touchEnd",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-dropdown/content.js",
      "line": 7,
      "description": "<p>Core dropdown content component</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 39,
          "description": "<p>Bind <code>aria-hidden</code> for A+ usability</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 54,
          "description": "<p>Binds <code>dropdown-menu</code> class if {{cross-link class=\"Component.RadDropdown.Content\" item=\"dropdownMenu\"}} is true</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 48,
          "description": "<p>Bind <code>dropdown-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 18,
          "description": "<p>Adds <code>dropdown-menu</code> class which removes padding in order to show\ndropdown menu items.</p>\n",
          "itemtype": "property",
          "name": "dropdownMenu",
          "type": "{Boolean}",
          "passed": "",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        },
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 29,
          "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
          "itemtype": "property",
          "name": "hiddenForArias",
          "type": "{string}",
          "class": "Component.RadDropdown.Content",
          "subprops": [
            {
              "name": "hidden",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-dropdown_content.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-dropdown/content.js",
          "line": 64,
          "description": "<p>Nasty touch eventses. Tricksy touch eventses. Any short touch event on this\ncontent component will fire the focusOut and the mouseLeave on the\n<code>rad-popover</code> element. Real abnoxious when you're trying to click something.\nFire the link or button manually. Through the wonderful power of JavaScript.</p>\n",
          "itemtype": "event",
          "name": "touchEnd",
          "class": "Component.RadDropdown.Content",
          "srcFileId": "addon_components_rad-dropdown_content.js"
        }
      ],
      "srcFileId": "addon_components_rad-dropdown_content.js"
    },
    "Component.RadDropdown.MenuItem": {
      "name": "Component.RadDropdown.MenuItem",
      "shortname": "Component.RadDropdown.MenuItem",
      "classitems": [
        {
          "file": "addon/components/rad-dropdown/menu-item.js",
          "line": 14,
          "description": "<p>Binds <code>dropdown-item</code> class</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDropdown.MenuItem",
          "srcFileId": "addon_components_rad-dropdown_menu-item.js"
        },
        {
          "file": "addon/components/rad-dropdown/menu-item.js",
          "line": 20,
          "description": "<p>Placeholder closure action for click events. If no value is passed in it\nwill just call <code>_super</code> from the original <code>RadButton</code> class and then call\nthe <code>hide</code> closure action.</p>\n",
          "itemtype": "event",
          "name": "click",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDropdown.MenuItem",
          "srcFileId": "addon_components_rad-dropdown_menu-item.js"
        },
        {
          "file": "addon/components/rad-dropdown/menu-item.js",
          "line": 38,
          "description": "<p>When attributes are received, if a prop exists for click, we assume that\nsome custom behavior has been passed in. However, this custom behavior will\noverride our default behavior of closing the dropdown menus when a menu\nitem is clicked, which is bad.</p>\n<p>So, we will compare the new value of <code>click</code> with an old value that we\nmanually store. If they are not equal, we set up a new method that calls\nsuper, runs the new behavior, and then runs the passed-in hide action. This\nalso works well for setting up default click behavior when no click action\nis passed in, as the initial value of click is a dummy closure.</p>\n<p>This method is then stored on both the <code>click</code> and <code>_click</code> properties so\nthat it can be used by default for clicks, and so that it is preserved\nfor comparison if/when a new action is passed in. Because we compare the\nold and new values, the method creation and setting should really only\nevaluate the first time attributes are passed in unless the user is doing\nsome crazy dynamic action switching, and even if they are, we have that\ncase covered here.</p>\n<p>This is also useful to safeguard against unnecessary repeated sets if OTHER\npassed properties (like branding or classNames/class or whatever else) get\nupdated even if the click action doesn't change.</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDropdown.MenuItem",
          "srcFileId": "addon_components_rad-dropdown_menu-item.js"
        },
        {
          "file": "addon/components/rad-dropdown/menu-item.js",
          "line": 28,
          "description": "<p>Closure action that hides the dropdown</p>\n",
          "itemtype": "property",
          "name": "hide",
          "closure": "",
          "class": "Component.RadDropdown.MenuItem",
          "srcFileId": "addon_components_rad-dropdown_menu-item.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-dropdown/menu-item.js",
      "line": 4,
      "description": "<p>Core dropdown menu item</p>\n",
      "is_constructor": 1,
      "extends": "Ember.RadButton",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-dropdown/menu-item.js",
          "line": 14,
          "description": "<p>Binds <code>dropdown-item</code> class</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDropdown.MenuItem",
          "srcFileId": "addon_components_rad-dropdown_menu-item.js"
        },
        {
          "file": "addon/components/rad-dropdown/menu-item.js",
          "line": 28,
          "description": "<p>Closure action that hides the dropdown</p>\n",
          "itemtype": "property",
          "name": "hide",
          "closure": "",
          "class": "Component.RadDropdown.MenuItem",
          "srcFileId": "addon_components_rad-dropdown_menu-item.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-dropdown/menu-item.js",
          "line": 20,
          "description": "<p>Placeholder closure action for click events. If no value is passed in it\nwill just call <code>_super</code> from the original <code>RadButton</code> class and then call\nthe <code>hide</code> closure action.</p>\n",
          "itemtype": "event",
          "name": "click",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDropdown.MenuItem",
          "srcFileId": "addon_components_rad-dropdown_menu-item.js"
        },
        {
          "file": "addon/components/rad-dropdown/menu-item.js",
          "line": 38,
          "description": "<p>When attributes are received, if a prop exists for click, we assume that\nsome custom behavior has been passed in. However, this custom behavior will\noverride our default behavior of closing the dropdown menus when a menu\nitem is clicked, which is bad.</p>\n<p>So, we will compare the new value of <code>click</code> with an old value that we\nmanually store. If they are not equal, we set up a new method that calls\nsuper, runs the new behavior, and then runs the passed-in hide action. This\nalso works well for setting up default click behavior when no click action\nis passed in, as the initial value of click is a dummy closure.</p>\n<p>This method is then stored on both the <code>click</code> and <code>_click</code> properties so\nthat it can be used by default for clicks, and so that it is preserved\nfor comparison if/when a new action is passed in. Because we compare the\nold and new values, the method creation and setting should really only\nevaluate the first time attributes are passed in unless the user is doing\nsome crazy dynamic action switching, and even if they are, we have that\ncase covered here.</p>\n<p>This is also useful to safeguard against unnecessary repeated sets if OTHER\npassed properties (like branding or classNames/class or whatever else) get\nupdated even if the click action doesn't change.</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDropdown.MenuItem",
          "srcFileId": "addon_components_rad-dropdown_menu-item.js"
        }
      ],
      "srcFileId": "addon_components_rad-dropdown_menu-item.js"
    },
    "Component.RadDropdown.Target": {
      "name": "Component.RadDropdown.Target",
      "shortname": "Component.RadDropdown.Target",
      "classitems": [
        {
          "file": "addon/components/rad-dropdown/target.js",
          "line": 17,
          "description": "<p>Ember fun: Attribute bindings require a value to bind on.</p>\n",
          "itemtype": "property",
          "name": "aria-haspopup",
          "type": "string",
          "class": "Component.RadDropdown.Target",
          "srcFileId": "addon_components_rad-dropdown_target.js"
        },
        {
          "file": "addon/components/rad-dropdown/target.js",
          "line": 33,
          "description": "<p>Bind <code>aria-haspopup</code> and <code>aria-expanded</code> for A+ usability</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDropdown.Target",
          "srcFileId": "addon_components_rad-dropdown_target.js"
        },
        {
          "file": "addon/components/rad-dropdown/target.js",
          "line": 39,
          "description": "<p>Bind <code>dropdown-target</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDropdown.Target",
          "srcFileId": "addon_components_rad-dropdown_target.js"
        },
        {
          "file": "addon/components/rad-dropdown/target.js",
          "line": 23,
          "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
          "itemtype": "property",
          "name": "expanded",
          "type": "{string}",
          "class": "Component.RadDropdown.Target",
          "subprops": [
            {
              "name": "hidden",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-dropdown_target.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-dropdown/target.js",
      "line": 7,
      "description": "<p>Core dropdown target component</p>\n",
      "is_constructor": 1,
      "extends": "Component.RadButton",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-dropdown/target.js",
          "line": 17,
          "description": "<p>Ember fun: Attribute bindings require a value to bind on.</p>\n",
          "itemtype": "property",
          "name": "aria-haspopup",
          "type": "string",
          "class": "Component.RadDropdown.Target",
          "srcFileId": "addon_components_rad-dropdown_target.js"
        },
        {
          "file": "addon/components/rad-dropdown/target.js",
          "line": 33,
          "description": "<p>Bind <code>aria-haspopup</code> and <code>aria-expanded</code> for A+ usability</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDropdown.Target",
          "srcFileId": "addon_components_rad-dropdown_target.js"
        },
        {
          "file": "addon/components/rad-dropdown/target.js",
          "line": 39,
          "description": "<p>Bind <code>dropdown-target</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDropdown.Target",
          "srcFileId": "addon_components_rad-dropdown_target.js"
        },
        {
          "file": "addon/components/rad-dropdown/target.js",
          "line": 23,
          "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
          "itemtype": "property",
          "name": "expanded",
          "type": "{string}",
          "class": "Component.RadDropdown.Target",
          "subprops": [
            {
              "name": "hidden",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-dropdown_target.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-dropdown_target.js"
    },
    "Component.RadModal.Footer": {
      "name": "Component.RadModal.Footer",
      "shortname": "Component.RadModal.Footer",
      "classitems": [
        {
          "file": "addon/components/rad-modal/footer.js",
          "line": 14,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['modal-footer']",
          "class": "Component.RadModal.Footer",
          "srcFileId": "addon_components_rad-modal_footer.js"
        },
        {
          "file": "addon/components/rad-modal/footer.js",
          "line": 20,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'footer'",
          "class": "Component.RadModal.Footer",
          "srcFileId": "addon_components_rad-modal_footer.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-modal/footer.js",
      "line": 4,
      "description": "<p>Simple wrapper for creating a modal footer.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-modal/footer.js",
          "line": 14,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['modal-footer']",
          "class": "Component.RadModal.Footer",
          "srcFileId": "addon_components_rad-modal_footer.js"
        },
        {
          "file": "addon/components/rad-modal/footer.js",
          "line": 20,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'footer'",
          "class": "Component.RadModal.Footer",
          "srcFileId": "addon_components_rad-modal_footer.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-modal_footer.js"
    },
    "Component.RadModal.Header": {
      "name": "Component.RadModal.Header",
      "shortname": "Component.RadModal.Header",
      "classitems": [
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 45,
          "description": "<p>If you want that header to have some pop</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{?string}",
          "passed": "",
          "optional": 1,
          "default": "null",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 100,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "class": "Component.RadModal.Header",
          "subprops": [
            {
              "name": "brand",
              "description": "",
              "type": "String"
            }
          ],
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 110,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['brandClass', 'brandClass:branded']",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 116,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['modal-header']",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 54,
          "description": "<p>Controls display of the modal header close button. Is defaulted to true and\ncan be set to false in order to suppress the header close button.</p>\n",
          "itemtype": "property",
          "name": "closeButton",
          "type": "{!Boolean}",
          "passed": "",
          "optional": 1,
          "default": "true",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 64,
          "description": "<p>Controls the SVG Id of the close button.</p>\n",
          "itemtype": "property",
          "name": "closeIcon",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'close'",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 88,
          "description": "<p>Closure action bound to header close button.</p>\n",
          "itemtype": "property",
          "name": "closeModal",
          "type": "{function}",
          "passed": "",
          "optional": 1,
          "closure": "",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 36,
          "description": "<p>The elementId of this component must be set to match the <code>aria-labelledby</code>\nof the parent component. This is handled through the contextual component\nsetup of <code>rad-modal</code></p>\n",
          "itemtype": "property",
          "name": "elementId",
          "type": "{string}",
          "passed": "Component.RadModal",
          "required": 1,
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 122,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'header'",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 73,
          "description": "<p>Pass a <code>(hash)</code> of tagging properties when you need to bind a tag fire to\nclose of the modal. Expects syntax:</p>\n<p><code>(hash category='Tag Category' action='Tag Action' label='Tag Label')</code></p>\n",
          "itemtype": "property",
          "name": "tagclose",
          "type": "{Object}",
          "passed": "",
          "optional": 1,
          "default": "null",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-modal/header.js",
      "line": 5,
      "description": "<p>Used to handle rendering a header for an Ember Radical Modal. Should always\nbe accessed via the <code>Header</code> prop or <code>components</code> hash of <code>rad-modal</code>.</p>\n<h3>Accessibility</h3>\n<p>This component should only be used as a contextual component within a\n<code>rad-modal</code> instance. The parent <code>rad-modal</code> handles setting the <code>elementId</code>\nof this component to match an <code>aria-labelledby</code> on the parent modal.\nThis ensures that screen readers are able to correctly associate the modal\nheader with the modal that it labels. Some form of a Header is always\nrequired for instances of Core Modal to ensure that they are properly\nlabelled.</p>\n<h4>Configurations</h4>\n<ul>\n<li><code>brand</code>: When accessing the header subcomponent in block form, you can use\nthis property to access and apply standard branding classes to the header,\ne.g. <code>'primary'</code> or <code>'secondary'</code> .</li>\n<li><code>closeButton</code>: Controls display of the header close button. Set to false to\nhide close button.</li>\n<li><code>tagClose</code>: Pass an object of tagging data to have a tag event fired on\nclick of header close button</li>\n</ul>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 45,
          "description": "<p>If you want that header to have some pop</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{?string}",
          "passed": "",
          "optional": 1,
          "default": "null",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 100,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "class": "Component.RadModal.Header",
          "subprops": [
            {
              "name": "brand",
              "description": "",
              "type": "String"
            }
          ],
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 110,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['brandClass', 'brandClass:branded']",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 116,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['modal-header']",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 54,
          "description": "<p>Controls display of the modal header close button. Is defaulted to true and\ncan be set to false in order to suppress the header close button.</p>\n",
          "itemtype": "property",
          "name": "closeButton",
          "type": "{!Boolean}",
          "passed": "",
          "optional": 1,
          "default": "true",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 64,
          "description": "<p>Controls the SVG Id of the close button.</p>\n",
          "itemtype": "property",
          "name": "closeIcon",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'close'",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 88,
          "description": "<p>Closure action bound to header close button.</p>\n",
          "itemtype": "property",
          "name": "closeModal",
          "type": "{function}",
          "passed": "",
          "optional": 1,
          "closure": "",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 36,
          "description": "<p>The elementId of this component must be set to match the <code>aria-labelledby</code>\nof the parent component. This is handled through the contextual component\nsetup of <code>rad-modal</code></p>\n",
          "itemtype": "property",
          "name": "elementId",
          "type": "{string}",
          "passed": "Component.RadModal",
          "required": 1,
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 122,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'header'",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        },
        {
          "file": "addon/components/rad-modal/header.js",
          "line": 73,
          "description": "<p>Pass a <code>(hash)</code> of tagging properties when you need to bind a tag fire to\nclose of the modal. Expects syntax:</p>\n<p><code>(hash category='Tag Category' action='Tag Action' label='Tag Label')</code></p>\n",
          "itemtype": "property",
          "name": "tagclose",
          "type": "{Object}",
          "passed": "",
          "optional": 1,
          "default": "null",
          "class": "Component.RadModal.Header",
          "srcFileId": "addon_components_rad-modal_header.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    "Component.RadPopover.Content": {
      "name": "Component.RadPopover.Content",
      "shortname": "Component.RadPopover.Content",
      "classitems": [
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 55,
          "description": "<p>Unique string generated by parent <code>rad-popover</code> Used for 508 attrs. Is\nbound to id here and <code>aria-describedby</code> on the popover title.</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 75,
          "description": "<p>The <code>aria</code> role of this tooltip. Improves usability.</p>\n",
          "itemtype": "property",
          "name": "ariaRole",
          "type": "{string}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 81,
          "description": "<p>Handle binding <code>hidden</code> and <code>aria-hidden</code> for A++ usability :thumbsup:</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 93,
          "description": "<p>Bind size and position props</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 87,
          "description": "<p>Bind wrapping classname <code>popover-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 136,
          "description": "<p>Handle checking component width against window width on render. If overflowing\nreset the width of the popover to prevent overflow</p>\n",
          "itemtype": "event",
          "name": "didRender",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 62,
          "description": "<p>Display status of the popover. Is bound to the properties <code>aria-hidden</code> for\nbetter usability and to handle css of show/hide. Is also bound to html5\n<code>hidden</code> attribute.</p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 99,
          "description": "<p>Computed prop returning <strong>strings</strong> for boolean of hidden. This is done so\nthat <code>aria-hidden</code> is always present on component and displays either 'true'\nor \"false\". (Binding boolean removes <code>aria-hidden</code> entirely when hidden is\ntrue)</p>\n",
          "itemtype": "property",
          "name": "hiddenForArias",
          "type": "{string}",
          "class": "Component.RadPopover.Content",
          "subprops": [
            {
              "name": "hidden",
              "description": "",
              "type": "String"
            }
          ],
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 119,
          "description": "<p>Handle binding passed <code>aria-describedby</code> as this component's <code>elementId</code> on\ninit.</p>\n",
          "itemtype": "event",
          "name": "init",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 24,
          "description": "<p>The position that the tooltip is created in relative to its anchor element.\nValid options are:</p>\n<ul>\n<li><code>'top'</code></li>\n<li><code>'bottom'</code></li>\n<li><code>'left'</code></li>\n<li><code>'right'</code></li>\n<li><code>'bottom-left'</code></li>\n<li><code>'bottom-right'</code></li>\n</ul>\n<p>Defaults to <code>'bottom'</code> if no value is supplied.</p>\n",
          "itemtype": "property",
          "name": "position",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 41,
          "description": "<p>The size of the tooltip itself. A list of preset sizes available are:</p>\n<ul>\n<li><code>'small'</code></li>\n<li><code>'medium'</code></li>\n<li><code>'large'</code></li>\n<li><code>'x-large'</code></li>\n</ul>\n<p>Defaults to <code>'medium'</code> if no value is supplied.</p>\n",
          "itemtype": "property",
          "name": "size",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 109,
          "description": "<p>Remove wrapping ember element for subcomponent, it's not needed.</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 178,
          "description": "<p>Nasty touch eventses. Tricksy touch eventses. Any short touch event on this\ncontent component will fire the focusOut and the mouseLeave on the\n<code>rad-popover</code> element. Real abnoxious when you're trying to click something.\nFire the link or button manually. Through the wonderful power of JavaScript.</p>\n",
          "itemtype": "event",
          "name": "touchEnd",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-popover/content.js",
      "line": 9,
      "description": "<p>Popover tooltips to Make UI Great Again.™\nChild component to wrap the popover content.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 55,
          "description": "<p>Unique string generated by parent <code>rad-popover</code> Used for 508 attrs. Is\nbound to id here and <code>aria-describedby</code> on the popover title.</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 75,
          "description": "<p>The <code>aria</code> role of this tooltip. Improves usability.</p>\n",
          "itemtype": "property",
          "name": "ariaRole",
          "type": "{string}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 81,
          "description": "<p>Handle binding <code>hidden</code> and <code>aria-hidden</code> for A++ usability :thumbsup:</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 93,
          "description": "<p>Bind size and position props</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 87,
          "description": "<p>Bind wrapping classname <code>popover-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 62,
          "description": "<p>Display status of the popover. Is bound to the properties <code>aria-hidden</code> for\nbetter usability and to handle css of show/hide. Is also bound to html5\n<code>hidden</code> attribute.</p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 99,
          "description": "<p>Computed prop returning <strong>strings</strong> for boolean of hidden. This is done so\nthat <code>aria-hidden</code> is always present on component and displays either 'true'\nor \"false\". (Binding boolean removes <code>aria-hidden</code> entirely when hidden is\ntrue)</p>\n",
          "itemtype": "property",
          "name": "hiddenForArias",
          "type": "{string}",
          "class": "Component.RadPopover.Content",
          "subprops": [
            {
              "name": "hidden",
              "description": "",
              "type": "String"
            }
          ],
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 24,
          "description": "<p>The position that the tooltip is created in relative to its anchor element.\nValid options are:</p>\n<ul>\n<li><code>'top'</code></li>\n<li><code>'bottom'</code></li>\n<li><code>'left'</code></li>\n<li><code>'right'</code></li>\n<li><code>'bottom-left'</code></li>\n<li><code>'bottom-right'</code></li>\n</ul>\n<p>Defaults to <code>'bottom'</code> if no value is supplied.</p>\n",
          "itemtype": "property",
          "name": "position",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 41,
          "description": "<p>The size of the tooltip itself. A list of preset sizes available are:</p>\n<ul>\n<li><code>'small'</code></li>\n<li><code>'medium'</code></li>\n<li><code>'large'</code></li>\n<li><code>'x-large'</code></li>\n</ul>\n<p>Defaults to <code>'medium'</code> if no value is supplied.</p>\n",
          "itemtype": "property",
          "name": "size",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 109,
          "description": "<p>Remove wrapping ember element for subcomponent, it's not needed.</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 136,
          "description": "<p>Handle checking component width against window width on render. If overflowing\nreset the width of the popover to prevent overflow</p>\n",
          "itemtype": "event",
          "name": "didRender",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 119,
          "description": "<p>Handle binding passed <code>aria-describedby</code> as this component's <code>elementId</code> on\ninit.</p>\n",
          "itemtype": "event",
          "name": "init",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        },
        {
          "file": "addon/components/rad-popover/content.js",
          "line": 178,
          "description": "<p>Nasty touch eventses. Tricksy touch eventses. Any short touch event on this\ncontent component will fire the focusOut and the mouseLeave on the\n<code>rad-popover</code> element. Real abnoxious when you're trying to click something.\nFire the link or button manually. Through the wonderful power of JavaScript.</p>\n",
          "itemtype": "event",
          "name": "touchEnd",
          "class": "Component.RadPopover.Content",
          "srcFileId": "addon_components_rad-popover_content.js"
        }
      ],
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    "Component.RadTabs.Content": {
      "name": "Component.RadTabs.Content",
      "shortname": "Component.RadTabs.Content",
      "classitems": [
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 103,
          "description": "<p>Computed <code>_hidden</code> accounts for whether the tab is selected (by checking\n<code>activeId</code>) &amp;&amp; if this tab has been flagged to be hidden with property\n<code>hidden</code></p>\n",
          "itemtype": "property",
          "name": "_hidden",
          "return": {
            "description": "String of true/false for use with `aria-hidden` binding",
            "type": "String"
          },
          "class": "Component.RadTabs.Content",
          "subprops": [
            {
              "name": "activeId",
              "description": "",
              "type": "String"
            },
            {
              "name": "hidden",
              "description": "",
              "type": "Boolean"
            }
          ],
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 70,
          "description": "<p>The id of the currently active tab in the scope of the rad-tabs component.\nThis is provided privately in the <code>rad-tabs</code> yield hash.</p>\n",
          "itemtype": "property",
          "name": "activeId",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 82,
          "description": "<p>Aria role <code>tabpanel</code> is bound for A++ accessibility.</p>\n",
          "itemtype": "property",
          "name": "ariaRole",
          "type": "{string}",
          "default": "tabpanel",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 89,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n<li><code>_hidden</code>: to hide this tab if it is not selected or if prop hidden is true</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 97,
          "description": "<p>Class names: <code>tabs-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 141,
          "description": "<p>Actions Up: When something changes in this component we need to let the\ncontainer tabs know by firing the <code>updateTab</code> closure action with this\ntabs changed data.</p>\n<p><em>(Currently the only change we're notifying on is the <code>hidden</code> prop)</em></p>\n",
          "itemtype": "event",
          "name": "didUpdateAttrs",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 30,
          "description": "<p>Whether this tab should be hidden from view. Useful for situations where\na tab needs to exist in a particular place in the tab ordering but may\nnot have the data it needs to display information at the time when\n<code>registerTab</code> is invoked. This allows you to make sure your tab can be\nhidden while preserving its place in the list.</p>\n",
          "itemtype": "property",
          "name": "hidden",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 123,
          "description": "<p>Handle registering with the tabs container on int by firing <code>registerTab</code>\nclosure action with this tab's data.</p>\n",
          "itemtype": "event",
          "name": "init",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 43,
          "description": "<p>The button label text of this tab. This will be passed up via a closure\naction to the containing <code>rad-tabs</code> component.</p>\n",
          "itemtype": "property",
          "name": "label",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 54,
          "description": "<p>Use this attribute to place a custom <code>data-test</code> attribute on the tab button\nfor this tab. This will allow easier, specific/direct targeting of clicking\nthis tab in automated testing.</p>\n",
          "itemtype": "property",
          "name": "tabDataTest",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-tabs/content.js",
      "line": 5,
      "description": "<p>This component is yielded by the <code>rad-tabs</code> component. The <code>activeId</code> and\nactions <code>registerTab</code> and <code>updateTab</code> are privately bound for internal use.</p>\n<p>On init each tab will register itself with the <code>rad-tabs</code> wrapping container,\npassing all its data. The <code>rad-tabs</code> container uses this to build out the\ntab buttons.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>tabs defaultTab<span class=\"token operator\">=</span><span class=\"token string\">\"dumpsterShrimp\"</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Shrimp\"</span> elementId<span class=\"token operator\">=</span><span class=\"token string\">\"dumpsterShrimp\"</span> tabDataTest<span class=\"token operator\">=</span><span class=\"token string\">\"a-nifty-tab-button\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    BRINGO<span class=\"token operator\">!</span> There<span class=\"token string\">'s some pretty good lil'</span> shrimpers <span class=\"token keyword\">in</span> here<span class=\"token punctuation\">,</span> lets check it out<span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>tabs<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 103,
          "description": "<p>Computed <code>_hidden</code> accounts for whether the tab is selected (by checking\n<code>activeId</code>) &amp;&amp; if this tab has been flagged to be hidden with property\n<code>hidden</code></p>\n",
          "itemtype": "property",
          "name": "_hidden",
          "return": {
            "description": "String of true/false for use with `aria-hidden` binding",
            "type": "String"
          },
          "class": "Component.RadTabs.Content",
          "subprops": [
            {
              "name": "activeId",
              "description": "",
              "type": "String"
            },
            {
              "name": "hidden",
              "description": "",
              "type": "Boolean"
            }
          ],
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 70,
          "description": "<p>The id of the currently active tab in the scope of the rad-tabs component.\nThis is provided privately in the <code>rad-tabs</code> yield hash.</p>\n",
          "itemtype": "property",
          "name": "activeId",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 82,
          "description": "<p>Aria role <code>tabpanel</code> is bound for A++ accessibility.</p>\n",
          "itemtype": "property",
          "name": "ariaRole",
          "type": "{string}",
          "default": "tabpanel",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 89,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n<li><code>_hidden</code>: to hide this tab if it is not selected or if prop hidden is true</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 97,
          "description": "<p>Class names: <code>tabs-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 30,
          "description": "<p>Whether this tab should be hidden from view. Useful for situations where\na tab needs to exist in a particular place in the tab ordering but may\nnot have the data it needs to display information at the time when\n<code>registerTab</code> is invoked. This allows you to make sure your tab can be\nhidden while preserving its place in the list.</p>\n",
          "itemtype": "property",
          "name": "hidden",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 43,
          "description": "<p>The button label text of this tab. This will be passed up via a closure\naction to the containing <code>rad-tabs</code> component.</p>\n",
          "itemtype": "property",
          "name": "label",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 54,
          "description": "<p>Use this attribute to place a custom <code>data-test</code> attribute on the tab button\nfor this tab. This will allow easier, specific/direct targeting of clicking\nthis tab in automated testing.</p>\n",
          "itemtype": "property",
          "name": "tabDataTest",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 141,
          "description": "<p>Actions Up: When something changes in this component we need to let the\ncontainer tabs know by firing the <code>updateTab</code> closure action with this\ntabs changed data.</p>\n<p><em>(Currently the only change we're notifying on is the <code>hidden</code> prop)</em></p>\n",
          "itemtype": "event",
          "name": "didUpdateAttrs",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        },
        {
          "file": "addon/components/rad-tabs/content.js",
          "line": 123,
          "description": "<p>Handle registering with the tabs container on int by firing <code>registerTab</code>\nclosure action with this tab's data.</p>\n",
          "itemtype": "event",
          "name": "init",
          "class": "Component.RadTabs.Content",
          "srcFileId": "addon_components_rad-tabs_content.js"
        }
      ],
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    "Component.RadTooltip.Content": {
      "name": "Component.RadTooltip.Content",
      "shortname": "Component.RadTooltip.Content",
      "classitems": [
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 21,
          "description": "<p>Unique string generated by parent <code>rad-tooltip</code> Used for 508 attrs. Is\nbound to id here and <code>aria-describedby</code> on the tooltip title. Is bound\nto id in <code>init</code> call.</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 43,
          "description": "<p>Handle binding standard core class names: <code>jsTooltipTarget</code> &amp;&amp; <code>tooltip-content</code>\n<code>jsTooltipTarget</code> is being used for css positioning. Do we want to pass that\ndirectly instead? probably.</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 70,
          "description": "<p>On render validate that the tooltip content is not overflowing the window.\nIf it is, chop off the overflow.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
          "itemtype": "event",
          "name": "didRender",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 30,
          "description": "<p>Display status of the tooltip. Is bound to the properties <code>aria-hidden</code> for\nbetter usability and to handle css of show/hide. Is also bound to html5\n<code>hidden</code> attribute.</p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 61,
          "description": "<p>Log warning if <code>aria-describedby</code> is not passed in.</p>\n",
          "itemtype": "event",
          "name": "init",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 51,
          "description": "<p><code>div</code> DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-tooltip/content.js",
      "line": 4,
      "description": "<p>CoreTooltip subcomponent for inner content. Requires properties <code>hidden</code> and\n<code>aria-describedby</code> yielded by <code>rad-tooltip</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Properties</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>aria-describedby</td>\n<td>''</td>\n<td>REQUIRED Used to bind id to tooltip title <code>aria-describedby</code> attr</td>\n</tr>\n<tr>\n<td>hidden</td>\n<td>true</td>\n<td>Boolean that toggles <code>aria-hidden</code> attribute to handle show/hide of content</td>\n</tr>\n</tbody>\n</table>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 21,
          "description": "<p>Unique string generated by parent <code>rad-tooltip</code> Used for 508 attrs. Is\nbound to id here and <code>aria-describedby</code> on the tooltip title. Is bound\nto id in <code>init</code> call.</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 43,
          "description": "<p>Handle binding standard core class names: <code>jsTooltipTarget</code> &amp;&amp; <code>tooltip-content</code>\n<code>jsTooltipTarget</code> is being used for css positioning. Do we want to pass that\ndirectly instead? probably.</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 30,
          "description": "<p>Display status of the tooltip. Is bound to the properties <code>aria-hidden</code> for\nbetter usability and to handle css of show/hide. Is also bound to html5\n<code>hidden</code> attribute.</p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 51,
          "description": "<p><code>div</code> DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 70,
          "description": "<p>On render validate that the tooltip content is not overflowing the window.\nIf it is, chop off the overflow.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
          "itemtype": "event",
          "name": "didRender",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        },
        {
          "file": "addon/components/rad-tooltip/content.js",
          "line": 61,
          "description": "<p>Log warning if <code>aria-describedby</code> is not passed in.</p>\n",
          "itemtype": "event",
          "name": "init",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadTooltip.Content",
          "srcFileId": "addon_components_rad-tooltip_content.js"
        }
      ],
      "srcFileId": "addon_components_rad-tooltip_content.js"
    },
    "Component.RadTooltip.Title": {
      "name": "Component.RadTooltip.Title",
      "shortname": "Component.RadTooltip.Title",
      "classitems": [
        {
          "file": "addon/components/rad-tooltip/title.js",
          "line": 35,
          "description": "<p>Unique string generated by parent <code>rad-tooltip</code> Used for 508 attrs. Is\nbound to the <code>aria-describedby</code> attr.</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "class": "Component.RadTooltip.Title",
          "srcFileId": "addon_components_rad-tooltip_title.js"
        },
        {
          "file": "addon/components/rad-tooltip/title.js",
          "line": 58,
          "description": "<p>Handle binding standard core class name <code>tooltip-title</code> and <code>basic-b</code>\nbound for display purposes</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadTooltip.Title",
          "srcFileId": "addon_components_rad-tooltip_title.js"
        },
        {
          "file": "addon/components/rad-tooltip/title.js",
          "line": 46,
          "description": "<p>Tooltips are tagged on hover by default. <code>RadButton</code> will check this flag\nand the existence of <code>tagcategory</code> on mouseEnter. This means if you need\nto fire a tag on hover, you only have to pass <code>tagcategory</code>.</p>\n",
          "itemtype": "property",
          "name": "taghover",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadTooltip.Title",
          "srcFileId": "addon_components_rad-tooltip_title.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-tooltip/title.js",
      "line": 17,
      "description": "<p>CoreTooltip subcomponent extends the <code>RadButton</code> component. Requires\n<code>aria-describedby</code> to bind to html attribute.</p>\n<table>\n<thead>\n<tr>\n<th>Properties</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>aria-describedby</td>\n<td>''</td>\n<td>REQUIRED Used to bind html <code>aria-describedby</code> attribute to tooltip content id</td>\n</tr>\n<tr>\n<td>basic</td>\n<td><code>true</code></td>\n<td>Button <code>basic</code> class status. Pass false for a button style target</td>\n</tr>\n<tr>\n<td>link</td>\n<td><code>true</code></td>\n<td>Button <code>link</code> class status. Pass false to suppress link styles</td>\n</tr>\n</tbody>\n</table>\n",
      "is_constructor": 1,
      "extends": "Component.RadButton",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-tooltip/title.js",
          "line": 35,
          "description": "<p>Unique string generated by parent <code>rad-tooltip</code> Used for 508 attrs. Is\nbound to the <code>aria-describedby</code> attr.</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "class": "Component.RadTooltip.Title",
          "srcFileId": "addon_components_rad-tooltip_title.js"
        },
        {
          "file": "addon/components/rad-tooltip/title.js",
          "line": 58,
          "description": "<p>Handle binding standard core class name <code>tooltip-title</code> and <code>basic-b</code>\nbound for display purposes</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadTooltip.Title",
          "srcFileId": "addon_components_rad-tooltip_title.js"
        },
        {
          "file": "addon/components/rad-tooltip/title.js",
          "line": 46,
          "description": "<p>Tooltips are tagged on hover by default. <code>RadButton</code> will check this flag\nand the existence of <code>tagcategory</code> on mouseEnter. This means if you need\nto fire a tag on hover, you only have to pass <code>tagcategory</code>.</p>\n",
          "itemtype": "property",
          "name": "taghover",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadTooltip.Title",
          "srcFileId": "addon_components_rad-tooltip_title.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-tooltip_title.js"
    },
    "Component.RadAlert": {
      "name": "Component.RadAlert",
      "shortname": "Component.RadAlert",
      "classitems": [
        {
          "file": "addon/components/rad-alert.js",
          "line": 122,
          "description": "<p>Allows for quick and easy dismissal of the alert. The alert is faded from\nview, then totally removed from the DOM and the component instance is\ndestroyed.</p>\n",
          "itemtype": "method",
          "name": "_selfDestruct",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 141,
          "description": "<p>Actions hash</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 95,
          "description": "<p>A++ accessibility. Tells a screen this component is an alert.</p>\n",
          "itemtype": "property",
          "name": "ariaRole",
          "type": "{string}",
          "default": "'alert'",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 45,
          "description": "<p>Specify brand, component handles assigning correct css class</p>\n",
          "itemtype": "property",
          "name": "brand",
          "default": "''",
          "type": "{string}",
          "access": "public",
          "tagname": "",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 84,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "access": "private",
          "tagname": "",
          "class": "Component.RadAlert",
          "subprops": [
            {
              "name": "'brand'",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 53,
          "description": "<p>Whether this alert can be dismissed via the close button in the upper right\ncorner. Defaults to true. Adds an interactive close button to the alert.</p>\n<p><strong>Usage:</strong>\nOverride by passing <code>false</code> into this param in your handlebars template:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert canDismiss<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span> Standard template content goes here <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
          "itemtype": "property",
          "name": "canDismiss",
          "type": "{boolean}",
          "default": "true",
          "access": "public",
          "tagname": "",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 112,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['brandClass']",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 106,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['rad-alert']",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 147,
          "description": "<p>A proxy action for the selfDestruct method</p>\n",
          "itemtype": "method",
          "name": "dismiss",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 72,
          "description": "<p>Contains optional action that is executed when the alert is dismissed.\nThis action will be executed before the alert is destroyed.</p>\n",
          "itemtype": "property",
          "name": "onDismiss",
          "type": "{function}",
          "default": "() => {}",
          "access": "public",
          "tagname": "",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-alert.js",
      "line": 5,
      "description": "<p>Multi-use alerts for in-page error messaging, pop-up alerts, notifications,\nand more.</p>\n<h3>Usage</h3>\n<h4>1. Basic usage</h4>\n<p>Alerts accept a <code>brand</code> property to change the alert color.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert brand<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Even hunks were boys once<span class=\"token punctuation\">.</span> Pretty little boy hunks<span class=\"token operator\">!</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert brand<span class=\"token operator\">=</span><span class=\"token string\">\"secondary\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>If you're raking the leaves and it gets all over your driveway<span class=\"token punctuation\">,</span> just hose it off dummy<span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert brand<span class=\"token operator\">=</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>You have smelly body parts<span class=\"token operator\">?</span> Smelly under your arms<span class=\"token operator\">?</span> In the armpits<span class=\"token operator\">?</span> Just… just put some vinegar on it<span class=\"token operator\">!</span> Why didn't you think <span class=\"token keyword\">of</span> that<span class=\"token operator\">?</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert brand<span class=\"token operator\">=</span><span class=\"token string\">\"info\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>I'll be brack<span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert brand<span class=\"token operator\">=</span><span class=\"token string\">\"warning\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Life comes <span class=\"token keyword\">from</span> eggs<span class=\"token punctuation\">.</span> Not just <span class=\"token keyword\">for</span> omelettes<span class=\"token punctuation\">,</span> ya dingus<span class=\"token punctuation\">,</span> you could make a baby boy or a baby girl too<span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert brand<span class=\"token operator\">=</span><span class=\"token string\">\"danger\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Go to bed early you doofus<span class=\"token punctuation\">,</span> 'cause when you're sleeping there's no lonely times<span class=\"token punctuation\">,</span> just dreams<span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-alert brand=\"primary\"}}Even hunks were boys once. Pretty little boy hunks!{{/rad-alert}}\n{{#rad-alert brand=\"secondary\"}}If you're raking the leaves and it gets all over your driveway, just hose it off dummy.{{/rad-alert}}\n{{#rad-alert brand=\"success\"}}You have smelly body parts? Smelly under your arms? In the armpits? Just… just put some vinegar on it! Why didn't you think of that?{{/rad-alert}}\n{{#rad-alert brand=\"info\"}}I'll be brack.{{/rad-alert}}\n{{#rad-alert brand=\"warning\"}}Life comes from eggs. Not just for omelettes, ya dingus, you could make a baby boy or a baby girl too.{{/rad-alert}}\n{{#rad-alert brand=\"danger\"}}Go to bed early you doofus, 'cause when you're sleeping there's no lonely times, just dreams.{{/rad-alert}}</p>\n<h4>2. Dismissing</h4>\n<p>By default alerts are dismissible. You can disable this by passing a\n<code>canDismiss</code> property.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert brand<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> canDismiss<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Try to dismiss <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> ya dingus<span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-alert brand=\"primary\" canDismiss=false}}Try to dismiss this, ya dingus.{{/rad-alert}}</p>\n<p>When alerts are dismissed they also fire an <code>onDismiss</code> action.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert brand<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> onDismiss<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>action <span class=\"token string\">\"handleDismiss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Dismiss me<span class=\"token operator\">!</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-alert.js",
          "line": 122,
          "description": "<p>Allows for quick and easy dismissal of the alert. The alert is faded from\nview, then totally removed from the DOM and the component instance is\ndestroyed.</p>\n",
          "itemtype": "method",
          "name": "_selfDestruct",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 147,
          "description": "<p>A proxy action for the selfDestruct method</p>\n",
          "itemtype": "method",
          "name": "dismiss",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-alert.js",
          "line": 141,
          "description": "<p>Actions hash</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 95,
          "description": "<p>A++ accessibility. Tells a screen this component is an alert.</p>\n",
          "itemtype": "property",
          "name": "ariaRole",
          "type": "{string}",
          "default": "'alert'",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 45,
          "description": "<p>Specify brand, component handles assigning correct css class</p>\n",
          "itemtype": "property",
          "name": "brand",
          "default": "''",
          "type": "{string}",
          "access": "public",
          "tagname": "",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 84,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "access": "private",
          "tagname": "",
          "class": "Component.RadAlert",
          "subprops": [
            {
              "name": "'brand'",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 53,
          "description": "<p>Whether this alert can be dismissed via the close button in the upper right\ncorner. Defaults to true. Adds an interactive close button to the alert.</p>\n<p><strong>Usage:</strong>\nOverride by passing <code>false</code> into this param in your handlebars template:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert canDismiss<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span> Standard template content goes here <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
          "itemtype": "property",
          "name": "canDismiss",
          "type": "{boolean}",
          "default": "true",
          "access": "public",
          "tagname": "",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 112,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['brandClass']",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 106,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['rad-alert']",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        },
        {
          "file": "addon/components/rad-alert.js",
          "line": 72,
          "description": "<p>Contains optional action that is executed when the alert is dismissed.\nThis action will be executed before the alert is destroyed.</p>\n",
          "itemtype": "property",
          "name": "onDismiss",
          "type": "{function}",
          "default": "() => {}",
          "access": "public",
          "tagname": "",
          "class": "Component.RadAlert",
          "srcFileId": "addon_components_rad-alert.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-alert.js"
    },
    "Component.RadButton": {
      "name": "Component.RadButton",
      "shortname": "Component.RadButton",
      "classitems": [
        {
          "file": "addon/components/rad-button.js",
          "line": 33,
          "description": "<p>Internal method that handles firiing a tag with or without custom dimensions.</p>\n",
          "itemtype": "method",
          "name": "_fireTag",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 168,
          "description": "<p>ALLLLLLLLLLL the attributes you might need.\nNOTE: <code>role</code> should not be bound here. You can set the role of a button\nby passing an <a href=\"http://emberjs.com/api/classes/Ember.Component.html#property_ariaRole\">ariaRole</a> prop.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 56,
          "description": "<p>Pass a brand to have <code>btn-${brand}</code> class applied</p>\n",
          "itemtype": "property",
          "name": "brand",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{?string}",
          "default": "null",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 154,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "class": "Component.RadButton",
          "subprops": [
            {
              "name": "'brand'",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 195,
          "description": "<p>Handle binding brand and link related css class names</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 186,
          "description": "<p>Bind standard rad classname for component: <code>rad-button</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 144,
          "description": "<p>Behavior to execute when clicking the button; pass any closure action in and Ember's built-in click event listener will execute it for you.</p>\n",
          "itemtype": "property",
          "name": "click",
          "access": "public",
          "tagname": "",
          "passed": "",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 65,
          "description": "<p>Pass true to create a button that looks and behaves like a link. This is\nuseful for creating accessible interaction targets.</p>\n",
          "itemtype": "property",
          "name": "link",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 222,
          "description": "<p>The <code>mouseDown</code> event is used for some utility/housekeeping methods because\nwe use the <code>click</code> event to pass in actions.</p>\n<p>Handle setting the outline on this element to <code>none</code> because we know this\nevent is only triggered by actual mouse clicks. Keyboard events don't trigger\nit, which is a convenient way to know we're good to hide the outline and\nmaintain usability for keyboard users. A++ accessibility!</p>\n<p>Handle checking for a tagging category and if one exists, fire a tag.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
          "itemtype": "event",
          "name": "mouseDown",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 253,
          "description": "<p>The <code>mouseEnter</code> checks for a tagging category and hover flag. If they're\npresent a tag is fired.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code>\nTODO: Only include this if Tagging feature is enabled</p>\n",
          "itemtype": "event",
          "name": "mouseEnter",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 204,
          "description": "<p>Button DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'button'",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 84,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagaction",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 75,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagcategory",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 113,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagcd",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Object}",
          "default": "null",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 122,
          "description": "<p>Tagging property. Handles firing a tag on hover when true.</p>\n",
          "itemtype": "property",
          "name": "taghover",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 93,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation. Set to undefined\nso the tagging service will properly correct an un-passed value.</p>\n",
          "itemtype": "property",
          "name": "taglabel",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "null",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 131,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagonce",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 104,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagvalue",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 211,
          "description": "<p>Include type button for usability.</p>\n",
          "itemtype": "property",
          "name": "type",
          "type": "{string}",
          "default": "'button'",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-button.js",
      "line": 6,
      "description": "<p>The <code>rad-button</code> component is used for all user interaction targets in Ember\nRadical. The component handles a number of housekeeping tasks including:</p>\n<ul>\n<li>Outline suppression only on clicks</li>\n<li>Tag firing when enabled</li>\n<li>Aria and html attributes</li>\n</ul>\n<p>{{#rad-button}}Rad Button{{/rad-button}}</p>\n<table>\n<thead>\n<tr>\n<th>Configuration</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>link</code></td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>Toggles the <code>.btn-link</code> class, making the button look and act like a link</td>\n</tr>\n<tr>\n<td><code>brand</code></td>\n<td>{'primary', 'secondary', 'info' etc. }</td>\n<td><code>null</code></td>\n<td>Toggles brand class for a branded button</td>\n</tr>\n</tbody>\n</table>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-button.js",
          "line": 33,
          "description": "<p>Internal method that handles firiing a tag with or without custom dimensions.</p>\n",
          "itemtype": "method",
          "name": "_fireTag",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-button.js",
          "line": 168,
          "description": "<p>ALLLLLLLLLLL the attributes you might need.\nNOTE: <code>role</code> should not be bound here. You can set the role of a button\nby passing an <a href=\"http://emberjs.com/api/classes/Ember.Component.html#property_ariaRole\">ariaRole</a> prop.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 56,
          "description": "<p>Pass a brand to have <code>btn-${brand}</code> class applied</p>\n",
          "itemtype": "property",
          "name": "brand",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{?string}",
          "default": "null",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 154,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "class": "Component.RadButton",
          "subprops": [
            {
              "name": "'brand'",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 195,
          "description": "<p>Handle binding brand and link related css class names</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 186,
          "description": "<p>Bind standard rad classname for component: <code>rad-button</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 144,
          "description": "<p>Behavior to execute when clicking the button; pass any closure action in and Ember's built-in click event listener will execute it for you.</p>\n",
          "itemtype": "property",
          "name": "click",
          "access": "public",
          "tagname": "",
          "passed": "",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 65,
          "description": "<p>Pass true to create a button that looks and behaves like a link. This is\nuseful for creating accessible interaction targets.</p>\n",
          "itemtype": "property",
          "name": "link",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 204,
          "description": "<p>Button DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'button'",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 84,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagaction",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 75,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagcategory",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 113,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagcd",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Object}",
          "default": "null",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 122,
          "description": "<p>Tagging property. Handles firing a tag on hover when true.</p>\n",
          "itemtype": "property",
          "name": "taghover",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 93,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation. Set to undefined\nso the tagging service will properly correct an un-passed value.</p>\n",
          "itemtype": "property",
          "name": "taglabel",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "null",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 131,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagonce",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 104,
          "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
          "itemtype": "property",
          "name": "tagvalue",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 211,
          "description": "<p>Include type button for usability.</p>\n",
          "itemtype": "property",
          "name": "type",
          "type": "{string}",
          "default": "'button'",
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-button.js",
          "line": 222,
          "description": "<p>The <code>mouseDown</code> event is used for some utility/housekeeping methods because\nwe use the <code>click</code> event to pass in actions.</p>\n<p>Handle setting the outline on this element to <code>none</code> because we know this\nevent is only triggered by actual mouse clicks. Keyboard events don't trigger\nit, which is a convenient way to know we're good to hide the outline and\nmaintain usability for keyboard users. A++ accessibility!</p>\n<p>Handle checking for a tagging category and if one exists, fire a tag.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
          "itemtype": "event",
          "name": "mouseDown",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        },
        {
          "file": "addon/components/rad-button.js",
          "line": 253,
          "description": "<p>The <code>mouseEnter</code> checks for a tagging category and hover flag. If they're\npresent a tag is fired.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code>\nTODO: Only include this if Tagging feature is enabled</p>\n",
          "itemtype": "event",
          "name": "mouseEnter",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadButton",
          "srcFileId": "addon_components_rad-button.js"
        }
      ],
      "srcFileId": "addon_components_rad-button.js"
    },
    "Component.RadCard": {
      "name": "Component.RadCard",
      "shortname": "Component.RadCard",
      "classitems": [
        {
          "file": "addon/components/rad-card.js",
          "line": 93,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 65,
          "itemtype": "property",
          "name": "bodyComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-card/body'",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 30,
          "description": "<p>Pass a brand to use to style the component and it's child components.</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 100,
          "description": "<p>Computed css class for the brand bound to the component.</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{String}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 37,
          "description": "<p>Custom className(s) to use on the body subcomponent's root element</p>\n",
          "itemtype": "property",
          "name": "cardBodyClassNames",
          "type": "{string}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 43,
          "description": "<p>Custom className(s) to use on <code>rad-card</code>'s root element</p>\n",
          "itemtype": "property",
          "name": "cardClassNames",
          "type": "{string}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 49,
          "description": "<p>Custom className(s) to use on the footer subcomponent's root element</p>\n",
          "itemtype": "property",
          "name": "cardFooterClassNames",
          "type": "{string}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 55,
          "description": "<p>Custom className(s) to use on the title subcomponent's root element</p>\n",
          "itemtype": "property",
          "name": "cardTitleClassNames",
          "type": "{string}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 114,
          "description": "<p>Bind props to classes on the root component element.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 108,
          "description": "<p>Bind standard core class: <code>card-footer</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 73,
          "itemtype": "property",
          "name": "footerComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-card/footer'",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 81,
          "itemtype": "property",
          "name": "titleComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-card/title'",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-card.js",
      "line": 5,
      "description": "<p>Core card.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>card <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Card title<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Card body<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>footer<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Card footer<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>footer<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>card<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-card as |components|}}\n{{#components.title}}Party Time{{/components.title}}\n{{#components.body}}<img src=\"http://i.giphy.com/125RIkH7IluIpy.gif\"/>{{/components.body}}\n{{/rad-card}}</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-card.js",
          "line": 93,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 65,
          "itemtype": "property",
          "name": "bodyComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-card/body'",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 30,
          "description": "<p>Pass a brand to use to style the component and it's child components.</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 100,
          "description": "<p>Computed css class for the brand bound to the component.</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{String}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 37,
          "description": "<p>Custom className(s) to use on the body subcomponent's root element</p>\n",
          "itemtype": "property",
          "name": "cardBodyClassNames",
          "type": "{string}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 43,
          "description": "<p>Custom className(s) to use on <code>rad-card</code>'s root element</p>\n",
          "itemtype": "property",
          "name": "cardClassNames",
          "type": "{string}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 49,
          "description": "<p>Custom className(s) to use on the footer subcomponent's root element</p>\n",
          "itemtype": "property",
          "name": "cardFooterClassNames",
          "type": "{string}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 55,
          "description": "<p>Custom className(s) to use on the title subcomponent's root element</p>\n",
          "itemtype": "property",
          "name": "cardTitleClassNames",
          "type": "{string}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 114,
          "description": "<p>Bind props to classes on the root component element.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 108,
          "description": "<p>Bind standard core class: <code>card-footer</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 73,
          "itemtype": "property",
          "name": "footerComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-card/footer'",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        },
        {
          "file": "addon/components/rad-card.js",
          "line": 81,
          "itemtype": "property",
          "name": "titleComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-card/title'",
          "class": "Component.RadCard",
          "srcFileId": "addon_components_rad-card.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-card.js"
    },
    "Component.RadDrawer": {
      "name": "Component.RadDrawer",
      "shortname": "Component.RadDrawer",
      "classitems": [
        {
          "file": "addon/components/rad-drawer.js",
          "line": 210,
          "description": "<p>Actions Hash</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 146,
          "description": "<p>Unique id for binding <code>aria-controls</code> in subcomponents</p>\n",
          "itemtype": "property",
          "name": "ariaId",
          "type": "{string}",
          "class": "Component.RadDrawer",
          "subprops": [
            {
              "name": "elementId",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 176,
          "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 100,
          "description": "<p>By default, the <code>target</code> subcomponent will display as a plain link. If you\nwould like it to display as a button, set this to <code>true</code>.</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 153,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['hidden::active']",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 159,
          "description": "<p>Bind <code>rad-drawer</code> to component</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 134,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-drawer/content'",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 187,
          "description": "<p>The component's <code>didReceiveAttrs</code> hook. Allows udpates from external state\nto adjust the <code>hidden</code> state of a <code>rad-drawer</code> instance.</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 107,
          "description": "<p>Allow for external controls to update the open/closed state of a <code>rad-drawer</code></p>\n",
          "itemtype": "property",
          "name": "externalToggle",
          "type": "{Boolean}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 165,
          "description": "<p>State boolean for display of the drawer content. Is toggled true/false to\nhandle show/hide. Updated in <code>toggleHidden</code></p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 113,
          "description": "<p>If you want to use a different SVG icon from the default on your <code>target</code>,\nspecify it by name/id here. If you don't want to display an icon\nat all, pass <code>false</code> into this property</p>\n",
          "itemtype": "property",
          "name": "icon",
          "type": "{string|Boolean}",
          "default": "'arrow-down'",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 216,
          "description": "<p>Toggle internal hidden property. Pass state boolean if specific state is needed.</p>\n",
          "itemtype": "method",
          "name": "toggleHidden",
          "params": [
            {
              "name": "evt",
              "description": "<p>Event object</p>\n",
              "type": "Object"
            },
            {
              "name": "state",
              "description": "<p>Specific state to set</p>\n",
              "type": "Boolean",
              "optional": true
            }
          ],
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-drawer.js",
      "line": 6,
      "description": "<p>Fully accessible expandable drawer/expandable content component.\nThe <code>rad-drawer</code> component is the parent container for a set of <code>target</code> and\n<code>content</code> subcomponents, which represent the title/trigger text to open the\ndrawer and the content to be revealed within the drawer, respectively.</p>\n<h2>Usage</h2>\n<p>There are two ways to use <code>rad-drawer</code>'s subcomponents:</p>\n<h3>1. Simple invocation via attrs</h3>\n<p>If you only have simple text (or pre-determined text/HTML within a variable)\nto yield, you can simply use the <code>Target</code> and <code>Content</code> attrs on <code>rad-drawer</code> to auto-invoke the subcomponents, like so:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>drawer\n  Target<span class=\"token operator\">=</span><span class=\"token string\">'Click to read more about puppies'</span>\n  Content<span class=\"token operator\">=</span><span class=\"token string\">'Imagine five paragraphs about puppies instead of this one sentence.'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{rad-drawer\nTarget='Click to read more about puppies'\nContent='Imagine five paragraphs about puppies instead of this one sentence.'}}</p>\n<p>This is the easiest and quickest way to create an instance of <code>rad-drawer</code>.</p>\n<h3>2. Full invocation via contextual components</h3>\n<p>If you have more complex needs in terms of the text/html/template code\nthat needs to exist in either the <code>target</code> or <code>content</code> subcomponents,\n<code>rad-drawer</code> yields contextual components for both which you can access\ndirectly within the block invocation of <code>rad-drawer</code>.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>drawer <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>This is a very large drawer that will be hard to not see<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">\"https://media.giphy.com/media/6Bfnhb5jQqvny/giphy.gif\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>drawer<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-drawer as |components|}}\n{{#components.target}}\n<h2>This is a very large drawer that will be hard to not see</h2>\n{{/components.target}}\n{{#components.content}}\n<img src=\"https://media.giphy.com/media/6Bfnhb5jQqvny/giphy.gif\" alt=\"\" />\n{{/components.content}}\n{{/rad-drawer}}</p>\n<p>You can also combine the use of attrs and contextual components:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>drawer Target<span class=\"token operator\">=</span><span class=\"token string\">'Click me! Come on, do it!'</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">\"https://media.giphy.com/media/RDG5Q86EJiNTG/giphy.gif\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>drawer<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-drawer Target='Click me! Come on, do it!' as |components|}}\n{{#components.content}}\n<img src=\"https://media.giphy.com/media/RDG5Q86EJiNTG/giphy.gif\" alt=\"\" />\n{{/components.content}}\n{{/rad-drawer}}</p>\n<p>Additionally, the open/closed state of a <code>rad-drawer</code> can be updated from\nan external state source. This can be very useful for situations where you\nwant another user interaction to trigger a drawer to open, or for setting\na drawer to be open by default. For example, you may wish to use a button to\nautomatically expand or collapse all core drawer instances at once.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>button click<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>action <span class=\"token string\">'changeSomeProp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Toggle Drawer<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>button<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>drawer Target<span class=\"token operator\">=</span><span class=\"token string\">'Hello'</span> Content<span class=\"token operator\">=</span><span class=\"token string\">'I am open now'</span> externalToggle<span class=\"token operator\">=</span>someProp<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-state as |state stateActions|}}\n{{#rad-button click=(action stateActions.toggleState)}}Toggle Drawer{{/rad-button}}\n{{rad-drawer Target='Hello' Content='I am open now' externalToggle=state}}\n{{/rad-state}}</p>\n<p><code>rad-drawer</code> will still continue to function normally with this property\npassed in, but it gives you the ability to control it externally.</p>\n<h2>Properties</h2>\n<table>\n<thead>\n<tr>\n<th>Configuration</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>externalToggle</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Pass in any other property to cause <code>rad-drawer</code> to update when that property updates</td>\n</tr>\n<tr>\n<td><code>icon</code></td>\n<td>string/boolean</td>\n<td>'arrow-down'</td>\n<td>Specifies which SVG icon to show in the <code>target</code>. Hides the icon if set to <code>false</code></td>\n</tr>\n<tr>\n<td><code>buttonStyle</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Whether to style the <code>target</code> to look like a button</td>\n</tr>\n</tbody>\n</table>\n<h2>A++ Accessibility Features</h2>\n<ul>\n<li>Drawer target auto-binds <code>aria-controls</code> to the value of the component ID</li>\n<li>Drawer target auto-binds <code>aria-expanded</code> to the expanded/collapsed state</li>\n<li>Show/hide of <code>content</code> is managed through <code>aria-hidden</code> attr</li>\n</ul>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-drawer.js",
          "line": 216,
          "description": "<p>Toggle internal hidden property. Pass state boolean if specific state is needed.</p>\n",
          "itemtype": "method",
          "name": "toggleHidden",
          "params": [
            {
              "name": "evt",
              "description": "<p>Event object</p>\n",
              "type": "Object"
            },
            {
              "name": "state",
              "description": "<p>Specific state to set</p>\n",
              "type": "Boolean",
              "optional": true
            }
          ],
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-drawer.js",
          "line": 210,
          "description": "<p>Actions Hash</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 146,
          "description": "<p>Unique id for binding <code>aria-controls</code> in subcomponents</p>\n",
          "itemtype": "property",
          "name": "ariaId",
          "type": "{string}",
          "class": "Component.RadDrawer",
          "subprops": [
            {
              "name": "elementId",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 176,
          "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 100,
          "description": "<p>By default, the <code>target</code> subcomponent will display as a plain link. If you\nwould like it to display as a button, set this to <code>true</code>.</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 153,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['hidden::active']",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 159,
          "description": "<p>Bind <code>rad-drawer</code> to component</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 134,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-drawer/content'",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 107,
          "description": "<p>Allow for external controls to update the open/closed state of a <code>rad-drawer</code></p>\n",
          "itemtype": "property",
          "name": "externalToggle",
          "type": "{Boolean}",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 165,
          "description": "<p>State boolean for display of the drawer content. Is toggled true/false to\nhandle show/hide. Updated in <code>toggleHidden</code></p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        },
        {
          "file": "addon/components/rad-drawer.js",
          "line": 113,
          "description": "<p>If you want to use a different SVG icon from the default on your <code>target</code>,\nspecify it by name/id here. If you don't want to display an icon\nat all, pass <code>false</code> into this property</p>\n",
          "itemtype": "property",
          "name": "icon",
          "type": "{string|Boolean}",
          "default": "'arrow-down'",
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-drawer.js",
          "line": 187,
          "description": "<p>The component's <code>didReceiveAttrs</code> hook. Allows udpates from external state\nto adjust the <code>hidden</code> state of a <code>rad-drawer</code> instance.</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDrawer",
          "srcFileId": "addon_components_rad-drawer.js"
        }
      ],
      "srcFileId": "addon_components_rad-drawer.js"
    },
    "Component.RadDropdown": {
      "name": "Component.RadDropdown",
      "shortname": "Component.RadDropdown",
      "classitems": [
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 153,
          "description": "<p>Stored reference to <code>run.later</code> created in <code>mouseLeave</code> that will close any\nopen dropdown. Is used in <code>mouseEnter</code> to cancel auto close.</p>\n",
          "itemtype": "property",
          "name": "_autoCloseRunLater",
          "type": "{?Function}",
          "default": "null",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 195,
          "description": "<p>When the dropdown is opened, bind an event listener that will close it if\nthe user clicks anywhere other than the dropdown.</p>\n",
          "itemtype": "method",
          "name": "_bindDropdownListeners",
          "access": "protected",
          "tagname": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 212,
          "description": "<p>Remove click listener from body. Used to DRY up our cleanup code in the\nsupported click and mouse out close liseners.</p>\n",
          "itemtype": "method",
          "name": "_unbindClickListener",
          "access": "protected",
          "tagname": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 274,
          "description": "<p>Actions</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 172,
          "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 76,
          "description": "<p>When <code>autoClose</code> is set to true, the dropdown will automatically close\nitself 2.5sec after the user mouses out of it.</p>\n",
          "itemtype": "property",
          "name": "autoClose",
          "type": "{Boolean}",
          "passed": "",
          "optional": 1,
          "default": "false",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 86,
          "description": "<p>Adds a brand class to the target as btn-{brand}</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{String}",
          "passed": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 93,
          "description": "<p>Whether or not to style the target as a link or a button</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "passed": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 179,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['hidden::active']",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 185,
          "description": "<p>Bind <code>rad-dropdown</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 126,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-dropdown/content'",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 100,
          "description": "<p>Whether or not to treat the dropdown content component as a dropdown menu</p>\n",
          "itemtype": "property",
          "name": "dropdownMenu",
          "type": "{Boolean}",
          "default": "false",
          "passed": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 161,
          "description": "<p>State boolean for display of the dropdown content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 300,
          "description": "<p>Handle the hiding of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
          "itemtype": "method",
          "name": "hide",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 142,
          "itemtype": "property",
          "name": "menuItemComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-dropdown/target'",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 243,
          "description": "<p>Check for an auto-close timer when user mouses into dropdown and cancel it\nif it exists.</p>\n",
          "itemtype": "event",
          "name": "mouseEnter",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 256,
          "description": "<p>When user mouses out of the dropdown start an auto close timer to close\ndropdown after 2.5 seconds. Is canceled using <code>mouseEnter</code> if user mouses\nback into dropdown.</p>\n",
          "itemtype": "event",
          "name": "mouseLeave",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 108,
          "description": "<p>Fires when the dropdown is closed</p>\n",
          "itemtype": "property",
          "name": "onHide",
          "closure": "",
          "passed": "",
          "optional": 1,
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 115,
          "description": "<p>Fires when the dropdown is opened</p>\n",
          "itemtype": "property",
          "name": "onShow",
          "closure": "",
          "passed": "",
          "optional": 1,
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 280,
          "description": "<p>Handle the showing of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
          "itemtype": "method",
          "name": "show",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 225,
          "description": "<p>Safety first!\nIf we leave the page without closing the dropdown we don't want to orphan\nlisteners.</p>\n",
          "itemtype": "method",
          "name": "willDestroyElement",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-dropdown.js",
      "line": 8,
      "description": "<p>Core dropdown component.</p>\n<p>Welcome friend, if you're looking for a button/link that opens a dropdown\nyou've come to the right place.</p>\n<h2>Usage</h2>\n<h4>1. Simple invocation. It's so easy. Just pass a Target and Content prop</h4>\n<p>and you've got a totally rad dropdown.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>dropdown Target<span class=\"token operator\">=</span><span class=\"token string\">\"Open me!\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Hey, what's up?\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{rad-dropdown Target=\"Open me!\" Content=\"Hey, what's up?\"}}</p>\n<h4>2. Simple target with custom content. Use the Content contextual</h4>\n<p>component to add custom content to the dropdown.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>dropdown Target<span class=\"token operator\">=</span><span class=\"token string\">\"Open me!\"</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Hey<span class=\"token punctuation\">,</span> what's up<span class=\"token operator\">?</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>dropdown<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h4>3. Customize both the dropdown target and content.</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>dropdown <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Open me<span class=\"token operator\">!</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Hey<span class=\"token punctuation\">,</span> what's up<span class=\"token operator\">?</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>dropdown<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-dropdown as |components|}}\n{{#components.target}}Open me!{{/components.target}}\n{{#components.content}}Hey, what's up?{{/components.content}}\n{{/rad-dropdown}}</p>\n<h4>4. Turn the target into a button with <code>buttonStyle=true</code> and pass a</h4>\n<p><code>brand</code> to change the color button.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>dropdown buttonStyle<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> brand<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> Target<span class=\"token operator\">=</span><span class=\"token string\">\"Open me!\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Hey, what's up?\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h4>5. Use as a dropdown menu with menu items</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>dropdown dropdownMenu<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> brand<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> buttonStyle<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    Open me<span class=\"token operator\">!</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>svg svgId<span class=\"token operator\">=</span><span class=\"token string\">\"arrow-down\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Option <span class=\"token number\">1</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Option <span class=\"token number\">2</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>dropdown<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-dropdown dropdownMenu=true brand=\"primary\" buttonStyle=true as |components|}}\n{{#components.target}}\nOpen me! {{rad-svg svgId=\"arrow-down\"}}\n{{/components.target}}\n{{#components.content}}\n{{#components.menu-item}}Option 1{{/components.menu-item}}\n{{#components.menu-item}}Option 2{{/components.menu-item}}\n{{/components.content}}\n{{/rad-dropdown}}</p>\n<h4>6. Pass <code>autoClose</code> for a self closing dropdown</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>dropdown autoClose<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> Target<span class=\"token operator\">=</span><span class=\"token string\">\"Open\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Mouse out and I'll close myself!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{rad-dropdown autoClose=true Target=\"Open\" Content=\"Mouse out and I'll close myself!\"}}</p>\n<table>\n<thead>\n<tr>\n<th>Configuration</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>buttonStyle</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Whether to style the <code>target</code> to look like a button</td>\n</tr>\n<tr>\n<td><code>brand</code></td>\n<td>string</td>\n<td>''</td>\n<td>The brand class to use to style the <code>target</code></td>\n</tr>\n<tr>\n<td><code>autoClose</code></td>\n<td>boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 195,
          "description": "<p>When the dropdown is opened, bind an event listener that will close it if\nthe user clicks anywhere other than the dropdown.</p>\n",
          "itemtype": "method",
          "name": "_bindDropdownListeners",
          "access": "protected",
          "tagname": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 212,
          "description": "<p>Remove click listener from body. Used to DRY up our cleanup code in the\nsupported click and mouse out close liseners.</p>\n",
          "itemtype": "method",
          "name": "_unbindClickListener",
          "access": "protected",
          "tagname": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 300,
          "description": "<p>Handle the hiding of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
          "itemtype": "method",
          "name": "hide",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 280,
          "description": "<p>Handle the showing of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
          "itemtype": "method",
          "name": "show",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 225,
          "description": "<p>Safety first!\nIf we leave the page without closing the dropdown we don't want to orphan\nlisteners.</p>\n",
          "itemtype": "method",
          "name": "willDestroyElement",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 153,
          "description": "<p>Stored reference to <code>run.later</code> created in <code>mouseLeave</code> that will close any\nopen dropdown. Is used in <code>mouseEnter</code> to cancel auto close.</p>\n",
          "itemtype": "property",
          "name": "_autoCloseRunLater",
          "type": "{?Function}",
          "default": "null",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 274,
          "description": "<p>Actions</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 172,
          "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 76,
          "description": "<p>When <code>autoClose</code> is set to true, the dropdown will automatically close\nitself 2.5sec after the user mouses out of it.</p>\n",
          "itemtype": "property",
          "name": "autoClose",
          "type": "{Boolean}",
          "passed": "",
          "optional": 1,
          "default": "false",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 86,
          "description": "<p>Adds a brand class to the target as btn-{brand}</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{String}",
          "passed": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 93,
          "description": "<p>Whether or not to style the target as a link or a button</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "passed": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 179,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['hidden::active']",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 185,
          "description": "<p>Bind <code>rad-dropdown</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 126,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-dropdown/content'",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 100,
          "description": "<p>Whether or not to treat the dropdown content component as a dropdown menu</p>\n",
          "itemtype": "property",
          "name": "dropdownMenu",
          "type": "{Boolean}",
          "default": "false",
          "passed": "",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 161,
          "description": "<p>State boolean for display of the dropdown content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 142,
          "itemtype": "property",
          "name": "menuItemComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-dropdown/target'",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 108,
          "description": "<p>Fires when the dropdown is closed</p>\n",
          "itemtype": "property",
          "name": "onHide",
          "closure": "",
          "passed": "",
          "optional": 1,
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 115,
          "description": "<p>Fires when the dropdown is opened</p>\n",
          "itemtype": "property",
          "name": "onShow",
          "closure": "",
          "passed": "",
          "optional": 1,
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 243,
          "description": "<p>Check for an auto-close timer when user mouses into dropdown and cancel it\nif it exists.</p>\n",
          "itemtype": "event",
          "name": "mouseEnter",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        },
        {
          "file": "addon/components/rad-dropdown.js",
          "line": 256,
          "description": "<p>When user mouses out of the dropdown start an auto close timer to close\ndropdown after 2.5 seconds. Is canceled using <code>mouseEnter</code> if user mouses\nback into dropdown.</p>\n",
          "itemtype": "event",
          "name": "mouseLeave",
          "class": "Component.RadDropdown",
          "srcFileId": "addon_components_rad-dropdown.js"
        }
      ],
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    "Component.RadModal": {
      "name": "Component.RadModal",
      "shortname": "Component.RadModal",
      "classitems": [
        {
          "file": "addon/components/rad-modal.js",
          "line": 208,
          "description": "<p>Pass a string for simple text modal header. If the modal should have no\nheader, pass null to this property. This will ensure that <code>aria-labelledby</code>\nis <em>not</em> bound to the modal instance (because there is no header to label\nthe modal).</p>\n",
          "itemtype": "property",
          "name": "Header",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 277,
          "description": "<p>Determines if the modal is currently <em>active</em>, which means that the modal\nhas been opened/closed. Note that this is different from <em>visible</em>. Due to\ntransition time, a modal can be <em>active</em> but not yet <em>visible</em> to the user.\nSeperate props are required for tracking active vs visible to allow the\ncss animations to trigger.</p>\n",
          "itemtype": "property",
          "name": "_active",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 312,
          "description": "<p>Handle modal cleanup here:</p>\n<ul>\n<li>Unfreeze body</li>\n<li>Remove 'active' class from modal elements to hide them if still in DOM</li>\n<li>Return focus to last active element unless disabled (for better\nusability)</li>\n</ul>\n",
          "itemtype": "method",
          "name": "_handleClose",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 357,
          "description": "<p>Handle modal open work here:</p>\n<ul>\n<li>Freeze the body so that scrolling inside the modal doesn't jank up the\nscreen</li>\n<li>Add 'active' class to modal elements, if the modal is already in DOM this\nwill make it visible</li>\n<li>Set private reference to currently active DOM element so we can return\nfocus to it when the modal closes (for usability)</li>\n</ul>\n",
          "itemtype": "method",
          "name": "_handleOpen",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 288,
          "description": "<p>Private reference to the last focused element in the DOM before the modal\nwas opened. This is used to make the experience for keyboard users not\nterrible.</p>\n",
          "itemtype": "property",
          "name": "_lastFocusedElement",
          "type": "{Object}",
          "default": "undefined",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 298,
          "description": "<p>Determines if the modal should be rendered in the template. This is not\nequivalent to <code>open</code>. In order for CSS transitions to work properly, the\nmodal must be rendered in the DOM when the class that applies the\ntransition is added to/removed from the modal.</p>\n",
          "itemtype": "property",
          "name": "_visible",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 152,
          "description": "<p>CSS transitions the modal on open. Accepts 'left', 'right', 'bottom', 'top'.</p>\n",
          "itemtype": "property",
          "name": "animateFrom",
          "type": "{String}",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 134,
          "description": "<p>If a modal should not have a visible header, pass a label for the modal\nusing this property. It will be bound to a hidden div with the correct\naria attrs so that we're rocking A+ accessibility all day every day.</p>\n",
          "itemtype": "property",
          "name": "ariaHeader",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 143,
          "description": "<p>Unless autoFocus is toggled to false, the modal will store a\nreference to whatever element is currently active in the dom and return\nfocus to that element when the modal closes.</p>\n",
          "itemtype": "property",
          "name": "autoFocus",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 266,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['_active:active']",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 158,
          "description": "<p>Controls display of the modal header close button. Is defaulted to true and\ncan be set to false in order to suppress the header close button.</p>\n",
          "itemtype": "property",
          "name": "closeButton",
          "type": "{!Boolean}",
          "passed": "",
          "optional": 1,
          "default": "true",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 168,
          "description": "<p>Controls the SVG Id of the close button.</p>\n",
          "itemtype": "property",
          "name": "closeIcon",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'close'",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 233,
          "description": "<p>Closure action passed into the modal. Is event delegated to the modal\nbackground for close on click (unless 'hideBackground' is true)</p>\n",
          "itemtype": "property",
          "name": "closeModal",
          "type": "{function}",
          "passed": "",
          "optional": 1,
          "closure": "",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 425,
          "description": "<p>When modal is inserted into DOM, check if it should be open by default, if\nso we need to call <code>_handleOpen</code> manually to open it.</p>\n",
          "itemtype": "method",
          "name": "didInsertElement",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 408,
          "description": "<p>Whenever this component receives attrs check if the <code>open</code> prop matches the\ntemplate status. If not, call the handlers for open/close</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 247,
          "itemtype": "property",
          "name": "footerComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-modal/footer'",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 255,
          "itemtype": "property",
          "name": "headerComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-modal/header'",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 177,
          "description": "<p>Flag used to handle showing and hiding the modal. This property\nshould be passed in by a component/service+controller that controls the\nstate of the modal.</p>\n",
          "itemtype": "property",
          "name": "open",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 186,
          "description": "<p>Determines if the modal should be removed from the DOM when it is closed.\nThis is to help performance on the beefier modals.</p>\n",
          "itemtype": "property",
          "name": "removeFromDomOnClose",
          "default": "false",
          "type": "{Boolean}",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 194,
          "description": "<p>The size of the modal to display. The default size caps the width of the\nmodal at 60% of the browser's viewport. Additional sizes available are:</p>\n<ul>\n<li><code>'small'</code> (30% on large, 45% on medium)</li>\n<li><code>'medium'</code> (45% on large, 60% on medium)</li>\n<li><code>'full'</code> (100% on large and medium)</li>\n</ul>\n<p>Modals will always render at 100% on mobile/small screen view.</p>\n",
          "itemtype": "property",
          "name": "size",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 218,
          "description": "<p>Pass a <code>(hash)</code> of tagging properties when you need to bind a tag fire to\nclose of the modal. Expects syntax:\n<code>(hash category='Tag Category' action='Tag Action' label='Tag Label')</code></p>\n",
          "itemtype": "property",
          "name": "tagclose",
          "type": "{Object}",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 450,
          "description": "<p>willDestroyElement hook used to ensure that all of the closing logic that\nneeds to happen fires off.</p>\n<p><strong>NOTE:</strong> This will make sure that the body doesn't get frozen in place if\nyour modal isn't cleaned up, but when you navigate back to whatever created\nthis modal it may still be open. If this is the case remember that the\nopen state of your modal is a data down property which needs to be cleaned\nup on whatever parent context controls it.</p>\n",
          "itemtype": "event",
          "name": "willDestroyElement",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-modal.js",
      "line": 9,
      "description": "<h3>Ember Radical DDAU Modal</h3>\n<p>Triggering modal open and close is handled using a data point to represent\nthe open state instead of an event listener on body filtering for some\nidentifier. This state should be handled by a data level service (could\nalso be a route or component).</p>\n<h4>Usage:</h4>\n<p><strong>With Basic Header:</strong></p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>modal\n  open<span class=\"token operator\">=</span>someService<span class=\"token punctuation\">.</span>modalActive\n  Header<span class=\"token operator\">=</span><span class=\"token string\">'This is the modal title'</span>\n  closeModal<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>action <span class=\"token string\">'closeModal'</span> target<span class=\"token operator\">=</span>someService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>This is a totally rad modal<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>modal<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>With Full/Custom Header:</strong></p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>modal\n  open<span class=\"token operator\">=</span>someService<span class=\"token punctuation\">.</span>modalActive\n  closeModal<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>action <span class=\"token string\">\"closeModal\"</span> target<span class=\"token operator\">=</span>someService<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span> Modal Header Subcomponent<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>svg svgId<span class=\"token operator\">=</span><span class=\"token string\">\"sparkles\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> It Just Works™<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>I will be yielded inside <span class=\"token keyword\">of</span> the modal body<span class=\"token operator\">!</span> Don't worry about adding\n  padding to me<span class=\"token punctuation\">,</span> the modal has 30px padding all around<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>modal<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>With No Header:</strong>\nEven if you don't want or need a header for your modal, <em>some form of header\ntext is required for 508 compliance</em>.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>modal\n  open<span class=\"token operator\">=</span>someService<span class=\"token punctuation\">.</span>modalActive\n  ariaHeader<span class=\"token operator\">=</span><span class=\"token string\">'This is the puppy modal'</span>\n  closeModal<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>action <span class=\"token string\">\"closeModal\"</span> target<span class=\"token operator\">=</span>someService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Imagine several cute puppy images and<span class=\"token operator\">/</span>or gifs here<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Note that <code>open</code>, <code>closeAction</code> and some form of a header are all required.</p>\n<h4>Data Down</h4>\n<p>A boolean data point <code>open</code> must be passed into this component. This\ndata point represents the state of the modal and must be controlled by some\nparent context (a Service, Controller or some parent component). DO NOT\nMUTATE THIS DATA POINT IN THIS COMPONENT!</p>\n<p>When following DDAU this component will automagically rerender whenever the\n<code>open</code> state of your component changes because it is <strong>passed down</strong> as\ndata. This removes the need for observers and event listeners (🙌 🙌 🙌) and\nallows us to programmatically open and close the modal based purely on user\nactions &amp;&amp; application data/state.</p>\n<p>When <code>open</code> is truthy, the template will add a class <code>active</code> to the modal's\n<code>&lt;div&gt;</code>s. This class toggles visibility and fades in the modal using a CSS\ntransition. (The <code>aria-hidden</code> attribute is used to control actual visbility\nfor all users/browsers and screen readers; <code>active</code> is purely presentational)</p>\n<h4>Actions Up</h4>\n<p>Provide a closure action to the component as <code>closeModal</code>. This action will\nbe automagically attached to the gray modal background. Whenever a user\nclicks the background, that action will relay the event to your parent\ncontext. You can then reliably handle whatever closing logic needs to happen\nand mutate your modal's <code>open</code> state on the parent context. This update will\nflow back down into the component and make the necessary changes to 'close'\nthe modal.</p>\n<h4>Yielded Data</h4>\n<p>This component will yield:</p>\n<ul>\n<li>A <code>components</code> hash which you can use to directly invoke the <code>header</code>\nsubcomponent for situations where you need more than just text in your\nmodal header. You can reference in your template as:\n<code>\\{{#components.header}}Some text and elements here\\{{/components.header}}</code></li>\n<li>The <code>open</code> state of the modal, in case something in your header or modal\nbody needs access to this state.</li>\n</ul>\n<h4>Configurations</h4>\n<p>The component can be configured with the following flags:</p>\n<ul>\n<li><code>animateFrom</code>: If you would like the modal to animate in, use this property\nto set up an animation direction; \"left\", \"right\", \"top\", or \"bottom\".</li>\n<li><code>autoFocus</code>: set to false to prevent the modal from refocusing\nthe last element that was active in the DOM before the modal as opened.</li>\n<li><code>closeButton</code>: Controls display of the header close button. Set to false to\nhide close button.</li>\n<li><code>removeFromDomOnClose</code>: While you normally may wish to control whether\nyour modal is being rendered at all via external logic, there are cases\nwhere you may be using the modal (e.g. in a wizard-like user flow) where\nyou may want to have the modal destroy itself when it closes. Use this\nproperty if you want this kind of behavior.</li>\n<li><code>size</code>: Default size of the modal is 60% of browser width on desktop. You\nmay optionally choose <code>small</code> (30%), <code>medium</code> (45%), or <code>full</code> (100%).\nModals are always full-width on small screen sizes.</li>\n</ul>\n<h4>Non-Dismissable Modal</h4>\n<p>Create a modal that cannot be dismissed on click of the modal background by\nnot passing a <code>closeModal</code> closure <em>(Modal components are set up with a no op\n<code>closeModal</code> action by default)</em>. Note that although not required, it's\nsuggested to pass <code>closeButton=false</code> to suppress display of the close button\nbecause it won't do anything.</p>\n<h5>TODO:</h5>\n<ul>\n<li>Explore/Document how to handle having multiple modals of the same type? One\nmodal with dynamic content? or multiple modals with modal ids?</li>\n<li>Handle returning focus to the modal when a user tabs focus outside of the\nmodal. Start with Bootstrap modals (which accomplish this). Can it be done\nwithout event listeners?</li>\n</ul>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-modal.js",
          "line": 312,
          "description": "<p>Handle modal cleanup here:</p>\n<ul>\n<li>Unfreeze body</li>\n<li>Remove 'active' class from modal elements to hide them if still in DOM</li>\n<li>Return focus to last active element unless disabled (for better\nusability)</li>\n</ul>\n",
          "itemtype": "method",
          "name": "_handleClose",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 357,
          "description": "<p>Handle modal open work here:</p>\n<ul>\n<li>Freeze the body so that scrolling inside the modal doesn't jank up the\nscreen</li>\n<li>Add 'active' class to modal elements, if the modal is already in DOM this\nwill make it visible</li>\n<li>Set private reference to currently active DOM element so we can return\nfocus to it when the modal closes (for usability)</li>\n</ul>\n",
          "itemtype": "method",
          "name": "_handleOpen",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 425,
          "description": "<p>When modal is inserted into DOM, check if it should be open by default, if\nso we need to call <code>_handleOpen</code> manually to open it.</p>\n",
          "itemtype": "method",
          "name": "didInsertElement",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-modal.js",
          "line": 208,
          "description": "<p>Pass a string for simple text modal header. If the modal should have no\nheader, pass null to this property. This will ensure that <code>aria-labelledby</code>\nis <em>not</em> bound to the modal instance (because there is no header to label\nthe modal).</p>\n",
          "itemtype": "property",
          "name": "Header",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 277,
          "description": "<p>Determines if the modal is currently <em>active</em>, which means that the modal\nhas been opened/closed. Note that this is different from <em>visible</em>. Due to\ntransition time, a modal can be <em>active</em> but not yet <em>visible</em> to the user.\nSeperate props are required for tracking active vs visible to allow the\ncss animations to trigger.</p>\n",
          "itemtype": "property",
          "name": "_active",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 288,
          "description": "<p>Private reference to the last focused element in the DOM before the modal\nwas opened. This is used to make the experience for keyboard users not\nterrible.</p>\n",
          "itemtype": "property",
          "name": "_lastFocusedElement",
          "type": "{Object}",
          "default": "undefined",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 298,
          "description": "<p>Determines if the modal should be rendered in the template. This is not\nequivalent to <code>open</code>. In order for CSS transitions to work properly, the\nmodal must be rendered in the DOM when the class that applies the\ntransition is added to/removed from the modal.</p>\n",
          "itemtype": "property",
          "name": "_visible",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 152,
          "description": "<p>CSS transitions the modal on open. Accepts 'left', 'right', 'bottom', 'top'.</p>\n",
          "itemtype": "property",
          "name": "animateFrom",
          "type": "{String}",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 134,
          "description": "<p>If a modal should not have a visible header, pass a label for the modal\nusing this property. It will be bound to a hidden div with the correct\naria attrs so that we're rocking A+ accessibility all day every day.</p>\n",
          "itemtype": "property",
          "name": "ariaHeader",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 143,
          "description": "<p>Unless autoFocus is toggled to false, the modal will store a\nreference to whatever element is currently active in the dom and return\nfocus to that element when the modal closes.</p>\n",
          "itemtype": "property",
          "name": "autoFocus",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 266,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['_active:active']",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 158,
          "description": "<p>Controls display of the modal header close button. Is defaulted to true and\ncan be set to false in order to suppress the header close button.</p>\n",
          "itemtype": "property",
          "name": "closeButton",
          "type": "{!Boolean}",
          "passed": "",
          "optional": 1,
          "default": "true",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 168,
          "description": "<p>Controls the SVG Id of the close button.</p>\n",
          "itemtype": "property",
          "name": "closeIcon",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'close'",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 233,
          "description": "<p>Closure action passed into the modal. Is event delegated to the modal\nbackground for close on click (unless 'hideBackground' is true)</p>\n",
          "itemtype": "property",
          "name": "closeModal",
          "type": "{function}",
          "passed": "",
          "optional": 1,
          "closure": "",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 247,
          "itemtype": "property",
          "name": "footerComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-modal/footer'",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 255,
          "itemtype": "property",
          "name": "headerComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-modal/header'",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 177,
          "description": "<p>Flag used to handle showing and hiding the modal. This property\nshould be passed in by a component/service+controller that controls the\nstate of the modal.</p>\n",
          "itemtype": "property",
          "name": "open",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 186,
          "description": "<p>Determines if the modal should be removed from the DOM when it is closed.\nThis is to help performance on the beefier modals.</p>\n",
          "itemtype": "property",
          "name": "removeFromDomOnClose",
          "default": "false",
          "type": "{Boolean}",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 194,
          "description": "<p>The size of the modal to display. The default size caps the width of the\nmodal at 60% of the browser's viewport. Additional sizes available are:</p>\n<ul>\n<li><code>'small'</code> (30% on large, 45% on medium)</li>\n<li><code>'medium'</code> (45% on large, 60% on medium)</li>\n<li><code>'full'</code> (100% on large and medium)</li>\n</ul>\n<p>Modals will always render at 100% on mobile/small screen view.</p>\n",
          "itemtype": "property",
          "name": "size",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 218,
          "description": "<p>Pass a <code>(hash)</code> of tagging properties when you need to bind a tag fire to\nclose of the modal. Expects syntax:\n<code>(hash category='Tag Category' action='Tag Action' label='Tag Label')</code></p>\n",
          "itemtype": "property",
          "name": "tagclose",
          "type": "{Object}",
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-modal.js",
          "line": 408,
          "description": "<p>Whenever this component receives attrs check if the <code>open</code> prop matches the\ntemplate status. If not, call the handlers for open/close</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        },
        {
          "file": "addon/components/rad-modal.js",
          "line": 450,
          "description": "<p>willDestroyElement hook used to ensure that all of the closing logic that\nneeds to happen fires off.</p>\n<p><strong>NOTE:</strong> This will make sure that the body doesn't get frozen in place if\nyour modal isn't cleaned up, but when you navigate back to whatever created\nthis modal it may still be open. If this is the case remember that the\nopen state of your modal is a data down property which needs to be cleaned\nup on whatever parent context controls it.</p>\n",
          "itemtype": "event",
          "name": "willDestroyElement",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadModal",
          "srcFileId": "addon_components_rad-modal.js"
        }
      ],
      "srcFileId": "addon_components_rad-modal.js"
    },
    "Component.RadPopover": {
      "name": "Component.RadPopover",
      "shortname": "Component.RadPopover",
      "classitems": [
        {
          "file": "addon/components/rad-popover.js",
          "line": 166,
          "description": "<p>Handle showing tooltip content</p>\n",
          "itemtype": "method",
          "name": "_hideContent",
          "return": {
            "description": "undefined"
          },
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 158,
          "description": "<p>Handle showing tooltip content</p>\n",
          "itemtype": "method",
          "name": "_showContent",
          "return": {
            "description": "undefined"
          },
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 112,
          "description": "<p>Unique string used to handle setting up aria roles for A++ usability. This\nidentifier needs to be set as the <code>aria-describedby</code> attr of the popover\nhover target and the <code>id</code> of the actual popover content</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "class": "Component.RadPopover",
          "subprops": [
            {
              "name": "elementId",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 121,
          "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 128,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['hidden::active']",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 134,
          "description": "<p>Bind standard core class: <code>rad-popover</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 92,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-popover/content'",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 178,
          "description": "<p>Checks for a position prop value; if none was supplied, set a default\nof <code>bottom</code></p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 207,
          "description": "<p>Show content on focus</p>\n",
          "itemtype": "event",
          "name": "focusIn",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 214,
          "description": "<p>Hide content on focusOut</p>\n",
          "itemtype": "event",
          "name": "focusOut",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 140,
          "description": "<p>State boolean for display of the popover content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 193,
          "description": "<p>Show content on mouse enter</p>\n",
          "itemtype": "event",
          "name": "mouseEnter",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 200,
          "description": "<p>Hide content on mouse leave</p>\n",
          "itemtype": "event",
          "name": "mouseLeave",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 57,
          "description": "<p>The position that the tooltip is created in relative to its anchor element.\nValid options are:</p>\n<ul>\n<li><code>'top'</code></li>\n<li><code>'bottom'</code></li>\n<li><code>'left'</code></li>\n<li><code>'right'</code></li>\n<li><code>'bottom-left'</code></li>\n<li><code>'bottom-right'</code></li>\n</ul>\n<p>Defaults to <code>'bottom'</code> if no value is supplied.</p>\n",
          "itemtype": "property",
          "name": "position",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 74,
          "description": "<p>The size of the tooltip itself. A list of preset sizes available are:</p>\n<ul>\n<li><code>'small'</code></li>\n<li><code>'medium'</code></li>\n<li><code>'large'</code></li>\n<li><code>'x-large'</code></li>\n</ul>\n<p>Defaults to <code>'medium'</code> if no value is supplied.</p>\n",
          "itemtype": "property",
          "name": "size",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 148,
          "description": "<p>Component element: div</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 100,
          "itemtype": "property",
          "name": "targetComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-button'",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-popover.js",
      "line": 8,
      "description": "<p>Popover tooltips to Make UI Great Again.™</p>\n<p>Use this component along with the subcomponent <code>rad-popover.content</code> to\ncreate popovers(super fancy tooltips). This component works by using mouse\nand focus events on <strong>this</strong> wrapping element.</p>\n<h4>Sample Usage:</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>popover <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Hover me<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>button<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content position<span class=\"token operator\">=</span><span class=\"token string\">\"top\"</span> size<span class=\"token operator\">=</span><span class=\"token string\">\"small\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Lorem ipsum dolor sit amet<span class=\"token punctuation\">,</span> consectetur adipisicing elit<span class=\"token punctuation\">,</span> sed <span class=\"token keyword\">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>popover<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h4>Configuration Properties</h4>\n<p>A set of configuration properties can be passed into the child <code>\\{{rad-popover/content}}</code>\ncomponent to control how its appearance. Here is a brief overview:</p>\n<ul>\n<li><code>position</code>: Where the tooltip is positioned relative to anchor element:\n<ul>\n<li><code>top</code></li>\n<li><code>bottom</code></li>\n<li><code>left</code></li>\n<li><code>right</code></li>\n<li><code>bottom-left</code></li>\n<li><code>bottom-right</code></li>\n</ul>\n</li>\n<li><code>size</code>: Preset width of the tooltip:\n<ul>\n<li><code>small</code></li>\n<li><code>medium</code></li>\n<li><code>large</code></li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\">\nFor full documentation<span class=\"token punctuation\">,</span> see the <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>cross<span class=\"token operator\">-</span>link <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"Component.CorePopover\"</span> item<span class=\"token operator\">=</span><span class=\"token string\">\"position\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>position property<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>cross<span class=\"token operator\">-</span>link<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> and the <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>cross<span class=\"token operator\">-</span>link <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"Component.CorePopover\"</span> item<span class=\"token operator\">=</span><span class=\"token string\">\"size\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>size property<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>cross<span class=\"token operator\">-</span>link<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>\n</code></pre>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-popover.js",
          "line": 166,
          "description": "<p>Handle showing tooltip content</p>\n",
          "itemtype": "method",
          "name": "_hideContent",
          "return": {
            "description": "undefined"
          },
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 158,
          "description": "<p>Handle showing tooltip content</p>\n",
          "itemtype": "method",
          "name": "_showContent",
          "return": {
            "description": "undefined"
          },
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-popover.js",
          "line": 112,
          "description": "<p>Unique string used to handle setting up aria roles for A++ usability. This\nidentifier needs to be set as the <code>aria-describedby</code> attr of the popover\nhover target and the <code>id</code> of the actual popover content</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "class": "Component.RadPopover",
          "subprops": [
            {
              "name": "elementId",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 121,
          "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 128,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['hidden::active']",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 134,
          "description": "<p>Bind standard core class: <code>rad-popover</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 92,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-popover/content'",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 140,
          "description": "<p>State boolean for display of the popover content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 57,
          "description": "<p>The position that the tooltip is created in relative to its anchor element.\nValid options are:</p>\n<ul>\n<li><code>'top'</code></li>\n<li><code>'bottom'</code></li>\n<li><code>'left'</code></li>\n<li><code>'right'</code></li>\n<li><code>'bottom-left'</code></li>\n<li><code>'bottom-right'</code></li>\n</ul>\n<p>Defaults to <code>'bottom'</code> if no value is supplied.</p>\n",
          "itemtype": "property",
          "name": "position",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 74,
          "description": "<p>The size of the tooltip itself. A list of preset sizes available are:</p>\n<ul>\n<li><code>'small'</code></li>\n<li><code>'medium'</code></li>\n<li><code>'large'</code></li>\n<li><code>'x-large'</code></li>\n</ul>\n<p>Defaults to <code>'medium'</code> if no value is supplied.</p>\n",
          "itemtype": "property",
          "name": "size",
          "type": "{string}",
          "default": "''",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 148,
          "description": "<p>Component element: div</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 100,
          "itemtype": "property",
          "name": "targetComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-button'",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-popover.js",
          "line": 178,
          "description": "<p>Checks for a position prop value; if none was supplied, set a default\nof <code>bottom</code></p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 207,
          "description": "<p>Show content on focus</p>\n",
          "itemtype": "event",
          "name": "focusIn",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 214,
          "description": "<p>Hide content on focusOut</p>\n",
          "itemtype": "event",
          "name": "focusOut",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 193,
          "description": "<p>Show content on mouse enter</p>\n",
          "itemtype": "event",
          "name": "mouseEnter",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        },
        {
          "file": "addon/components/rad-popover.js",
          "line": 200,
          "description": "<p>Hide content on mouse leave</p>\n",
          "itemtype": "event",
          "name": "mouseLeave",
          "class": "Component.RadPopover",
          "srcFileId": "addon_components_rad-popover.js"
        }
      ],
      "srcFileId": "addon_components_rad-popover.js"
    },
    "Component.RadState": {
      "name": "Component.RadState",
      "shortname": "Component.RadState",
      "classitems": [
        {
          "file": "addon/components/rad-state.js",
          "line": 67,
          "description": "<p>Actions hash</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 50,
          "description": "<p>Boolean state tracking property. Use this to handle show/hide status.</p>\n",
          "itemtype": "property",
          "name": "active",
          "type": "{Boolean}",
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 73,
          "description": "<p>Sets the <a href=\"#property_active\">active</a> property to false.</p>\n",
          "itemtype": "method",
          "name": "closeModal",
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 80,
          "description": "<p>Sets the <a href=\"#property_active\">active</a> property to true.</p>\n",
          "itemtype": "method",
          "name": "openModal",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 56,
          "description": "<p>Rad State is a purely functional component with no rendered output of its\nown, so it doesn't need a root element cluttering up the DOM when it's\nbeing used.</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 88,
          "description": "<p>Sets the <a href=\"#property_active\">active</a> property to passed state.</p>\n",
          "itemtype": "method",
          "name": "toggleState",
          "params": [
            {
              "name": "state",
              "description": "<p>State to set active to</p>\n",
              "type": "Boolean"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-state.js",
      "line": 4,
      "description": "<p>Component that can be used for tracking state changes with modals or drawers.\nWrap either in one of these and use the yielded state and actions to handle\nshowing/hiding/controlling your component.</p>\n<p>Useful mainly for demonstration/documentation purposes, but also handy for\nwhen you don't have a convenient place to store state (particularly during\nearly development stages). It's also kind of nice for not cluttering up your\nparent scope with a bunch of extra state and actions you might not want to\nhang onto. Go nuts!</p>\n<h2>Usage</h2>\n<p>Instances of <code>rad-state</code> yield an <code>active</code> property and a hash of <code>actions</code>\nfor manipulating that state: <code>open</code>, <code>close</code>, and <code>toggleState</code>.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>state <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>state stateActions<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>bank<span class=\"token operator\">-</span>vault\n    isOpen<span class=\"token operator\">=</span>state\n    closeVault<span class=\"token operator\">=</span>stateActions<span class=\"token punctuation\">.</span>close\n    openVault<span class=\"token operator\">=</span>stateActions<span class=\"token punctuation\">.</span>open<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>state<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Or for a smipler toggling implementation:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>state <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>switchState switchActions<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>light<span class=\"token operator\">-</span><span class=\"token keyword\">switch</span> isOn<span class=\"token operator\">=</span>switchState toggleSwitch<span class=\"token operator\">=</span>switchActions<span class=\"token punctuation\">.</span>toggleState<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>state<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>The actions in the actions hash have already been yielded via the action\nhelper, so it is not necessary to continue using that helper when passing\nactions into child components as properties (but you totally still can if\nyou would prefer to.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-state.js",
          "line": 73,
          "description": "<p>Sets the <a href=\"#property_active\">active</a> property to false.</p>\n",
          "itemtype": "method",
          "name": "closeModal",
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 80,
          "description": "<p>Sets the <a href=\"#property_active\">active</a> property to true.</p>\n",
          "itemtype": "method",
          "name": "openModal",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 88,
          "description": "<p>Sets the <a href=\"#property_active\">active</a> property to passed state.</p>\n",
          "itemtype": "method",
          "name": "toggleState",
          "params": [
            {
              "name": "state",
              "description": "<p>State to set active to</p>\n",
              "type": "Boolean"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-state.js",
          "line": 67,
          "description": "<p>Actions hash</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 50,
          "description": "<p>Boolean state tracking property. Use this to handle show/hide status.</p>\n",
          "itemtype": "property",
          "name": "active",
          "type": "{Boolean}",
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        },
        {
          "file": "addon/components/rad-state.js",
          "line": 56,
          "description": "<p>Rad State is a purely functional component with no rendered output of its\nown, so it doesn't need a root element cluttering up the DOM when it's\nbeing used.</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadState",
          "srcFileId": "addon_components_rad-state.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-state.js"
    },
    "Component.RadSVG": {
      "name": "Component.RadSVG",
      "shortname": "Component.RadSVG",
      "classitems": [
        {
          "file": "addon/components/rad-svg.js",
          "line": 36,
          "description": "<p>Allow direct binding of <code>data-test</code> attributes so that icons can be\ndirectly targeted in automated testing.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 50,
          "description": "<p>Bound classNames: <code>svgId</code></p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 44,
          "description": "<p>Class names: <code>rad-svg</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 19,
          "description": "<p>File path to svg definitions file</p>\n",
          "itemtype": "property",
          "name": "filePath",
          "type": "{string}",
          "default": "assets/svg-defs.svg",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 26,
          "description": "<p>The id of the svg.</p>\n",
          "itemtype": "property",
          "name": "svgId",
          "type": "{string}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 56,
          "description": "<p>SVG DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-svg.js",
      "line": 4,
      "description": "<p>Core component for rendering svg icons. Expects an svg id as <code>svgId</code>.</p>\n<h4>Usage:</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>svg svgId<span class=\"token operator\">=</span><span class=\"token string\">\"bubbles\"</span> classNames<span class=\"token operator\">=</span><span class=\"token string\">\"radical\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/rad-svg.js",
          "line": 36,
          "description": "<p>Allow direct binding of <code>data-test</code> attributes so that icons can be\ndirectly targeted in automated testing.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 50,
          "description": "<p>Bound classNames: <code>svgId</code></p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 44,
          "description": "<p>Class names: <code>rad-svg</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 19,
          "description": "<p>File path to svg definitions file</p>\n",
          "itemtype": "property",
          "name": "filePath",
          "type": "{string}",
          "default": "assets/svg-defs.svg",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 26,
          "description": "<p>The id of the svg.</p>\n",
          "itemtype": "property",
          "name": "svgId",
          "type": "{string}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        },
        {
          "file": "addon/components/rad-svg.js",
          "line": 56,
          "description": "<p>SVG DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "Component.RadSVG",
          "srcFileId": "addon_components_rad-svg.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_rad-svg.js"
    },
    "Component.RadTabs": {
      "name": "Component.RadTabs",
      "shortname": "Component.RadTabs",
      "classitems": [
        {
          "file": "addon/components/rad-tabs.js",
          "line": 221,
          "description": "<p>Internal method that can be used with a <code>run.once</code> call to only add new tabs\nonce per run loop. Simply iterates through <code>_tabsToCreate</code> and pushes them\ninto the <code>tabList</code>. This is needed to prevent multiple renders in a single\nrun loop when all of the <code>content</code> subcomponents register themselves with\nthe container during init.</p>\n",
          "itemtype": "method",
          "name": "_createTabsList",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 74,
          "description": "<p>The elementId of the currently opened tab. This determines which tab is active and\nwhich tab's content to display. If this is empty, no tabs are open.</p>\n",
          "itemtype": "property",
          "name": "activeId",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 196,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 84,
          "description": "<p>Pass false to use tab style without primary color tabs.</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 93,
          "description": "<p>Class name(s) to use when utilizing tabs in a 'button style'\nimplementation.</p>\n",
          "itemtype": "property",
          "name": "buttonStyleClassNames",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "'button-style'",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 103,
          "description": "<p>Whether the content pane subcomponents should take on the appearance of\na <code>rad-card</code>.</p>\n",
          "itemtype": "property",
          "name": "card",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 203,
          "description": "<p>Class names: <code>rad-tabs</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 184,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-tabs/content'",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 113,
          "description": "<p>The optional elementId of the tab that should be shown by default. This is\nuseful for cases where the user has come into a page and is expecting one\nof the tabs to be shown by default.</p>\n",
          "itemtype": "property",
          "name": "defaultTab",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 239,
          "description": "<p>When the component initializes, we set the <code>tabList</code> property to an array.\nThis prevents multiple instances of rad-tabs on a given page from\ninheriting the same tabList array through prototype inheritance.</p>\n",
          "itemtype": "event",
          "name": "init",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 124,
          "description": "<p>Optional closure action that will be called whenever a tab is opened with\nthe id of that tab. Use this to create a controlled tabs instance.</p>\n",
          "itemtype": "property",
          "name": "onChange",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{function}",
          "default": "null",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 286,
          "description": "<p>Closure action passed to content subcomponents that is called on init.\nEach child tab will register itself with this container. To ensure the\ntabList is only updated once per render, we proxy new tabs to the\n<code>_tabsToCreate</code> array and then push all of them to <code>tabList</code> using a\n<code>run.once</code> call to <code>_createTabsList</code></p>\n",
          "itemtype": "method",
          "name": "registerTab",
          "params": [
            {
              "name": "tab",
              "description": "<p>Object model of tab to be registered</p>\n",
              "type": "Object"
            }
          ],
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 134,
          "description": "<p>Whether the page should scroll the tab context back to the top when one of\nthe tabs is clicked. This can be a nice convenience for usabilitee.</p>\n",
          "itemtype": "property",
          "name": "scrollOnClick",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 144,
          "description": "<p>What the target of the <code>scrollOnClick</code> behavior should be. By default,\nthe entire page/body scrolls, however if this instance of <code>rad-tabs</code> is\ncontained within a modal or some other scrollable sub-container, it may\nbe more desirable to execute a scroll against that instead of the entire\npage. Simply pass a standard jQuery-like selector in as a string.</p>\n",
          "itemtype": "property",
          "name": "scrollTarget",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "'body, html'",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 264,
          "description": "<p>Action to show a tab. Set <code>activeId</code> to the passed elementId. <code>activeId</code>\nis passed down to children content components</p>\n",
          "itemtype": "method",
          "name": "showTab",
          "params": [
            {
              "name": "elementId",
              "description": "<p>HTML id of the tab to show</p>\n",
              "type": "String"
            }
          ],
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 157,
          "description": "<p>Class name(s) to apply to the tab <code>&lt;button&gt;</code> elements.</p>\n",
          "itemtype": "property",
          "name": "tabButtonClassNames",
          "type": "{string}",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 163,
          "description": "<p>Class name(s) to use for the individual tab <code>&lt;li&gt;</code> elements.</p>\n",
          "itemtype": "property",
          "name": "tabClassNames",
          "passed": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 209,
          "description": "<p>List of tabs to display. This is iterated through in the template to\nrendered the buttons that are used to change tabs.</p>\n",
          "itemtype": "property",
          "name": "tabList",
          "type": "{Array.<Object>}",
          "default": "null",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 171,
          "description": "<p>Class name(s) to use on the enclosing tabs <code>&lt;ul&gt;</code> element.</p>\n",
          "itemtype": "property",
          "name": "tabListClassNames",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 300,
          "description": "<p>Closure action passed to content subcomponents that is called whenever\na tab has updated in a way this container needs to know of. Currently\nthis is only when a tab's <code>hidden</code> status changes.</p>\n",
          "itemtype": "method",
          "name": "updateTab",
          "params": [
            {
              "name": "tab",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "elementId",
                  "description": "HTML id of tab to update",
                  "type": "String"
                },
                {
                  "name": "hidden",
                  "description": "Hidden status of changed tab",
                  "type": "Boolean"
                }
              ]
            }
          ],
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-tabs.js",
      "line": 8,
      "description": "<p>A++ Accessible tabs. The <code>rad-tabs</code> component is the parent container for\na given set of tabs and handles managing the active state of the tabs and tab\npanels. The <code>rad-tabs</code> component yields a <code>content</code> contextual component\ninside of the <code>components</code> hash.</p>\n<h4>Usage</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>tabs <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Delgrango's\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    This is my favorite resaurant at the marinara<span class=\"token punctuation\">,</span> name <span class=\"token keyword\">of</span> Delgrango's\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Fresh Water\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    Boy I sure did work up a thirst after eating all them shramps<span class=\"token punctuation\">.</span> Time to\n    wash it down <span class=\"token keyword\">with</span> a cool glass <span class=\"token keyword\">of</span> marina water<span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>tabs<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>You can include any number of <code>components.content</code> contextual components.\n<em>(However keep in mind that adding too many <code>content</code> components may result in\nthe tab labels becoming unreadable depending on the space alotted for\ndisplaying them.)</em></p>\n<p>You can also specify a default tab by setting the <code>defaultTab</code> parameter to\nmatch one of content components' HTML id property:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>tabs defaultTab<span class=\"token operator\">=</span><span class=\"token string\">\"shrimpers\"</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Shrimp\"</span> elementId<span class=\"token operator\">=</span><span class=\"token string\">\"shrimpers\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    BRINGO<span class=\"token operator\">!</span> There<span class=\"token string\">'s some pretty good lil'</span> shrimpers <span class=\"token keyword\">in</span> here<span class=\"token punctuation\">,</span> lets check it out<span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Delgrango's\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    This is my favorite resaurant at the marinara<span class=\"token punctuation\">,</span> name <span class=\"token keyword\">of</span> Delgrango's\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>tabs<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h3>Controlled Tabs</h3>\n<p>If you need to programatically open tabs within your application you can\ncreate a controlled instance of <code>rad-tabs</code> by specifying the <code>activeId</code> for\nthe component. This means that you need to track the <code>activeId</code> in a parent\ncomponent or service and pass it down into the controlled tab instance. To do\nthis pass an <code>onChange</code> closure into the component. It will be called with\nthe <code>elementId</code> of the selected tab any time a user changes tabs.</p>\n<h3>A++ Accessibility</h3>\n<ul>\n<li>Tabs have <code>aria-controls</code> set to the <code>elementId</code> of the <code>tabpanel</code> they show.</li>\n<li>Tabs have <code>role=tab</code> for role identification</li>\n<li>Tabs are instances of <code>rad-button</code> for keyboard access</li>\n<li>Show/hide of tabs and panels are managed through <code>aria-hidden</code> attr</li>\n</ul>\n<h3>Feature Notes:</h3>\n<ul>\n<li>The tab list is a flexbox container with flex-grow 1 for each tab. This auto\nmagically grows the tabs to fill the entire width of tab container.</li>\n</ul>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-tabs.js",
          "line": 221,
          "description": "<p>Internal method that can be used with a <code>run.once</code> call to only add new tabs\nonce per run loop. Simply iterates through <code>_tabsToCreate</code> and pushes them\ninto the <code>tabList</code>. This is needed to prevent multiple renders in a single\nrun loop when all of the <code>content</code> subcomponents register themselves with\nthe container during init.</p>\n",
          "itemtype": "method",
          "name": "_createTabsList",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 286,
          "description": "<p>Closure action passed to content subcomponents that is called on init.\nEach child tab will register itself with this container. To ensure the\ntabList is only updated once per render, we proxy new tabs to the\n<code>_tabsToCreate</code> array and then push all of them to <code>tabList</code> using a\n<code>run.once</code> call to <code>_createTabsList</code></p>\n",
          "itemtype": "method",
          "name": "registerTab",
          "params": [
            {
              "name": "tab",
              "description": "<p>Object model of tab to be registered</p>\n",
              "type": "Object"
            }
          ],
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 264,
          "description": "<p>Action to show a tab. Set <code>activeId</code> to the passed elementId. <code>activeId</code>\nis passed down to children content components</p>\n",
          "itemtype": "method",
          "name": "showTab",
          "params": [
            {
              "name": "elementId",
              "description": "<p>HTML id of the tab to show</p>\n",
              "type": "String"
            }
          ],
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 300,
          "description": "<p>Closure action passed to content subcomponents that is called whenever\na tab has updated in a way this container needs to know of. Currently\nthis is only when a tab's <code>hidden</code> status changes.</p>\n",
          "itemtype": "method",
          "name": "updateTab",
          "params": [
            {
              "name": "tab",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "elementId",
                  "description": "HTML id of tab to update",
                  "type": "String"
                },
                {
                  "name": "hidden",
                  "description": "Hidden status of changed tab",
                  "type": "Boolean"
                }
              ]
            }
          ],
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-tabs.js",
          "line": 74,
          "description": "<p>The elementId of the currently opened tab. This determines which tab is active and\nwhich tab's content to display. If this is empty, no tabs are open.</p>\n",
          "itemtype": "property",
          "name": "activeId",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 196,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 84,
          "description": "<p>Pass false to use tab style without primary color tabs.</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 93,
          "description": "<p>Class name(s) to use when utilizing tabs in a 'button style'\nimplementation.</p>\n",
          "itemtype": "property",
          "name": "buttonStyleClassNames",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "'button-style'",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 103,
          "description": "<p>Whether the content pane subcomponents should take on the appearance of\na <code>rad-card</code>.</p>\n",
          "itemtype": "property",
          "name": "card",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 203,
          "description": "<p>Class names: <code>rad-tabs</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 184,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-tabs/content'",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 113,
          "description": "<p>The optional elementId of the tab that should be shown by default. This is\nuseful for cases where the user has come into a page and is expecting one\nof the tabs to be shown by default.</p>\n",
          "itemtype": "property",
          "name": "defaultTab",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 124,
          "description": "<p>Optional closure action that will be called whenever a tab is opened with\nthe id of that tab. Use this to create a controlled tabs instance.</p>\n",
          "itemtype": "property",
          "name": "onChange",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{function}",
          "default": "null",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 134,
          "description": "<p>Whether the page should scroll the tab context back to the top when one of\nthe tabs is clicked. This can be a nice convenience for usabilitee.</p>\n",
          "itemtype": "property",
          "name": "scrollOnClick",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 144,
          "description": "<p>What the target of the <code>scrollOnClick</code> behavior should be. By default,\nthe entire page/body scrolls, however if this instance of <code>rad-tabs</code> is\ncontained within a modal or some other scrollable sub-container, it may\nbe more desirable to execute a scroll against that instead of the entire\npage. Simply pass a standard jQuery-like selector in as a string.</p>\n",
          "itemtype": "property",
          "name": "scrollTarget",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "'body, html'",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 157,
          "description": "<p>Class name(s) to apply to the tab <code>&lt;button&gt;</code> elements.</p>\n",
          "itemtype": "property",
          "name": "tabButtonClassNames",
          "type": "{string}",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 163,
          "description": "<p>Class name(s) to use for the individual tab <code>&lt;li&gt;</code> elements.</p>\n",
          "itemtype": "property",
          "name": "tabClassNames",
          "passed": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 209,
          "description": "<p>List of tabs to display. This is iterated through in the template to\nrendered the buttons that are used to change tabs.</p>\n",
          "itemtype": "property",
          "name": "tabList",
          "type": "{Array.<Object>}",
          "default": "null",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        },
        {
          "file": "addon/components/rad-tabs.js",
          "line": 171,
          "description": "<p>Class name(s) to use on the enclosing tabs <code>&lt;ul&gt;</code> element.</p>\n",
          "itemtype": "property",
          "name": "tabListClassNames",
          "passed": "",
          "access": "public",
          "tagname": "",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-tabs.js",
          "line": 239,
          "description": "<p>When the component initializes, we set the <code>tabList</code> property to an array.\nThis prevents multiple instances of rad-tabs on a given page from\ninheriting the same tabList array through prototype inheritance.</p>\n",
          "itemtype": "event",
          "name": "init",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Component.RadTabs",
          "srcFileId": "addon_components_rad-tabs.js"
        }
      ],
      "srcFileId": "addon_components_rad-tabs.js"
    },
    "Component.RadTooltip": {
      "name": "Component.RadTooltip",
      "shortname": "Component.RadTooltip",
      "classitems": [
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 155,
          "description": "<p>Handle showing tooltip content</p>\n",
          "itemtype": "method",
          "name": "_hideContent",
          "return": {
            "description": "undefined"
          },
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 146,
          "description": "<p>Handle showing tooltip content</p>\n",
          "itemtype": "method",
          "name": "_showContent",
          "return": {
            "description": "undefined"
          },
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 102,
          "description": "<p>Unique string used to handle setting up aria roles for A++ usability. This\nidentifier needs to be set as the <code>aria-describedby</code> attr of the tooltip\nhover target and the <code>id</code> of the actual tooltip content</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "class": "Component.RadTooltip",
          "subprops": [
            {
              "name": "elementId",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 52,
          "description": "<p>Adds a brand class to the target as btn-{brand}</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 59,
          "description": "<p>Whether or not to style the target as a link or a button</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 111,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['hidden::active']",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 129,
          "description": "<p>Core component class for targeting element when necessary</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['rad-tooltip']",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 82,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-tooltip/content'",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 181,
          "description": "<p>Show content on focus</p>\n",
          "itemtype": "event",
          "name": "focusIn",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 188,
          "description": "<p>Hide content on focusOut</p>\n",
          "itemtype": "event",
          "name": "focusOut",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 117,
          "description": "<p>State boolean for display of the tooltip content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 167,
          "description": "<p>Show content on mouse enter</p>\n",
          "itemtype": "event",
          "name": "mouseEnter",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 174,
          "description": "<p>Hide content on mouse leave</p>\n",
          "itemtype": "event",
          "name": "mouseLeave",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 66,
          "description": "<p>Available hook that is called on hide of the tooltip</p>\n",
          "itemtype": "property",
          "name": "onHide",
          "type": "{function}",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 72,
          "description": "<p>Available hook that is called on show of the tooltip</p>\n",
          "itemtype": "property",
          "name": "onShow",
          "type": "{function}",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 136,
          "description": "<p>Tooltips should almost aways be inline spans.</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "span",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 90,
          "itemtype": "property",
          "name": "titleComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-tooltip/title'",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/components/rad-tooltip.js",
      "line": 7,
      "description": "<p>A fully accessible tooltip component. The <code>rad-tooltip</code> component can be\nused by itself or in block form as a parent of the title/content\nsubcomponents which represent the title/trigger text to show the\ntooltip and the content to be revealed within the tooltip, respectively.</p>\n<h3>Usage</h3>\n<h4>1. Simple invocation</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>tooltip Title<span class=\"token operator\">=</span><span class=\"token string\">\"Hover me\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"For some rad information that is really really long\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{rad-tooltip Title=\"Hover me\" Content=\"For some rad information that is really really long\"}}</p>\n<h4>2. Block form using contextual components</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>tooltip <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Hover me<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>svg svgId<span class=\"token operator\">=</span><span class=\"token string\">'close'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> For some really rad information<span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>tooltip<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-tooltip as |components|}}\n{{#components.title}}Hover me{{/components.title}}\n{{#components.content}}\n{{rad-svg svgId='close'}} For some really rad information!\n{{/components.content}}\n{{/rad-tooltip}}</p>\n<h4>3. Combine the use of attrs and contextual components.</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>tooltip Title<span class=\"token operator\">=</span><span class=\"token string\">\"Hover me\"</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>For some rad information<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>tooltip<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-tooltip Title=\"Hover me\" as |components|}}\n{{#components.content}}For some rad information{{/components.content}}\n{{/rad-tooltip}}</p>\n<h4>4. Turn the title into a button with <code>buttonStyle</code> and pass a</h4>\n<p><code>brand</code> to change the color of the button.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>tooltip buttonStyle<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> brand<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> Title<span class=\"token operator\">=</span><span class=\"token string\">\"Hover me\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"For some rad information\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 155,
          "description": "<p>Handle showing tooltip content</p>\n",
          "itemtype": "method",
          "name": "_hideContent",
          "return": {
            "description": "undefined"
          },
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 146,
          "description": "<p>Handle showing tooltip content</p>\n",
          "itemtype": "method",
          "name": "_showContent",
          "return": {
            "description": "undefined"
          },
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 102,
          "description": "<p>Unique string used to handle setting up aria roles for A++ usability. This\nidentifier needs to be set as the <code>aria-describedby</code> attr of the tooltip\nhover target and the <code>id</code> of the actual tooltip content</p>\n",
          "itemtype": "property",
          "name": "aria-describedby",
          "type": "{string}",
          "class": "Component.RadTooltip",
          "subprops": [
            {
              "name": "elementId",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 52,
          "description": "<p>Adds a brand class to the target as btn-{brand}</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{String}",
          "default": "''",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 59,
          "description": "<p>Whether or not to style the target as a link or a button</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "default": "false",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 111,
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "default": "['hidden::active']",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 129,
          "description": "<p>Core component class for targeting element when necessary</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['rad-tooltip']",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 82,
          "itemtype": "property",
          "name": "contentComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-tooltip/content'",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 117,
          "description": "<p>State boolean for display of the tooltip content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "default": "true",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 66,
          "description": "<p>Available hook that is called on hide of the tooltip</p>\n",
          "itemtype": "property",
          "name": "onHide",
          "type": "{function}",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 72,
          "description": "<p>Available hook that is called on show of the tooltip</p>\n",
          "itemtype": "property",
          "name": "onShow",
          "type": "{function}",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 136,
          "description": "<p>Tooltips should almost aways be inline spans.</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "span",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 90,
          "itemtype": "property",
          "name": "titleComponent",
          "type": "{string}",
          "passed": "",
          "optional": 1,
          "default": "'rad-tooltip/title'",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 181,
          "description": "<p>Show content on focus</p>\n",
          "itemtype": "event",
          "name": "focusIn",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 188,
          "description": "<p>Hide content on focusOut</p>\n",
          "itemtype": "event",
          "name": "focusOut",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 167,
          "description": "<p>Show content on mouse enter</p>\n",
          "itemtype": "event",
          "name": "mouseEnter",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        },
        {
          "file": "addon/components/rad-tooltip.js",
          "line": 174,
          "description": "<p>Hide content on mouse leave</p>\n",
          "itemtype": "event",
          "name": "mouseLeave",
          "class": "Component.RadTooltip",
          "srcFileId": "addon_components_rad-tooltip.js"
        }
      ],
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    "Eq": {
      "name": "Eq",
      "shortname": "Eq",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/helpers/eq.js",
      "line": 3,
      "description": "<p>Helper to compare two values to see if they are equal. Uses strict equal\ncomparison</p>\n",
      "params": [
        {
          "name": "args",
          "description": "Positional args passed to helper which should be compared",
          "type": "Array"
        }
      ],
      "return": {
        "description": "",
        "type": "Boolean"
      },
      "method": [],
      "property": [],
      "event": [],
      "srcFileId": "addon_helpers_eq.js"
    },
    "InstanceInitializer.FixedBody": {
      "name": "InstanceInitializer.FixedBody",
      "shortname": "InstanceInitializer.FixedBody",
      "classitems": [
        {
          "file": "addon/instance-initializers/fixed-body.js",
          "line": 10,
          "itemtype": "method",
          "name": "initialize",
          "static": 1,
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "InstanceInitializer.FixedBody",
          "srcFileId": "addon_instance-initializers_fixed-body.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/instance-initializers/fixed-body.js",
      "line": 2,
      "description": "<p>This initializer handles sniffing the current browser's scrollbar width. This\nis used by modals to handle freezing the body on open, but can be used by\nany fixed width element that needs to freeze the body using the class\n<code>.fixed-scroll-padding-element</code>.</p>\n",
      "is_constructor": 1,
      "method": [
        {
          "file": "addon/instance-initializers/fixed-body.js",
          "line": 10,
          "itemtype": "method",
          "name": "initialize",
          "static": 1,
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "InstanceInitializer.FixedBody",
          "srcFileId": "addon_instance-initializers_fixed-body.js"
        }
      ],
      "property": [],
      "event": [],
      "srcFileId": "addon_instance-initializers_fixed-body.js"
    },
    "Tagging": {
      "name": "Tagging",
      "shortname": "Tagging",
      "classitems": [
        {
          "file": "addon/services/tagging.js",
          "line": 85,
          "description": "<p>Send a page view by pushing virtual pageview event into data layer</p>\n",
          "itemtype": "method",
          "name": "firePageView",
          "params": [
            {
              "name": "page",
              "description": "<p>url of the page to send</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Tagging",
          "srcFileId": "addon_services_tagging.js"
        },
        {
          "file": "addon/services/tagging.js",
          "line": 29,
          "description": "<p>Fire tag by pushing analytics event into dataLayer</p>\n<p>Passing in an object representing tagging information is now supported and\nis the preferred method for invoking <code>fireTag</code>. Additionally, custom dimensions\nmay now also be passed in as part of this object.</p>\n<p>Example:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">tagging<span class=\"token punctuation\">.</span><span class=\"token function\">fireTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  category<span class=\"token punctuation\">:</span> <span class=\"token string\">'Big Hunks'</span><span class=\"token punctuation\">,</span>\n  action<span class=\"token punctuation\">:</span> <span class=\"token string\">'A hunk didnt listen'</span><span class=\"token punctuation\">,</span>\n  label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hunks are bad listeners'</span><span class=\"token punctuation\">,</span>\n  cd<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    someCD<span class=\"token punctuation\">:</span> <span class=\"token string\">'somevalue'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n",
          "itemtype": "method",
          "name": "fireTag",
          "params": [
            {
              "name": "tag",
              "description": "<p>Tag object containing all of the tag data</p>\n",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Tagging",
          "srcFileId": "addon_services_tagging.js"
        },
        {
          "file": "addon/services/tagging.js",
          "line": 14,
          "description": "<p>Method for pushing an object into the data layer. Used to set the custom\ndimensions included with tags.</p>\n",
          "itemtype": "method",
          "name": "pushData",
          "params": [
            {
              "name": "data",
              "description": "<p>Object of key/value pairs mapping to custom dimensions</p>\n",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Tagging",
          "srcFileId": "addon_services_tagging.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/services/tagging.js",
      "line": 3,
      "description": "<p>Base tagging class. Provides methods for pushing data into the data layer.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Service",
      "method": [
        {
          "file": "addon/services/tagging.js",
          "line": 85,
          "description": "<p>Send a page view by pushing virtual pageview event into data layer</p>\n",
          "itemtype": "method",
          "name": "firePageView",
          "params": [
            {
              "name": "page",
              "description": "<p>url of the page to send</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Tagging",
          "srcFileId": "addon_services_tagging.js"
        },
        {
          "file": "addon/services/tagging.js",
          "line": 29,
          "description": "<p>Fire tag by pushing analytics event into dataLayer</p>\n<p>Passing in an object representing tagging information is now supported and\nis the preferred method for invoking <code>fireTag</code>. Additionally, custom dimensions\nmay now also be passed in as part of this object.</p>\n<p>Example:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">tagging<span class=\"token punctuation\">.</span><span class=\"token function\">fireTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  category<span class=\"token punctuation\">:</span> <span class=\"token string\">'Big Hunks'</span><span class=\"token punctuation\">,</span>\n  action<span class=\"token punctuation\">:</span> <span class=\"token string\">'A hunk didnt listen'</span><span class=\"token punctuation\">,</span>\n  label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hunks are bad listeners'</span><span class=\"token punctuation\">,</span>\n  cd<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    someCD<span class=\"token punctuation\">:</span> <span class=\"token string\">'somevalue'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n",
          "itemtype": "method",
          "name": "fireTag",
          "params": [
            {
              "name": "tag",
              "description": "<p>Tag object containing all of the tag data</p>\n",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Tagging",
          "srcFileId": "addon_services_tagging.js"
        },
        {
          "file": "addon/services/tagging.js",
          "line": 14,
          "description": "<p>Method for pushing an object into the data layer. Used to set the custom\ndimensions included with tags.</p>\n",
          "itemtype": "method",
          "name": "pushData",
          "params": [
            {
              "name": "data",
              "description": "<p>Object of key/value pairs mapping to custom dimensions</p>\n",
              "type": "Object"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Tagging",
          "srcFileId": "addon_services_tagging.js"
        }
      ],
      "property": [],
      "event": [],
      "srcFileId": "addon_services_tagging.js"
    },
    "Utils.Arias": {
      "name": "Utils.Arias",
      "shortname": "Utils.Arias",
      "classitems": [
        {
          "file": "addon/utils/arias.js",
          "line": 6,
          "description": "<p>Method or generating a unique string to use for binding aria-controls\nattributes. Returns a prefix with elementID.</p>\n",
          "itemtype": "method",
          "name": "controls",
          "static": 1,
          "return": {
            "description": "Unique string for use with binding `aria-controls`",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        },
        {
          "file": "addon/utils/arias.js",
          "line": 17,
          "description": "<p>Method for generating a unique string to use for binding aria-describedby\nattributes. Returns a prefix with elementID</p>\n",
          "itemtype": "method",
          "name": "describedby",
          "static": 1,
          "return": {
            "description": "Unique string for use with binding `aria-describedby`",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        },
        {
          "file": "addon/utils/arias.js",
          "line": 28,
          "description": "<p>Method for use with binding aria-expanded. Returns string of negated boolean\nfor hidden.</p>\n",
          "itemtype": "method",
          "name": "expanded",
          "static": 1,
          "return": {
            "description": "String of negated boolean hidden for expanded",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        },
        {
          "file": "addon/utils/arias.js",
          "line": 39,
          "description": "<p>Method for use with directly binding <code>aria-hidden</code> to a component which\nrequires a string boolean b/c Ember will remove the attribute if it is\nboolean false.</p>\n",
          "itemtype": "method",
          "name": "hiddenForArias",
          "static": 1,
          "return": {
            "description": "String of boolean hidden",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        },
        {
          "file": "addon/utils/arias.js",
          "line": 51,
          "description": "<p>Method for generating a unique string to use for binding aria-labelledby\nattributes. Returns prefix with elementID</p>\n",
          "itemtype": "method",
          "name": "labelledby",
          "static": 1,
          "return": {
            "description": "Unique string for use with binding `aria-labelledby`",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/utils/arias.js",
      "line": 1,
      "is_constructor": 1,
      "method": [
        {
          "file": "addon/utils/arias.js",
          "line": 6,
          "description": "<p>Method or generating a unique string to use for binding aria-controls\nattributes. Returns a prefix with elementID.</p>\n",
          "itemtype": "method",
          "name": "controls",
          "static": 1,
          "return": {
            "description": "Unique string for use with binding `aria-controls`",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        },
        {
          "file": "addon/utils/arias.js",
          "line": 17,
          "description": "<p>Method for generating a unique string to use for binding aria-describedby\nattributes. Returns a prefix with elementID</p>\n",
          "itemtype": "method",
          "name": "describedby",
          "static": 1,
          "return": {
            "description": "Unique string for use with binding `aria-describedby`",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        },
        {
          "file": "addon/utils/arias.js",
          "line": 28,
          "description": "<p>Method for use with binding aria-expanded. Returns string of negated boolean\nfor hidden.</p>\n",
          "itemtype": "method",
          "name": "expanded",
          "static": 1,
          "return": {
            "description": "String of negated boolean hidden for expanded",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        },
        {
          "file": "addon/utils/arias.js",
          "line": 39,
          "description": "<p>Method for use with directly binding <code>aria-hidden</code> to a component which\nrequires a string boolean b/c Ember will remove the attribute if it is\nboolean false.</p>\n",
          "itemtype": "method",
          "name": "hiddenForArias",
          "static": 1,
          "return": {
            "description": "String of boolean hidden",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        },
        {
          "file": "addon/utils/arias.js",
          "line": 51,
          "description": "<p>Method for generating a unique string to use for binding aria-labelledby\nattributes. Returns prefix with elementID</p>\n",
          "itemtype": "method",
          "name": "labelledby",
          "static": 1,
          "return": {
            "description": "Unique string for use with binding `aria-labelledby`",
            "type": "String"
          },
          "class": "Utils.Arias",
          "srcFileId": "addon_utils_arias.js"
        }
      ],
      "property": [],
      "event": [],
      "srcFileId": "addon_utils_arias.js"
    },
    "Utils.Listeners": {
      "name": "Utils.Listeners",
      "shortname": "Utils.Listeners",
      "classitems": [
        {
          "file": "addon/utils/listeners.js",
          "line": 8,
          "description": "<p>Handle binding a listener to an element that calls a callback (typically a\nclose method) when the escape key is pressed.</p>\n",
          "itemtype": "method",
          "name": "closeOnEscape",
          "params": [
            {
              "name": "namespace",
              "description": "<p>Unique namespace for the listener</p>\n",
              "type": "String"
            },
            {
              "name": "cb",
              "description": "<p>The method to call when the escape key is pressed</p>\n",
              "type": "Function"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Utils.Listeners",
          "srcFileId": "addon_utils_listeners.js"
        },
        {
          "file": "addon/utils/listeners.js",
          "line": 24,
          "description": "<p>Handle unbinding escape listener.</p>\n",
          "itemtype": "method",
          "name": "unbindOnEscape",
          "params": [
            {
              "name": "namespace",
              "description": "<p>Unique namespace for the listener</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Utils.Listeners",
          "srcFileId": "addon_utils_listeners.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/utils/listeners.js",
      "line": 3,
      "is_constructor": 1,
      "method": [
        {
          "file": "addon/utils/listeners.js",
          "line": 8,
          "description": "<p>Handle binding a listener to an element that calls a callback (typically a\nclose method) when the escape key is pressed.</p>\n",
          "itemtype": "method",
          "name": "closeOnEscape",
          "params": [
            {
              "name": "namespace",
              "description": "<p>Unique namespace for the listener</p>\n",
              "type": "String"
            },
            {
              "name": "cb",
              "description": "<p>The method to call when the escape key is pressed</p>\n",
              "type": "Function"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Utils.Listeners",
          "srcFileId": "addon_utils_listeners.js"
        },
        {
          "file": "addon/utils/listeners.js",
          "line": 24,
          "description": "<p>Handle unbinding escape listener.</p>\n",
          "itemtype": "method",
          "name": "unbindOnEscape",
          "params": [
            {
              "name": "namespace",
              "description": "<p>Unique namespace for the listener</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Utils.Listeners",
          "srcFileId": "addon_utils_listeners.js"
        }
      ],
      "property": [],
      "event": [],
      "srcFileId": "addon_utils_listeners.js"
    },
    "Util.Analytics.SetupGTM": {
      "name": "Util.Analytics.SetupGTM",
      "shortname": "Util.Analytics.SetupGTM",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "file": "addon/utils/setup-gtm.js",
      "line": 1,
      "description": "<p>Analytics Setup Script</p>\n<p>This script will insert a script tag to pull down the google tag manager\nlibrary. That library will also handle pulling down the google analytics\nlibrary.</p>\n<p>Invoke this function with the unique GTM container ID from you friendly\nneighborhood analytics contact.</p>\n<p><em>NOTE: will attach <code>dataLayer</code> to window for namespacing analytics events.</em></p>\n",
      "params": [
        {
          "name": "containerId",
          "description": "Unique id matching application GTM id",
          "type": "String"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "method": [],
      "property": [],
      "event": [],
      "srcFileId": "addon_utils_setup-gtm.js"
    }
  },
  "elements": {},
  "classitems": [
    {
      "file": "addon/components/rad-modal.js",
      "line": 208,
      "description": "<p>Pass a string for simple text modal header. If the modal should have no\nheader, pass null to this property. This will ensure that <code>aria-labelledby</code>\nis <em>not</em> bound to the modal instance (because there is no header to label\nthe modal).</p>\n",
      "itemtype": "property",
      "name": "Header",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 277,
      "description": "<p>Determines if the modal is currently <em>active</em>, which means that the modal\nhas been opened/closed. Note that this is different from <em>visible</em>. Due to\ntransition time, a modal can be <em>active</em> but not yet <em>visible</em> to the user.\nSeperate props are required for tracking active vs visible to allow the\ncss animations to trigger.</p>\n",
      "itemtype": "property",
      "name": "_active",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 153,
      "description": "<p>Stored reference to <code>run.later</code> created in <code>mouseLeave</code> that will close any\nopen dropdown. Is used in <code>mouseEnter</code> to cancel auto close.</p>\n",
      "itemtype": "property",
      "name": "_autoCloseRunLater",
      "type": "{?Function}",
      "default": "null",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 195,
      "description": "<p>When the dropdown is opened, bind an event listener that will close it if\nthe user clicks anywhere other than the dropdown.</p>\n",
      "itemtype": "method",
      "name": "_bindDropdownListeners",
      "access": "protected",
      "tagname": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 221,
      "description": "<p>Internal method that can be used with a <code>run.once</code> call to only add new tabs\nonce per run loop. Simply iterates through <code>_tabsToCreate</code> and pushes them\ninto the <code>tabList</code>. This is needed to prevent multiple renders in a single\nrun loop when all of the <code>content</code> subcomponents register themselves with\nthe container during init.</p>\n",
      "itemtype": "method",
      "name": "_createTabsList",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 33,
      "description": "<p>Internal method that handles firiing a tag with or without custom dimensions.</p>\n",
      "itemtype": "method",
      "name": "_fireTag",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 312,
      "description": "<p>Handle modal cleanup here:</p>\n<ul>\n<li>Unfreeze body</li>\n<li>Remove 'active' class from modal elements to hide them if still in DOM</li>\n<li>Return focus to last active element unless disabled (for better\nusability)</li>\n</ul>\n",
      "itemtype": "method",
      "name": "_handleClose",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 357,
      "description": "<p>Handle modal open work here:</p>\n<ul>\n<li>Freeze the body so that scrolling inside the modal doesn't jank up the\nscreen</li>\n<li>Add 'active' class to modal elements, if the modal is already in DOM this\nwill make it visible</li>\n<li>Set private reference to currently active DOM element so we can return\nfocus to it when the modal closes (for usability)</li>\n</ul>\n",
      "itemtype": "method",
      "name": "_handleOpen",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 103,
      "description": "<p>Computed <code>_hidden</code> accounts for whether the tab is selected (by checking\n<code>activeId</code>) &amp;&amp; if this tab has been flagged to be hidden with property\n<code>hidden</code></p>\n",
      "itemtype": "property",
      "name": "_hidden",
      "return": {
        "description": "String of true/false for use with `aria-hidden` binding",
        "type": "String"
      },
      "class": "Component.RadTabs.Content",
      "subprops": [
        {
          "name": "activeId",
          "description": "",
          "type": "String"
        },
        {
          "name": "hidden",
          "description": "",
          "type": "Boolean"
        }
      ],
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 166,
      "description": "<p>Handle showing tooltip content</p>\n",
      "itemtype": "method",
      "name": "_hideContent",
      "return": {
        "description": "undefined"
      },
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 155,
      "description": "<p>Handle showing tooltip content</p>\n",
      "itemtype": "method",
      "name": "_hideContent",
      "return": {
        "description": "undefined"
      },
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 288,
      "description": "<p>Private reference to the last focused element in the DOM before the modal\nwas opened. This is used to make the experience for keyboard users not\nterrible.</p>\n",
      "itemtype": "property",
      "name": "_lastFocusedElement",
      "type": "{Object}",
      "default": "undefined",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 122,
      "description": "<p>Allows for quick and easy dismissal of the alert. The alert is faded from\nview, then totally removed from the DOM and the component instance is\ndestroyed.</p>\n",
      "itemtype": "method",
      "name": "_selfDestruct",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 158,
      "description": "<p>Handle showing tooltip content</p>\n",
      "itemtype": "method",
      "name": "_showContent",
      "return": {
        "description": "undefined"
      },
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 146,
      "description": "<p>Handle showing tooltip content</p>\n",
      "itemtype": "method",
      "name": "_showContent",
      "return": {
        "description": "undefined"
      },
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 212,
      "description": "<p>Remove click listener from body. Used to DRY up our cleanup code in the\nsupported click and mouse out close liseners.</p>\n",
      "itemtype": "method",
      "name": "_unbindClickListener",
      "access": "protected",
      "tagname": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 298,
      "description": "<p>Determines if the modal should be rendered in the template. This is not\nequivalent to <code>open</code>. In order for CSS transitions to work properly, the\nmodal must be rendered in the DOM when the class that applies the\ntransition is added to/removed from the modal.</p>\n",
      "itemtype": "property",
      "name": "_visible",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 141,
      "description": "<p>Actions hash</p>\n",
      "itemtype": "property",
      "name": "actions",
      "type": "{Object}",
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 210,
      "description": "<p>Actions Hash</p>\n",
      "itemtype": "property",
      "name": "actions",
      "type": "{Object}",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 274,
      "description": "<p>Actions</p>\n",
      "itemtype": "property",
      "name": "actions",
      "type": "{Object}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-state.js",
      "line": 67,
      "description": "<p>Actions hash</p>\n",
      "itemtype": "property",
      "name": "actions",
      "type": "{Object}",
      "class": "Component.RadState",
      "srcFileId": "addon_components_rad-state.js"
    },
    {
      "file": "addon/components/rad-state.js",
      "line": 50,
      "description": "<p>Boolean state tracking property. Use this to handle show/hide status.</p>\n",
      "itemtype": "property",
      "name": "active",
      "type": "{Boolean}",
      "class": "Component.RadState",
      "srcFileId": "addon_components_rad-state.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 70,
      "description": "<p>The id of the currently active tab in the scope of the rad-tabs component.\nThis is provided privately in the <code>rad-tabs</code> yield hash.</p>\n",
      "itemtype": "property",
      "name": "activeId",
      "type": "{String}",
      "default": "''",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 74,
      "description": "<p>The elementId of the currently opened tab. This determines which tab is active and\nwhich tab's content to display. If this is empty, no tabs are open.</p>\n",
      "itemtype": "property",
      "name": "activeId",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{String}",
      "default": "''",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 152,
      "description": "<p>CSS transitions the modal on open. Accepts 'left', 'right', 'bottom', 'top'.</p>\n",
      "itemtype": "property",
      "name": "animateFrom",
      "type": "{String}",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-tooltip/content.js",
      "line": 21,
      "description": "<p>Unique string generated by parent <code>rad-tooltip</code> Used for 508 attrs. Is\nbound to id here and <code>aria-describedby</code> on the tooltip title. Is bound\nto id in <code>init</code> call.</p>\n",
      "itemtype": "property",
      "name": "aria-describedby",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadTooltip.Content",
      "srcFileId": "addon_components_rad-tooltip_content.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 112,
      "description": "<p>Unique string used to handle setting up aria roles for A++ usability. This\nidentifier needs to be set as the <code>aria-describedby</code> attr of the popover\nhover target and the <code>id</code> of the actual popover content</p>\n",
      "itemtype": "property",
      "name": "aria-describedby",
      "type": "{string}",
      "class": "Component.RadPopover",
      "subprops": [
        {
          "name": "elementId",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 102,
      "description": "<p>Unique string used to handle setting up aria roles for A++ usability. This\nidentifier needs to be set as the <code>aria-describedby</code> attr of the tooltip\nhover target and the <code>id</code> of the actual tooltip content</p>\n",
      "itemtype": "property",
      "name": "aria-describedby",
      "type": "{string}",
      "class": "Component.RadTooltip",
      "subprops": [
        {
          "name": "elementId",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-tooltip/title.js",
      "line": 35,
      "description": "<p>Unique string generated by parent <code>rad-tooltip</code> Used for 508 attrs. Is\nbound to the <code>aria-describedby</code> attr.</p>\n",
      "itemtype": "property",
      "name": "aria-describedby",
      "type": "{string}",
      "class": "Component.RadTooltip.Title",
      "srcFileId": "addon_components_rad-tooltip_title.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 55,
      "description": "<p>Unique string generated by parent <code>rad-popover</code> Used for 508 attrs. Is\nbound to id here and <code>aria-describedby</code> on the popover title.</p>\n",
      "itemtype": "property",
      "name": "aria-describedby",
      "type": "{string}",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-dropdown/target.js",
      "line": 17,
      "description": "<p>Ember fun: Attribute bindings require a value to bind on.</p>\n",
      "itemtype": "property",
      "name": "aria-haspopup",
      "type": "string",
      "class": "Component.RadDropdown.Target",
      "srcFileId": "addon_components_rad-dropdown_target.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 134,
      "description": "<p>If a modal should not have a visible header, pass a label for the modal\nusing this property. It will be bound to a hidden div with the correct\naria attrs so that we're rocking A+ accessibility all day every day.</p>\n",
      "itemtype": "property",
      "name": "ariaHeader",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 146,
      "description": "<p>Unique id for binding <code>aria-controls</code> in subcomponents</p>\n",
      "itemtype": "property",
      "name": "ariaId",
      "type": "{string}",
      "class": "Component.RadDrawer",
      "subprops": [
        {
          "name": "elementId",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 82,
      "description": "<p>Aria role <code>tabpanel</code> is bound for A++ accessibility.</p>\n",
      "itemtype": "property",
      "name": "ariaRole",
      "type": "{string}",
      "default": "tabpanel",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 75,
      "description": "<p>The <code>aria</code> role of this tooltip. Improves usability.</p>\n",
      "itemtype": "property",
      "name": "ariaRole",
      "type": "{string}",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 95,
      "description": "<p>A++ accessibility. Tells a screen this component is an alert.</p>\n",
      "itemtype": "property",
      "name": "ariaRole",
      "type": "{string}",
      "default": "'alert'",
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 196,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-svg.js",
      "line": 36,
      "description": "<p>Allow direct binding of <code>data-test</code> attributes so that icons can be\ndirectly targeted in automated testing.</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadSVG",
      "srcFileId": "addon_components_rad-svg.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 89,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n<li><code>_hidden</code>: to hide this tab if it is not selected or if prop hidden is true</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-dropdown/content.js",
      "line": 39,
      "description": "<p>Bind <code>aria-hidden</code> for A+ usability</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadDropdown.Content",
      "srcFileId": "addon_components_rad-dropdown_content.js"
    },
    {
      "file": "addon/components/rad-dropdown/target.js",
      "line": 33,
      "description": "<p>Bind <code>aria-haspopup</code> and <code>aria-expanded</code> for A+ usability</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadDropdown.Target",
      "srcFileId": "addon_components_rad-dropdown_target.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 172,
      "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-card/title.js",
      "line": 24,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadCard.Title",
      "srcFileId": "addon_components_rad-card_title.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 176,
      "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-card/footer.js",
      "line": 24,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadCard.Footer",
      "srcFileId": "addon_components_rad-card_footer.js"
    },
    {
      "file": "addon/components/rad-drawer/target.js",
      "line": 44,
      "description": "<p>Bind <code>aria-expanded</code> and <code>aria-controls</code> to the root element;\nBind modified <code>dataTest</code> to <code>data-test</code> attr</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadDrawer.Target",
      "srcFileId": "addon_components_rad-drawer_target.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 121,
      "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 81,
      "description": "<p>Handle binding <code>hidden</code> and <code>aria-hidden</code> for A++ usability :thumbsup:</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 93,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-drawer/content.js",
      "line": 27,
      "description": "<p>Bind <code>aria-hidden</code> for A+ usability\nBind <code>data-test</code> attr to modified <code>dataTest</code> value</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadDrawer.Content",
      "srcFileId": "addon_components_rad-drawer_content.js"
    },
    {
      "file": "addon/components/rad-card/body.js",
      "line": 24,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadCard.Body",
      "srcFileId": "addon_components_rad-card_body.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 168,
      "description": "<p>ALLLLLLLLLLL the attributes you might need.\nNOTE: <code>role</code> should not be bound here. You can set the role of a button\nby passing an <a href=\"http://emberjs.com/api/classes/Ember.Component.html#property_ariaRole\">ariaRole</a> prop.</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 76,
      "description": "<p>When <code>autoClose</code> is set to true, the dropdown will automatically close\nitself 2.5sec after the user mouses out of it.</p>\n",
      "itemtype": "property",
      "name": "autoClose",
      "type": "{Boolean}",
      "passed": "",
      "optional": 1,
      "default": "false",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 143,
      "description": "<p>Unless autoFocus is toggled to false, the modal will store a\nreference to whatever element is currently active in the dom and return\nfocus to that element when the modal closes.</p>\n",
      "itemtype": "property",
      "name": "autoFocus",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 65,
      "itemtype": "property",
      "name": "bodyComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-card/body'",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 45,
      "description": "<p>Specify brand, component handles assigning correct css class</p>\n",
      "itemtype": "property",
      "name": "brand",
      "default": "''",
      "type": "{string}",
      "access": "public",
      "tagname": "",
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 30,
      "description": "<p>Pass a brand to use to style the component and it's child components.</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 86,
      "description": "<p>Adds a brand class to the target as btn-{brand}</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{String}",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 45,
      "description": "<p>If you want that header to have some pop</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{?string}",
      "passed": "",
      "optional": 1,
      "default": "null",
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 56,
      "description": "<p>Pass a brand to have <code>btn-${brand}</code> class applied</p>\n",
      "itemtype": "property",
      "name": "brand",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{?string}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 52,
      "description": "<p>Adds a brand class to the target as btn-{brand}</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{String}",
      "default": "''",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 84,
      "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{string}",
      "access": "private",
      "tagname": "",
      "class": "Component.RadAlert",
      "subprops": [
        {
          "name": "'brand'",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 100,
      "description": "<p>Computed css class for the brand bound to the component.</p>\n",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{String}",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 100,
      "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{string}",
      "class": "Component.RadModal.Header",
      "subprops": [
        {
          "name": "brand",
          "description": "",
          "type": "String"
        }
      ],
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 154,
      "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{string}",
      "class": "Component.RadButton",
      "subprops": [
        {
          "name": "'brand'",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-drawer/target.js",
      "line": 18,
      "description": "<p>Display the target content as a button instead of a plain link. Passed in\nfrom the parent <code>rad-drawer</code> and ultimately updates the <code>link</code>\nproperty on <code>rad-button</code>.</p>\n",
      "itemtype": "property",
      "name": "buttonStyle",
      "type": "{Boolean}",
      "class": "Component.RadDrawer.Target",
      "srcFileId": "addon_components_rad-drawer_target.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 84,
      "description": "<p>Pass false to use tab style without primary color tabs.</p>\n",
      "itemtype": "property",
      "name": "buttonStyle",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 93,
      "description": "<p>Whether or not to style the target as a link or a button</p>\n",
      "itemtype": "property",
      "name": "buttonStyle",
      "type": "{Boolean}",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 59,
      "description": "<p>Whether or not to style the target as a link or a button</p>\n",
      "itemtype": "property",
      "name": "buttonStyle",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 100,
      "description": "<p>By default, the <code>target</code> subcomponent will display as a plain link. If you\nwould like it to display as a button, set this to <code>true</code>.</p>\n",
      "itemtype": "property",
      "name": "buttonStyle",
      "type": "{Boolean}",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 93,
      "description": "<p>Class name(s) to use when utilizing tabs in a 'button style'\nimplementation.</p>\n",
      "itemtype": "property",
      "name": "buttonStyleClassNames",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{String}",
      "default": "'button-style'",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 53,
      "description": "<p>Whether this alert can be dismissed via the close button in the upper right\ncorner. Defaults to true. Adds an interactive close button to the alert.</p>\n<p><strong>Usage:</strong>\nOverride by passing <code>false</code> into this param in your handlebars template:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>alert canDismiss<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span> Standard template content goes here <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
      "itemtype": "property",
      "name": "canDismiss",
      "type": "{boolean}",
      "default": "true",
      "access": "public",
      "tagname": "",
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 103,
      "description": "<p>Whether the content pane subcomponents should take on the appearance of\na <code>rad-card</code>.</p>\n",
      "itemtype": "property",
      "name": "card",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{Boolean}",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 37,
      "description": "<p>Custom className(s) to use on the body subcomponent's root element</p>\n",
      "itemtype": "property",
      "name": "cardBodyClassNames",
      "type": "{string}",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-card/body.js",
      "line": 14,
      "description": "<p>Bind standard core class: <code>card-body</code></p>\n",
      "itemtype": "property",
      "name": "cardBodyClassNames",
      "type": "{Array}",
      "class": "Component.RadCard.Body",
      "srcFileId": "addon_components_rad-card_body.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 43,
      "description": "<p>Custom className(s) to use on <code>rad-card</code>'s root element</p>\n",
      "itemtype": "property",
      "name": "cardClassNames",
      "type": "{string}",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-card/footer.js",
      "line": 14,
      "description": "<p>Bind standard core class: <code>card-footer</code></p>\n",
      "itemtype": "property",
      "name": "cardFooterClassNames",
      "type": "{Array}",
      "class": "Component.RadCard.Footer",
      "srcFileId": "addon_components_rad-card_footer.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 49,
      "description": "<p>Custom className(s) to use on the footer subcomponent's root element</p>\n",
      "itemtype": "property",
      "name": "cardFooterClassNames",
      "type": "{string}",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-card/title.js",
      "line": 14,
      "description": "<p>Bind standard core class: <code>card-title</code></p>\n",
      "itemtype": "property",
      "name": "cardTitleClassNames",
      "type": "{Array}",
      "class": "Component.RadCard.Title",
      "srcFileId": "addon_components_rad-card_title.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 55,
      "description": "<p>Custom className(s) to use on the title subcomponent's root element</p>\n",
      "itemtype": "property",
      "name": "cardTitleClassNames",
      "type": "{string}",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-card/footer.js",
      "line": 31,
      "description": "<p>Bind props to classes on the root component element.</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadCard.Footer",
      "srcFileId": "addon_components_rad-card_footer.js"
    },
    {
      "file": "addon/components/rad-card/body.js",
      "line": 31,
      "description": "<p>Bind props to classes on the root component element.</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadCard.Body",
      "srcFileId": "addon_components_rad-card_body.js"
    },
    {
      "file": "addon/components/rad-svg.js",
      "line": 50,
      "description": "<p>Bound classNames: <code>svgId</code></p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadSVG",
      "srcFileId": "addon_components_rad-svg.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 111,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['hidden::active']",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-dropdown/content.js",
      "line": 54,
      "description": "<p>Binds <code>dropdown-menu</code> class if {{cross-link class=\"Component.RadDropdown.Content\" item=\"dropdownMenu\"}} is true</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadDropdown.Content",
      "srcFileId": "addon_components_rad-dropdown_content.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 266,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['_active:active']",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 195,
      "description": "<p>Handle binding brand and link related css class names</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 112,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['brandClass']",
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-card/title.js",
      "line": 31,
      "description": "<p>Bind props to classes on the root component element.</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadCard.Title",
      "srcFileId": "addon_components_rad-card_title.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 110,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['brandClass', 'brandClass:branded']",
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 179,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['hidden::active']",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 128,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['hidden::active']",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 93,
      "description": "<p>Bind size and position props</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 153,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['hidden::active']",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 114,
      "description": "<p>Bind props to classes on the root component element.</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 185,
      "description": "<p>Bind <code>rad-dropdown</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 97,
      "description": "<p>Class names: <code>tabs-content</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 186,
      "description": "<p>Bind standard rad classname for component: <code>rad-button</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 106,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['rad-alert']",
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 87,
      "description": "<p>Bind wrapping classname <code>popover-content</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-tooltip/title.js",
      "line": 58,
      "description": "<p>Handle binding standard core class name <code>tooltip-title</code> and <code>basic-b</code>\nbound for display purposes</p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadTooltip.Title",
      "srcFileId": "addon_components_rad-tooltip_title.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 134,
      "description": "<p>Bind standard core class: <code>rad-popover</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 203,
      "description": "<p>Class names: <code>rad-tabs</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-drawer/content.js",
      "line": 34,
      "description": "<p>Bind <code>dropdown-content</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDrawer.Content",
      "srcFileId": "addon_components_rad-drawer_content.js"
    },
    {
      "file": "addon/components/rad-dropdown/content.js",
      "line": 48,
      "description": "<p>Bind <code>dropdown-content</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDropdown.Content",
      "srcFileId": "addon_components_rad-dropdown_content.js"
    },
    {
      "file": "addon/components/rad-dropdown/menu-item.js",
      "line": 14,
      "description": "<p>Binds <code>dropdown-item</code> class</p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDropdown.MenuItem",
      "srcFileId": "addon_components_rad-dropdown_menu-item.js"
    },
    {
      "file": "addon/components/rad-dropdown/target.js",
      "line": 39,
      "description": "<p>Bind <code>dropdown-target</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDropdown.Target",
      "srcFileId": "addon_components_rad-dropdown_target.js"
    },
    {
      "file": "addon/components/rad-tooltip/content.js",
      "line": 43,
      "description": "<p>Handle binding standard core class names: <code>jsTooltipTarget</code> &amp;&amp; <code>tooltip-content</code>\n<code>jsTooltipTarget</code> is being used for css positioning. Do we want to pass that\ndirectly instead? probably.</p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadTooltip.Content",
      "srcFileId": "addon_components_rad-tooltip_content.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 129,
      "description": "<p>Core component class for targeting element when necessary</p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['rad-tooltip']",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 159,
      "description": "<p>Bind <code>rad-drawer</code> to component</p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-drawer/target.js",
      "line": 54,
      "description": "<p>Bind <code>drawer-target</code> and <code>basic-b</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDrawer.Target",
      "srcFileId": "addon_components_rad-drawer_target.js"
    },
    {
      "file": "addon/components/rad-modal/footer.js",
      "line": 14,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['modal-footer']",
      "class": "Component.RadModal.Footer",
      "srcFileId": "addon_components_rad-modal_footer.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 108,
      "description": "<p>Bind standard core class: <code>card-footer</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 116,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['modal-header']",
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-svg.js",
      "line": 44,
      "description": "<p>Class names: <code>rad-svg</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadSVG",
      "srcFileId": "addon_components_rad-svg.js"
    },
    {
      "file": "addon/components/rad-dropdown/menu-item.js",
      "line": 20,
      "description": "<p>Placeholder closure action for click events. If no value is passed in it\nwill just call <code>_super</code> from the original <code>RadButton</code> class and then call\nthe <code>hide</code> closure action.</p>\n",
      "itemtype": "event",
      "name": "click",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDropdown.MenuItem",
      "srcFileId": "addon_components_rad-dropdown_menu-item.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 144,
      "description": "<p>Behavior to execute when clicking the button; pass any closure action in and Ember's built-in click event listener will execute it for you.</p>\n",
      "itemtype": "property",
      "name": "click",
      "access": "public",
      "tagname": "",
      "passed": "",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 54,
      "description": "<p>Controls display of the modal header close button. Is defaulted to true and\ncan be set to false in order to suppress the header close button.</p>\n",
      "itemtype": "property",
      "name": "closeButton",
      "type": "{!Boolean}",
      "passed": "",
      "optional": 1,
      "default": "true",
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 158,
      "description": "<p>Controls display of the modal header close button. Is defaulted to true and\ncan be set to false in order to suppress the header close button.</p>\n",
      "itemtype": "property",
      "name": "closeButton",
      "type": "{!Boolean}",
      "passed": "",
      "optional": 1,
      "default": "true",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 64,
      "description": "<p>Controls the SVG Id of the close button.</p>\n",
      "itemtype": "property",
      "name": "closeIcon",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'close'",
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 168,
      "description": "<p>Controls the SVG Id of the close button.</p>\n",
      "itemtype": "property",
      "name": "closeIcon",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'close'",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 88,
      "description": "<p>Closure action bound to header close button.</p>\n",
      "itemtype": "property",
      "name": "closeModal",
      "type": "{function}",
      "passed": "",
      "optional": 1,
      "closure": "",
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 233,
      "description": "<p>Closure action passed into the modal. Is event delegated to the modal\nbackground for close on click (unless 'hideBackground' is true)</p>\n",
      "itemtype": "property",
      "name": "closeModal",
      "type": "{function}",
      "passed": "",
      "optional": 1,
      "closure": "",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-state.js",
      "line": 73,
      "description": "<p>Sets the <a href=\"#property_active\">active</a> property to false.</p>\n",
      "itemtype": "method",
      "name": "closeModal",
      "class": "Component.RadState",
      "srcFileId": "addon_components_rad-state.js"
    },
    {
      "file": "addon/utils/listeners.js",
      "line": 8,
      "description": "<p>Handle binding a listener to an element that calls a callback (typically a\nclose method) when the escape key is pressed.</p>\n",
      "itemtype": "method",
      "name": "closeOnEscape",
      "params": [
        {
          "name": "namespace",
          "description": "<p>Unique namespace for the listener</p>\n",
          "type": "String"
        },
        {
          "name": "cb",
          "description": "<p>The method to call when the escape key is pressed</p>\n",
          "type": "Function"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Utils.Listeners",
      "srcFileId": "addon_utils_listeners.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 82,
      "itemtype": "property",
      "name": "contentComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-tooltip/content'",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 92,
      "itemtype": "property",
      "name": "contentComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-popover/content'",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 126,
      "itemtype": "property",
      "name": "contentComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-dropdown/content'",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 126,
      "itemtype": "property",
      "name": "contentComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-drawer/content'",
      "class": "Component.RadDrawer"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 184,
      "itemtype": "property",
      "name": "contentComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-tabs/content'",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 134,
      "itemtype": "property",
      "name": "contentComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-drawer/content'",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/utils/arias.js",
      "line": 6,
      "description": "<p>Method or generating a unique string to use for binding aria-controls\nattributes. Returns a prefix with elementID.</p>\n",
      "itemtype": "method",
      "name": "controls",
      "static": 1,
      "return": {
        "description": "Unique string for use with binding `aria-controls`",
        "type": "String"
      },
      "class": "Utils.Arias",
      "srcFileId": "addon_utils_arias.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 113,
      "description": "<p>The optional elementId of the tab that should be shown by default. This is\nuseful for cases where the user has come into a page and is expecting one\nof the tabs to be shown by default.</p>\n",
      "itemtype": "property",
      "name": "defaultTab",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{String}",
      "default": "''",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/utils/arias.js",
      "line": 17,
      "description": "<p>Method for generating a unique string to use for binding aria-describedby\nattributes. Returns a prefix with elementID</p>\n",
      "itemtype": "method",
      "name": "describedby",
      "static": 1,
      "return": {
        "description": "Unique string for use with binding `aria-describedby`",
        "type": "String"
      },
      "class": "Utils.Arias",
      "srcFileId": "addon_utils_arias.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 425,
      "description": "<p>When modal is inserted into DOM, check if it should be open by default, if\nso we need to call <code>_handleOpen</code> manually to open it.</p>\n",
      "itemtype": "method",
      "name": "didInsertElement",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 178,
      "description": "<p>Checks for a position prop value; if none was supplied, set a default\nof <code>bottom</code></p>\n",
      "itemtype": "event",
      "name": "didReceiveAttrs",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 187,
      "description": "<p>The component's <code>didReceiveAttrs</code> hook. Allows udpates from external state\nto adjust the <code>hidden</code> state of a <code>rad-drawer</code> instance.</p>\n",
      "itemtype": "event",
      "name": "didReceiveAttrs",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-dropdown/menu-item.js",
      "line": 38,
      "description": "<p>When attributes are received, if a prop exists for click, we assume that\nsome custom behavior has been passed in. However, this custom behavior will\noverride our default behavior of closing the dropdown menus when a menu\nitem is clicked, which is bad.</p>\n<p>So, we will compare the new value of <code>click</code> with an old value that we\nmanually store. If they are not equal, we set up a new method that calls\nsuper, runs the new behavior, and then runs the passed-in hide action. This\nalso works well for setting up default click behavior when no click action\nis passed in, as the initial value of click is a dummy closure.</p>\n<p>This method is then stored on both the <code>click</code> and <code>_click</code> properties so\nthat it can be used by default for clicks, and so that it is preserved\nfor comparison if/when a new action is passed in. Because we compare the\nold and new values, the method creation and setting should really only\nevaluate the first time attributes are passed in unless the user is doing\nsome crazy dynamic action switching, and even if they are, we have that\ncase covered here.</p>\n<p>This is also useful to safeguard against unnecessary repeated sets if OTHER\npassed properties (like branding or classNames/class or whatever else) get\nupdated even if the click action doesn't change.</p>\n",
      "itemtype": "event",
      "name": "didReceiveAttrs",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDropdown.MenuItem",
      "srcFileId": "addon_components_rad-dropdown_menu-item.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 408,
      "description": "<p>Whenever this component receives attrs check if the <code>open</code> prop matches the\ntemplate status. If not, call the handlers for open/close</p>\n",
      "itemtype": "event",
      "name": "didReceiveAttrs",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 136,
      "description": "<p>Handle checking component width against window width on render. If overflowing\nreset the width of the popover to prevent overflow</p>\n",
      "itemtype": "event",
      "name": "didRender",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-tooltip/content.js",
      "line": 70,
      "description": "<p>On render validate that the tooltip content is not overflowing the window.\nIf it is, chop off the overflow.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
      "itemtype": "event",
      "name": "didRender",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadTooltip.Content",
      "srcFileId": "addon_components_rad-tooltip_content.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 141,
      "description": "<p>Actions Up: When something changes in this component we need to let the\ncontainer tabs know by firing the <code>updateTab</code> closure action with this\ntabs changed data.</p>\n<p><em>(Currently the only change we're notifying on is the <code>hidden</code> prop)</em></p>\n",
      "itemtype": "event",
      "name": "didUpdateAttrs",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 147,
      "description": "<p>A proxy action for the selfDestruct method</p>\n",
      "itemtype": "method",
      "name": "dismiss",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-dropdown/content.js",
      "line": 18,
      "description": "<p>Adds <code>dropdown-menu</code> class which removes padding in order to show\ndropdown menu items.</p>\n",
      "itemtype": "property",
      "name": "dropdownMenu",
      "type": "{Boolean}",
      "passed": "",
      "class": "Component.RadDropdown.Content",
      "srcFileId": "addon_components_rad-dropdown_content.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 100,
      "description": "<p>Whether or not to treat the dropdown content component as a dropdown menu</p>\n",
      "itemtype": "property",
      "name": "dropdownMenu",
      "type": "{Boolean}",
      "default": "false",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 36,
      "description": "<p>The elementId of this component must be set to match the <code>aria-labelledby</code>\nof the parent component. This is handled through the contextual component\nsetup of <code>rad-modal</code></p>\n",
      "itemtype": "property",
      "name": "elementId",
      "type": "{string}",
      "passed": "Component.RadModal",
      "required": 1,
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-dropdown/target.js",
      "line": 23,
      "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
      "itemtype": "property",
      "name": "expanded",
      "type": "{string}",
      "class": "Component.RadDropdown.Target",
      "subprops": [
        {
          "name": "hidden",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-dropdown_target.js"
    },
    {
      "file": "addon/components/rad-drawer/target.js",
      "line": 33,
      "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
      "itemtype": "property",
      "name": "expanded",
      "type": "{string}",
      "class": "Component.RadDrawer.Target",
      "subprops": [
        {
          "name": "hidden",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-drawer_target.js"
    },
    {
      "file": "addon/utils/arias.js",
      "line": 28,
      "description": "<p>Method for use with binding aria-expanded. Returns string of negated boolean\nfor hidden.</p>\n",
      "itemtype": "method",
      "name": "expanded",
      "static": 1,
      "return": {
        "description": "String of negated boolean hidden for expanded",
        "type": "String"
      },
      "class": "Utils.Arias",
      "srcFileId": "addon_utils_arias.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 107,
      "description": "<p>Allow for external controls to update the open/closed state of a <code>rad-drawer</code></p>\n",
      "itemtype": "property",
      "name": "externalToggle",
      "type": "{Boolean}",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-svg.js",
      "line": 19,
      "description": "<p>File path to svg definitions file</p>\n",
      "itemtype": "property",
      "name": "filePath",
      "type": "{string}",
      "default": "assets/svg-defs.svg",
      "class": "Component.RadSVG",
      "srcFileId": "addon_components_rad-svg.js"
    },
    {
      "file": "addon/services/tagging.js",
      "line": 85,
      "description": "<p>Send a page view by pushing virtual pageview event into data layer</p>\n",
      "itemtype": "method",
      "name": "firePageView",
      "params": [
        {
          "name": "page",
          "description": "<p>url of the page to send</p>\n",
          "type": "String"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Tagging",
      "srcFileId": "addon_services_tagging.js"
    },
    {
      "file": "addon/services/tagging.js",
      "line": 29,
      "description": "<p>Fire tag by pushing analytics event into dataLayer</p>\n<p>Passing in an object representing tagging information is now supported and\nis the preferred method for invoking <code>fireTag</code>. Additionally, custom dimensions\nmay now also be passed in as part of this object.</p>\n<p>Example:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">tagging<span class=\"token punctuation\">.</span><span class=\"token function\">fireTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  category<span class=\"token punctuation\">:</span> <span class=\"token string\">'Big Hunks'</span><span class=\"token punctuation\">,</span>\n  action<span class=\"token punctuation\">:</span> <span class=\"token string\">'A hunk didnt listen'</span><span class=\"token punctuation\">,</span>\n  label<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hunks are bad listeners'</span><span class=\"token punctuation\">,</span>\n  cd<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    someCD<span class=\"token punctuation\">:</span> <span class=\"token string\">'somevalue'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n",
      "itemtype": "method",
      "name": "fireTag",
      "params": [
        {
          "name": "tag",
          "description": "<p>Tag object containing all of the tag data</p>\n",
          "type": "Object"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Tagging",
      "srcFileId": "addon_services_tagging.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 181,
      "description": "<p>Show content on focus</p>\n",
      "itemtype": "event",
      "name": "focusIn",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 207,
      "description": "<p>Show content on focus</p>\n",
      "itemtype": "event",
      "name": "focusIn",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 188,
      "description": "<p>Hide content on focusOut</p>\n",
      "itemtype": "event",
      "name": "focusOut",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 214,
      "description": "<p>Hide content on focusOut</p>\n",
      "itemtype": "event",
      "name": "focusOut",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 247,
      "itemtype": "property",
      "name": "footerComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-modal/footer'",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 73,
      "itemtype": "property",
      "name": "footerComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-card/footer'",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 255,
      "itemtype": "property",
      "name": "headerComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-modal/header'",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-tooltip/content.js",
      "line": 30,
      "description": "<p>Display status of the tooltip. Is bound to the properties <code>aria-hidden</code> for\nbetter usability and to handle css of show/hide. Is also bound to html5\n<code>hidden</code> attribute.</p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadTooltip.Content",
      "srcFileId": "addon_components_rad-tooltip_content.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 30,
      "description": "<p>Whether this tab should be hidden from view. Useful for situations where\na tab needs to exist in a particular place in the tab ordering but may\nnot have the data it needs to display information at the time when\n<code>registerTab</code> is invoked. This allows you to make sure your tab can be\nhidden while preserving its place in the list.</p>\n",
      "itemtype": "property",
      "name": "hidden",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{Boolean}",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 165,
      "description": "<p>State boolean for display of the drawer content. Is toggled true/false to\nhandle show/hide. Updated in <code>toggleHidden</code></p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 161,
      "description": "<p>State boolean for display of the dropdown content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 117,
      "description": "<p>State boolean for display of the tooltip content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 62,
      "description": "<p>Display status of the popover. Is bound to the properties <code>aria-hidden</code> for\nbetter usability and to handle css of show/hide. Is also bound to html5\n<code>hidden</code> attribute.</p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 140,
      "description": "<p>State boolean for display of the popover content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 99,
      "description": "<p>Computed prop returning <strong>strings</strong> for boolean of hidden. This is done so\nthat <code>aria-hidden</code> is always present on component and displays either 'true'\nor \"false\". (Binding boolean removes <code>aria-hidden</code> entirely when hidden is\ntrue)</p>\n",
      "itemtype": "property",
      "name": "hiddenForArias",
      "type": "{string}",
      "class": "Component.RadPopover.Content",
      "subprops": [
        {
          "name": "hidden",
          "description": "",
          "type": "String"
        }
      ],
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-drawer/content.js",
      "line": 17,
      "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
      "itemtype": "property",
      "name": "hiddenForArias",
      "type": "{string}",
      "class": "Component.RadDrawer.Content",
      "subprops": [
        {
          "name": "hidden",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-drawer_content.js"
    },
    {
      "file": "addon/utils/arias.js",
      "line": 39,
      "description": "<p>Method for use with directly binding <code>aria-hidden</code> to a component which\nrequires a string boolean b/c Ember will remove the attribute if it is\nboolean false.</p>\n",
      "itemtype": "method",
      "name": "hiddenForArias",
      "static": 1,
      "return": {
        "description": "String of boolean hidden",
        "type": "String"
      },
      "class": "Utils.Arias",
      "srcFileId": "addon_utils_arias.js"
    },
    {
      "file": "addon/components/rad-dropdown/content.js",
      "line": 29,
      "description": "<p>String representation of boolean state for <code>aria</code> attrs.</p>\n",
      "itemtype": "property",
      "name": "hiddenForArias",
      "type": "{string}",
      "class": "Component.RadDropdown.Content",
      "subprops": [
        {
          "name": "hidden",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-dropdown_content.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 300,
      "description": "<p>Handle the hiding of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
      "itemtype": "method",
      "name": "hide",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown/menu-item.js",
      "line": 28,
      "description": "<p>Closure action that hides the dropdown</p>\n",
      "itemtype": "property",
      "name": "hide",
      "closure": "",
      "class": "Component.RadDropdown.MenuItem",
      "srcFileId": "addon_components_rad-dropdown_menu-item.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 113,
      "description": "<p>If you want to use a different SVG icon from the default on your <code>target</code>,\nspecify it by name/id here. If you don't want to display an icon\nat all, pass <code>false</code> into this property</p>\n",
      "itemtype": "property",
      "name": "icon",
      "type": "{string|Boolean}",
      "default": "'arrow-down'",
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 239,
      "description": "<p>When the component initializes, we set the <code>tabList</code> property to an array.\nThis prevents multiple instances of rad-tabs on a given page from\ninheriting the same tabList array through prototype inheritance.</p>\n",
      "itemtype": "event",
      "name": "init",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-tooltip/content.js",
      "line": 61,
      "description": "<p>Log warning if <code>aria-describedby</code> is not passed in.</p>\n",
      "itemtype": "event",
      "name": "init",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadTooltip.Content",
      "srcFileId": "addon_components_rad-tooltip_content.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 123,
      "description": "<p>Handle registering with the tabs container on int by firing <code>registerTab</code>\nclosure action with this tab's data.</p>\n",
      "itemtype": "event",
      "name": "init",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 119,
      "description": "<p>Handle binding passed <code>aria-describedby</code> as this component's <code>elementId</code> on\ninit.</p>\n",
      "itemtype": "event",
      "name": "init",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/instance-initializers/fixed-body.js",
      "line": 10,
      "itemtype": "method",
      "name": "initialize",
      "static": 1,
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "InstanceInitializer.FixedBody",
      "srcFileId": "addon_instance-initializers_fixed-body.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 43,
      "description": "<p>The button label text of this tab. This will be passed up via a closure\naction to the containing <code>rad-tabs</code> component.</p>\n",
      "itemtype": "property",
      "name": "label",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{String}",
      "default": "''",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/utils/arias.js",
      "line": 51,
      "description": "<p>Method for generating a unique string to use for binding aria-labelledby\nattributes. Returns prefix with elementID</p>\n",
      "itemtype": "method",
      "name": "labelledby",
      "static": 1,
      "return": {
        "description": "Unique string for use with binding `aria-labelledby`",
        "type": "String"
      },
      "class": "Utils.Arias",
      "srcFileId": "addon_utils_arias.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 65,
      "description": "<p>Pass true to create a button that looks and behaves like a link. This is\nuseful for creating accessible interaction targets.</p>\n",
      "itemtype": "property",
      "name": "link",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 134,
      "itemtype": "property",
      "name": "menuItemComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-dropdown/menu-item'",
      "class": "Component.RadDropdown"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 142,
      "itemtype": "property",
      "name": "menuItemComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-dropdown/target'",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 222,
      "description": "<p>The <code>mouseDown</code> event is used for some utility/housekeeping methods because\nwe use the <code>click</code> event to pass in actions.</p>\n<p>Handle setting the outline on this element to <code>none</code> because we know this\nevent is only triggered by actual mouse clicks. Keyboard events don't trigger\nit, which is a convenient way to know we're good to hide the outline and\nmaintain usability for keyboard users. A++ accessibility!</p>\n<p>Handle checking for a tagging category and if one exists, fire a tag.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
      "itemtype": "event",
      "name": "mouseDown",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 167,
      "description": "<p>Show content on mouse enter</p>\n",
      "itemtype": "event",
      "name": "mouseEnter",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 193,
      "description": "<p>Show content on mouse enter</p>\n",
      "itemtype": "event",
      "name": "mouseEnter",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 253,
      "description": "<p>The <code>mouseEnter</code> checks for a tagging category and hover flag. If they're\npresent a tag is fired.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code>\nTODO: Only include this if Tagging feature is enabled</p>\n",
      "itemtype": "event",
      "name": "mouseEnter",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 243,
      "description": "<p>Check for an auto-close timer when user mouses into dropdown and cancel it\nif it exists.</p>\n",
      "itemtype": "event",
      "name": "mouseEnter",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 174,
      "description": "<p>Hide content on mouse leave</p>\n",
      "itemtype": "event",
      "name": "mouseLeave",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 200,
      "description": "<p>Hide content on mouse leave</p>\n",
      "itemtype": "event",
      "name": "mouseLeave",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 256,
      "description": "<p>When user mouses out of the dropdown start an auto close timer to close\ndropdown after 2.5 seconds. Is canceled using <code>mouseEnter</code> if user mouses\nback into dropdown.</p>\n",
      "itemtype": "event",
      "name": "mouseLeave",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 124,
      "description": "<p>Optional closure action that will be called whenever a tab is opened with\nthe id of that tab. Use this to create a controlled tabs instance.</p>\n",
      "itemtype": "property",
      "name": "onChange",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{function}",
      "default": "null",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-alert.js",
      "line": 72,
      "description": "<p>Contains optional action that is executed when the alert is dismissed.\nThis action will be executed before the alert is destroyed.</p>\n",
      "itemtype": "property",
      "name": "onDismiss",
      "type": "{function}",
      "default": "() => {}",
      "access": "public",
      "tagname": "",
      "class": "Component.RadAlert",
      "srcFileId": "addon_components_rad-alert.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 108,
      "description": "<p>Fires when the dropdown is closed</p>\n",
      "itemtype": "property",
      "name": "onHide",
      "closure": "",
      "passed": "",
      "optional": 1,
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 66,
      "description": "<p>Available hook that is called on hide of the tooltip</p>\n",
      "itemtype": "property",
      "name": "onHide",
      "type": "{function}",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 72,
      "description": "<p>Available hook that is called on show of the tooltip</p>\n",
      "itemtype": "property",
      "name": "onShow",
      "type": "{function}",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 115,
      "description": "<p>Fires when the dropdown is opened</p>\n",
      "itemtype": "property",
      "name": "onShow",
      "closure": "",
      "passed": "",
      "optional": 1,
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 177,
      "description": "<p>Flag used to handle showing and hiding the modal. This property\nshould be passed in by a component/service+controller that controls the\nstate of the modal.</p>\n",
      "itemtype": "property",
      "name": "open",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-state.js",
      "line": 80,
      "description": "<p>Sets the <a href=\"#property_active\">active</a> property to true.</p>\n",
      "itemtype": "method",
      "name": "openModal",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadState",
      "srcFileId": "addon_components_rad-state.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 57,
      "description": "<p>The position that the tooltip is created in relative to its anchor element.\nValid options are:</p>\n<ul>\n<li><code>'top'</code></li>\n<li><code>'bottom'</code></li>\n<li><code>'left'</code></li>\n<li><code>'right'</code></li>\n<li><code>'bottom-left'</code></li>\n<li><code>'bottom-right'</code></li>\n</ul>\n<p>Defaults to <code>'bottom'</code> if no value is supplied.</p>\n",
      "itemtype": "property",
      "name": "position",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 24,
      "description": "<p>The position that the tooltip is created in relative to its anchor element.\nValid options are:</p>\n<ul>\n<li><code>'top'</code></li>\n<li><code>'bottom'</code></li>\n<li><code>'left'</code></li>\n<li><code>'right'</code></li>\n<li><code>'bottom-left'</code></li>\n<li><code>'bottom-right'</code></li>\n</ul>\n<p>Defaults to <code>'bottom'</code> if no value is supplied.</p>\n",
      "itemtype": "property",
      "name": "position",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/services/tagging.js",
      "line": 14,
      "description": "<p>Method for pushing an object into the data layer. Used to set the custom\ndimensions included with tags.</p>\n",
      "itemtype": "method",
      "name": "pushData",
      "params": [
        {
          "name": "data",
          "description": "<p>Object of key/value pairs mapping to custom dimensions</p>\n",
          "type": "Object"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Tagging",
      "srcFileId": "addon_services_tagging.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 286,
      "description": "<p>Closure action passed to content subcomponents that is called on init.\nEach child tab will register itself with this container. To ensure the\ntabList is only updated once per render, we proxy new tabs to the\n<code>_tabsToCreate</code> array and then push all of them to <code>tabList</code> using a\n<code>run.once</code> call to <code>_createTabsList</code></p>\n",
      "itemtype": "method",
      "name": "registerTab",
      "params": [
        {
          "name": "tab",
          "description": "<p>Object model of tab to be registered</p>\n",
          "type": "Object"
        }
      ],
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 186,
      "description": "<p>Determines if the modal should be removed from the DOM when it is closed.\nThis is to help performance on the beefier modals.</p>\n",
      "itemtype": "property",
      "name": "removeFromDomOnClose",
      "default": "false",
      "type": "{Boolean}",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 134,
      "description": "<p>Whether the page should scroll the tab context back to the top when one of\nthe tabs is clicked. This can be a nice convenience for usabilitee.</p>\n",
      "itemtype": "property",
      "name": "scrollOnClick",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 144,
      "description": "<p>What the target of the <code>scrollOnClick</code> behavior should be. By default,\nthe entire page/body scrolls, however if this instance of <code>rad-tabs</code> is\ncontained within a modal or some other scrollable sub-container, it may\nbe more desirable to execute a scroll against that instead of the entire\npage. Simply pass a standard jQuery-like selector in as a string.</p>\n",
      "itemtype": "property",
      "name": "scrollTarget",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{String}",
      "default": "'body, html'",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 280,
      "description": "<p>Handle the showing of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
      "itemtype": "method",
      "name": "show",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 264,
      "description": "<p>Action to show a tab. Set <code>activeId</code> to the passed elementId. <code>activeId</code>\nis passed down to children content components</p>\n",
      "itemtype": "method",
      "name": "showTab",
      "params": [
        {
          "name": "elementId",
          "description": "<p>HTML id of the tab to show</p>\n",
          "type": "String"
        }
      ],
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 194,
      "description": "<p>The size of the modal to display. The default size caps the width of the\nmodal at 60% of the browser's viewport. Additional sizes available are:</p>\n<ul>\n<li><code>'small'</code> (30% on large, 45% on medium)</li>\n<li><code>'medium'</code> (45% on large, 60% on medium)</li>\n<li><code>'full'</code> (100% on large and medium)</li>\n</ul>\n<p>Modals will always render at 100% on mobile/small screen view.</p>\n",
      "itemtype": "property",
      "name": "size",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 74,
      "description": "<p>The size of the tooltip itself. A list of preset sizes available are:</p>\n<ul>\n<li><code>'small'</code></li>\n<li><code>'medium'</code></li>\n<li><code>'large'</code></li>\n<li><code>'x-large'</code></li>\n</ul>\n<p>Defaults to <code>'medium'</code> if no value is supplied.</p>\n",
      "itemtype": "property",
      "name": "size",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 41,
      "description": "<p>The size of the tooltip itself. A list of preset sizes available are:</p>\n<ul>\n<li><code>'small'</code></li>\n<li><code>'medium'</code></li>\n<li><code>'large'</code></li>\n<li><code>'x-large'</code></li>\n</ul>\n<p>Defaults to <code>'medium'</code> if no value is supplied.</p>\n",
      "itemtype": "property",
      "name": "size",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-drawer/target.js",
      "line": 26,
      "description": "<p>Name of icon to display. Removes icon from display if value is falsy.</p>\n",
      "itemtype": "property",
      "name": "suppressIcon",
      "type": "{string|Boolean}",
      "default": "false",
      "class": "Component.RadDrawer.Target",
      "srcFileId": "addon_components_rad-drawer_target.js"
    },
    {
      "file": "addon/components/rad-svg.js",
      "line": 26,
      "description": "<p>The id of the svg.</p>\n",
      "itemtype": "property",
      "name": "svgId",
      "type": "{string}",
      "class": "Component.RadSVG",
      "srcFileId": "addon_components_rad-svg.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 157,
      "description": "<p>Class name(s) to apply to the tab <code>&lt;button&gt;</code> elements.</p>\n",
      "itemtype": "property",
      "name": "tabButtonClassNames",
      "type": "{string}",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 163,
      "description": "<p>Class name(s) to use for the individual tab <code>&lt;li&gt;</code> elements.</p>\n",
      "itemtype": "property",
      "name": "tabClassNames",
      "passed": "",
      "type": "{String}",
      "default": "''",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-tabs/content.js",
      "line": 54,
      "description": "<p>Use this attribute to place a custom <code>data-test</code> attribute on the tab button\nfor this tab. This will allow easier, specific/direct targeting of clicking\nthis tab in automated testing.</p>\n",
      "itemtype": "property",
      "name": "tabDataTest",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadTabs.Content",
      "srcFileId": "addon_components_rad-tabs_content.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 209,
      "description": "<p>List of tabs to display. This is iterated through in the template to\nrendered the buttons that are used to change tabs.</p>\n",
      "itemtype": "property",
      "name": "tabList",
      "type": "{Array.<Object>}",
      "default": "null",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 171,
      "description": "<p>Class name(s) to use on the enclosing tabs <code>&lt;ul&gt;</code> element.</p>\n",
      "itemtype": "property",
      "name": "tabListClassNames",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{String}",
      "default": "''",
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-svg.js",
      "line": 56,
      "description": "<p>SVG DOM element</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "class": "Component.RadSVG",
      "srcFileId": "addon_components_rad-svg.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 109,
      "description": "<p>Remove wrapping ember element for subcomponent, it's not needed.</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-tooltip/content.js",
      "line": 51,
      "description": "<p><code>div</code> DOM element</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "class": "Component.RadTooltip.Content",
      "srcFileId": "addon_components_rad-tooltip_content.js"
    },
    {
      "file": "addon/components/rad-modal/footer.js",
      "line": 20,
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'footer'",
      "class": "Component.RadModal.Footer",
      "srcFileId": "addon_components_rad-modal_footer.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 136,
      "description": "<p>Tooltips should almost aways be inline spans.</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "span",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 122,
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'header'",
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 204,
      "description": "<p>Button DOM element</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'button'",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-state.js",
      "line": 56,
      "description": "<p>Rad State is a purely functional component with no rendered output of its\nown, so it doesn't need a root element cluttering up the DOM when it's\nbeing used.</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "class": "Component.RadState",
      "srcFileId": "addon_components_rad-state.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 148,
      "description": "<p>Component element: div</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 84,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagaction",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 75,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagcategory",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 113,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagcd",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{Object}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-modal/header.js",
      "line": 73,
      "description": "<p>Pass a <code>(hash)</code> of tagging properties when you need to bind a tag fire to\nclose of the modal. Expects syntax:</p>\n<p><code>(hash category='Tag Category' action='Tag Action' label='Tag Label')</code></p>\n",
      "itemtype": "property",
      "name": "tagclose",
      "type": "{Object}",
      "passed": "",
      "optional": 1,
      "default": "null",
      "class": "Component.RadModal.Header",
      "srcFileId": "addon_components_rad-modal_header.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 218,
      "description": "<p>Pass a <code>(hash)</code> of tagging properties when you need to bind a tag fire to\nclose of the modal. Expects syntax:\n<code>(hash category='Tag Category' action='Tag Action' label='Tag Label')</code></p>\n",
      "itemtype": "property",
      "name": "tagclose",
      "type": "{Object}",
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 122,
      "description": "<p>Tagging property. Handles firing a tag on hover when true.</p>\n",
      "itemtype": "property",
      "name": "taghover",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-tooltip/title.js",
      "line": 46,
      "description": "<p>Tooltips are tagged on hover by default. <code>RadButton</code> will check this flag\nand the existence of <code>tagcategory</code> on mouseEnter. This means if you need\nto fire a tag on hover, you only have to pass <code>tagcategory</code>.</p>\n",
      "itemtype": "property",
      "name": "taghover",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadTooltip.Title",
      "srcFileId": "addon_components_rad-tooltip_title.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 93,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation. Set to undefined\nso the tagging service will properly correct an un-passed value.</p>\n",
      "itemtype": "property",
      "name": "taglabel",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{string}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 131,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagonce",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 104,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagvalue",
      "passed": "",
      "access": "public",
      "tagname": "",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-popover.js",
      "line": 100,
      "itemtype": "property",
      "name": "targetComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-button'",
      "class": "Component.RadPopover",
      "srcFileId": "addon_components_rad-popover.js"
    },
    {
      "file": "addon/components/rad-tooltip.js",
      "line": 90,
      "itemtype": "property",
      "name": "titleComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-tooltip/title'",
      "class": "Component.RadTooltip",
      "srcFileId": "addon_components_rad-tooltip.js"
    },
    {
      "file": "addon/components/rad-card.js",
      "line": 81,
      "itemtype": "property",
      "name": "titleComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-card/title'",
      "class": "Component.RadCard",
      "srcFileId": "addon_components_rad-card.js"
    },
    {
      "file": "addon/components/rad-drawer.js",
      "line": 216,
      "description": "<p>Toggle internal hidden property. Pass state boolean if specific state is needed.</p>\n",
      "itemtype": "method",
      "name": "toggleHidden",
      "params": [
        {
          "name": "evt",
          "description": "<p>Event object</p>\n",
          "type": "Object"
        },
        {
          "name": "state",
          "description": "<p>Specific state to set</p>\n",
          "type": "Boolean",
          "optional": true
        }
      ],
      "class": "Component.RadDrawer",
      "srcFileId": "addon_components_rad-drawer.js"
    },
    {
      "file": "addon/components/rad-state.js",
      "line": 88,
      "description": "<p>Sets the <a href=\"#property_active\">active</a> property to passed state.</p>\n",
      "itemtype": "method",
      "name": "toggleState",
      "params": [
        {
          "name": "state",
          "description": "<p>State to set active to</p>\n",
          "type": "Boolean"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadState",
      "srcFileId": "addon_components_rad-state.js"
    },
    {
      "file": "addon/components/rad-popover/content.js",
      "line": 178,
      "description": "<p>Nasty touch eventses. Tricksy touch eventses. Any short touch event on this\ncontent component will fire the focusOut and the mouseLeave on the\n<code>rad-popover</code> element. Real abnoxious when you're trying to click something.\nFire the link or button manually. Through the wonderful power of JavaScript.</p>\n",
      "itemtype": "event",
      "name": "touchEnd",
      "class": "Component.RadPopover.Content",
      "srcFileId": "addon_components_rad-popover_content.js"
    },
    {
      "file": "addon/components/rad-dropdown/content.js",
      "line": 64,
      "description": "<p>Nasty touch eventses. Tricksy touch eventses. Any short touch event on this\ncontent component will fire the focusOut and the mouseLeave on the\n<code>rad-popover</code> element. Real abnoxious when you're trying to click something.\nFire the link or button manually. Through the wonderful power of JavaScript.</p>\n",
      "itemtype": "event",
      "name": "touchEnd",
      "class": "Component.RadDropdown.Content",
      "srcFileId": "addon_components_rad-dropdown_content.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 211,
      "description": "<p>Include type button for usability.</p>\n",
      "itemtype": "property",
      "name": "type",
      "type": "{string}",
      "default": "'button'",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/utils/listeners.js",
      "line": 24,
      "description": "<p>Handle unbinding escape listener.</p>\n",
      "itemtype": "method",
      "name": "unbindOnEscape",
      "params": [
        {
          "name": "namespace",
          "description": "<p>Unique namespace for the listener</p>\n",
          "type": "String"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Utils.Listeners",
      "srcFileId": "addon_utils_listeners.js"
    },
    {
      "file": "addon/components/rad-tabs.js",
      "line": 300,
      "description": "<p>Closure action passed to content subcomponents that is called whenever\na tab has updated in a way this container needs to know of. Currently\nthis is only when a tab's <code>hidden</code> status changes.</p>\n",
      "itemtype": "method",
      "name": "updateTab",
      "params": [
        {
          "name": "tab",
          "description": null,
          "type": "Object",
          "props": [
            {
              "name": "elementId",
              "description": "HTML id of tab to update",
              "type": "String"
            },
            {
              "name": "hidden",
              "description": "Hidden status of changed tab",
              "type": "Boolean"
            }
          ]
        }
      ],
      "class": "Component.RadTabs",
      "srcFileId": "addon_components_rad-tabs.js"
    },
    {
      "file": "addon/components/rad-modal.js",
      "line": 450,
      "description": "<p>willDestroyElement hook used to ensure that all of the closing logic that\nneeds to happen fires off.</p>\n<p><strong>NOTE:</strong> This will make sure that the body doesn't get frozen in place if\nyour modal isn't cleaned up, but when you navigate back to whatever created\nthis modal it may still be open. If this is the case remember that the\nopen state of your modal is a data down property which needs to be cleaned\nup on whatever parent context controls it.</p>\n",
      "itemtype": "event",
      "name": "willDestroyElement",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadModal",
      "srcFileId": "addon_components_rad-modal.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 225,
      "description": "<p>Safety first!\nIf we leave the page without closing the dropdown we don't want to orphan\nlisteners.</p>\n",
      "itemtype": "method",
      "name": "willDestroyElement",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    }
  ],
  "warnings": [
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown/content.js:18"
    },
    {
      "message": "unknown tag: closure",
      "line": " addon/components/rad-dropdown/menu-item.js:28"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal/header.js:36"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal/header.js:45"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal/header.js:54"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal/header.js:64"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal/header.js:73"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal/header.js:88"
    },
    {
      "message": "unknown tag: closure",
      "line": " addon/components/rad-modal/header.js:88"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs/content.js:30"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs/content.js:43"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs/content.js:54"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:56"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:65"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:75"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:84"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:93"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:104"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:113"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:122"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:131"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-button.js:144"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-card.js:65"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-card.js:73"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-card.js:81"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-drawer.js:126"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-drawer.js:134"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:76"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:86"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:93"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:100"
    },
    {
      "message": "unknown tag: closure",
      "line": " addon/components/rad-dropdown.js:108"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:108"
    },
    {
      "message": "unknown tag: closure",
      "line": " addon/components/rad-dropdown.js:115"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:115"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:126"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:134"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-dropdown.js:142"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal.js:158"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal.js:168"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal.js:233"
    },
    {
      "message": "unknown tag: closure",
      "line": " addon/components/rad-modal.js:233"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal.js:247"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-modal.js:255"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-popover.js:92"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-popover.js:100"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:74"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:84"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:93"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:103"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:113"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:124"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:134"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:144"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:163"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:171"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tabs.js:184"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tooltip.js:82"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/rad-tooltip.js:90"
    }
  ]
}