{
  "name": "Component.RadDropdown",
  "shortname": "Component.RadDropdown",
  "classitems": [
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 171,
      "description": "<p>Stored reference to <code>run.later</code> created in <code>mouseLeave</code> that will close any\nopen dropdown. Is used in <code>mouseEnter</code> to cancel auto close.</p>\n",
      "itemtype": "property",
      "name": "_autoCloseRunLater",
      "type": "{?Function}",
      "default": "null",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 213,
      "description": "<p>When the dropdown is opened, bind an event listener that will close it if\nthe user clicks anywhere other than the dropdown.</p>\n",
      "itemtype": "method",
      "name": "_bindDropdownListeners",
      "access": "protected",
      "tagname": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 230,
      "description": "<p>Remove click listener from body. Used to DRY up our cleanup code in the\nsupported click and mouse out close liseners.</p>\n",
      "itemtype": "method",
      "name": "_unbindDropdownListeners",
      "access": "protected",
      "tagname": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 292,
      "description": "<p>Actions</p>\n",
      "itemtype": "property",
      "name": "actions",
      "type": "{Object}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 190,
      "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 76,
      "description": "<p>When <code>autoClose</code> is set to true, the dropdown will automatically close\nitself 2.5sec after the user mouses out of it.</p>\n",
      "itemtype": "property",
      "name": "autoClose",
      "type": "{Boolean}",
      "passed": "",
      "optional": 1,
      "default": "false",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 86,
      "description": "<p>Adds a brand class to the target as btn-{brand}</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{String}",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 93,
      "description": "<p>Whether or not to style the target as a link or a button</p>\n",
      "itemtype": "property",
      "name": "buttonStyle",
      "type": "{Boolean}",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 197,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['hidden::active']",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 203,
      "description": "<p>Bind <code>rad-dropdown</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 144,
      "itemtype": "property",
      "name": "contentComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-dropdown/content'",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 100,
      "description": "<p>Whether or not to treat the dropdown content component as a dropdown menu</p>\n",
      "itemtype": "property",
      "name": "dropdownMenu",
      "type": "{Boolean}",
      "default": "false",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 179,
      "description": "<p>State boolean for display of the dropdown content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 318,
      "description": "<p>Handle the hiding of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
      "itemtype": "method",
      "name": "hide",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 160,
      "itemtype": "property",
      "name": "menuItemComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-dropdown/target'",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 261,
      "description": "<p>Check for an auto-close timer when user mouses into dropdown and cancel it\nif it exists.</p>\n",
      "itemtype": "event",
      "name": "mouseEnter",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 274,
      "description": "<p>When user mouses out of the dropdown start an auto close timer to close\ndropdown after 2.5 seconds. Is canceled using <code>mouseEnter</code> if user mouses\nback into dropdown.</p>\n",
      "itemtype": "event",
      "name": "mouseLeave",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 108,
      "description": "<p>Fires when the dropdown is closed</p>\n",
      "itemtype": "property",
      "name": "onHide",
      "closure": "",
      "passed": "",
      "optional": 1,
      "type": "{Function}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 116,
      "description": "<p>Fires when the dropdown is opened</p>\n",
      "itemtype": "property",
      "name": "onShow",
      "closure": "",
      "passed": "",
      "optional": 1,
      "type": "{Function}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 124,
      "description": "<p>The position that the tooltip is created in relative to its anchor element. Combine \"top\" with \"right\" to get a top and right aligned menu.\nValid options are:</p>\n<ul>\n<li><code>'left'</code></li>\n<li><code>'top'</code></li>\n<li><code>'right'</code></li>\n<li><code>'top right'</code></li>\n</ul>\n<p>Defaults to <code>'left'</code> if no value is supplied.</p>\n",
      "itemtype": "property",
      "name": "position",
      "type": "{String}",
      "passed": "",
      "default": "'left'",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 298,
      "description": "<p>Handle the showing of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
      "itemtype": "method",
      "name": "show",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 243,
      "description": "<p>Safety first!\nIf we leave the page without closing the dropdown we don't want to orphan\nlisteners.</p>\n",
      "itemtype": "method",
      "name": "willDestroyElement",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    }
  ],
  "plugins": [],
  "extensions": [],
  "plugin_for": [],
  "extension_for": [],
  "file": "addon/components/rad-dropdown.js",
  "line": 8,
  "description": "<p>Core dropdown component.</p>\n<p>Welcome friend, if you're looking for a button/link that opens a dropdown\nyou've come to the right place.</p>\n<h2>Usage</h2>\n<h4>1. Simple invocation. It's so easy. Just pass a Target and Content prop</h4>\n<p>and you've got a totally rad dropdown.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>dropdown Target<span class=\"token operator\">=</span><span class=\"token string\">\"Open me!\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Hey, what's up?\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{rad-dropdown Target=\"Open me!\" Content=\"Hey, what's up?\"}}</p>\n<h4>2. Simple target with custom content. Use the Content contextual</h4>\n<p>component to add custom content to the dropdown.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>dropdown Target<span class=\"token operator\">=</span><span class=\"token string\">\"Open me!\"</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Hey<span class=\"token punctuation\">,</span> what's up<span class=\"token operator\">?</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>dropdown<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h4>3. Customize both the dropdown target and content.</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>dropdown <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Open me<span class=\"token operator\">!</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Hey<span class=\"token punctuation\">,</span> what's up<span class=\"token operator\">?</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>dropdown<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-dropdown as |components|}}\n{{#components.target}}Open me!{{/components.target}}\n{{#components.content}}Hey, what's up?{{/components.content}}\n{{/rad-dropdown}}</p>\n<h4>4. Turn the target into a button with <code>buttonStyle=true</code> and pass a</h4>\n<p><code>brand</code> to change the color button.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>dropdown buttonStyle<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> brand<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> Target<span class=\"token operator\">=</span><span class=\"token string\">\"Open me!\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Hey, what's up?\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h4>5. Use as a dropdown menu with menu items</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#rad<span class=\"token operator\">-</span>dropdown dropdownMenu<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> brand<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> buttonStyle<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    Open me<span class=\"token operator\">!</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>svg svgId<span class=\"token operator\">=</span><span class=\"token string\">\"arrow-down\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Option <span class=\"token number\">1</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>Option <span class=\"token number\">2</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>rad<span class=\"token operator\">-</span>dropdown<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{#rad-dropdown dropdownMenu=true brand=\"primary\" buttonStyle=true as |components|}}\n{{#components.target}}\nOpen me! {{rad-svg svgId=\"arrow-down\"}}\n{{/components.target}}\n{{#components.content}}\n{{#components.menu-item}}Option 1{{/components.menu-item}}\n{{#components.menu-item}}Option 2{{/components.menu-item}}\n{{/components.content}}\n{{/rad-dropdown}}</p>\n<h4>6. Pass <code>autoClose</code> for a self closing dropdown</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>rad<span class=\"token operator\">-</span>dropdown autoClose<span class=\"token operator\">=</span><span class=\"token boolean\">true</span> Target<span class=\"token operator\">=</span><span class=\"token string\">\"Open\"</span> Content<span class=\"token operator\">=</span><span class=\"token string\">\"Mouse out and I'll close myself!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>{{rad-dropdown autoClose=true Target=\"Open\" Content=\"Mouse out and I'll close myself!\"}}</p>\n<table>\n<thead>\n<tr>\n<th>Configuration</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>buttonStyle</code></td>\n<td>boolean</td>\n<td>false</td>\n<td>Whether to style the <code>target</code> to look like a button</td>\n</tr>\n<tr>\n<td><code>brand</code></td>\n<td>string</td>\n<td>''</td>\n<td>The brand class to use to style the <code>target</code></td>\n</tr>\n<tr>\n<td><code>autoClose</code></td>\n<td>boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n",
  "is_constructor": 1,
  "extends": "Ember.Component",
  "method": [
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 213,
      "description": "<p>When the dropdown is opened, bind an event listener that will close it if\nthe user clicks anywhere other than the dropdown.</p>\n",
      "itemtype": "method",
      "name": "_bindDropdownListeners",
      "access": "protected",
      "tagname": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 230,
      "description": "<p>Remove click listener from body. Used to DRY up our cleanup code in the\nsupported click and mouse out close liseners.</p>\n",
      "itemtype": "method",
      "name": "_unbindDropdownListeners",
      "access": "protected",
      "tagname": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 318,
      "description": "<p>Handle the hiding of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
      "itemtype": "method",
      "name": "hide",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 298,
      "description": "<p>Handle the showing of the dropdown. This will pass on any arguments you\npass to it in the action.</p>\n",
      "itemtype": "method",
      "name": "show",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 243,
      "description": "<p>Safety first!\nIf we leave the page without closing the dropdown we don't want to orphan\nlisteners.</p>\n",
      "itemtype": "method",
      "name": "willDestroyElement",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    }
  ],
  "property": [
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 171,
      "description": "<p>Stored reference to <code>run.later</code> created in <code>mouseLeave</code> that will close any\nopen dropdown. Is used in <code>mouseEnter</code> to cancel auto close.</p>\n",
      "itemtype": "property",
      "name": "_autoCloseRunLater",
      "type": "{?Function}",
      "default": "null",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 292,
      "description": "<p>Actions</p>\n",
      "itemtype": "property",
      "name": "actions",
      "type": "{Object}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 190,
      "description": "<p>Auto-binds <code>data-test</code> attributes</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 76,
      "description": "<p>When <code>autoClose</code> is set to true, the dropdown will automatically close\nitself 2.5sec after the user mouses out of it.</p>\n",
      "itemtype": "property",
      "name": "autoClose",
      "type": "{Boolean}",
      "passed": "",
      "optional": 1,
      "default": "false",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 86,
      "description": "<p>Adds a brand class to the target as btn-{brand}</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{String}",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 93,
      "description": "<p>Whether or not to style the target as a link or a button</p>\n",
      "itemtype": "property",
      "name": "buttonStyle",
      "type": "{Boolean}",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 197,
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "default": "['hidden::active']",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 203,
      "description": "<p>Bind <code>rad-dropdown</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 144,
      "itemtype": "property",
      "name": "contentComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-dropdown/content'",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 100,
      "description": "<p>Whether or not to treat the dropdown content component as a dropdown menu</p>\n",
      "itemtype": "property",
      "name": "dropdownMenu",
      "type": "{Boolean}",
      "default": "false",
      "passed": "",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 179,
      "description": "<p>State boolean for display of the dropdown content. Is toggled true/false to\nhandle show/hide. Updated in <code>_showContent</code> and <code>_hideContent</code></p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "default": "true",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 160,
      "itemtype": "property",
      "name": "menuItemComponent",
      "type": "{string}",
      "passed": "",
      "optional": 1,
      "default": "'rad-dropdown/target'",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 108,
      "description": "<p>Fires when the dropdown is closed</p>\n",
      "itemtype": "property",
      "name": "onHide",
      "closure": "",
      "passed": "",
      "optional": 1,
      "type": "{Function}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 116,
      "description": "<p>Fires when the dropdown is opened</p>\n",
      "itemtype": "property",
      "name": "onShow",
      "closure": "",
      "passed": "",
      "optional": 1,
      "type": "{Function}",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 124,
      "description": "<p>The position that the tooltip is created in relative to its anchor element. Combine \"top\" with \"right\" to get a top and right aligned menu.\nValid options are:</p>\n<ul>\n<li><code>'left'</code></li>\n<li><code>'top'</code></li>\n<li><code>'right'</code></li>\n<li><code>'top right'</code></li>\n</ul>\n<p>Defaults to <code>'left'</code> if no value is supplied.</p>\n",
      "itemtype": "property",
      "name": "position",
      "type": "{String}",
      "passed": "",
      "default": "'left'",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    }
  ],
  "event": [
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 261,
      "description": "<p>Check for an auto-close timer when user mouses into dropdown and cancel it\nif it exists.</p>\n",
      "itemtype": "event",
      "name": "mouseEnter",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    },
    {
      "file": "addon/components/rad-dropdown.js",
      "line": 274,
      "description": "<p>When user mouses out of the dropdown start an auto close timer to close\ndropdown after 2.5 seconds. Is canceled using <code>mouseEnter</code> if user mouses\nback into dropdown.</p>\n",
      "itemtype": "event",
      "name": "mouseLeave",
      "class": "Component.RadDropdown",
      "srcFileId": "addon_components_rad-dropdown.js"
    }
  ],
  "srcFileId": "addon_components_rad-dropdown.js"
}