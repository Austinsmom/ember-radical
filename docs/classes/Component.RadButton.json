{
  "name": "Component.RadButton",
  "shortname": "Component.RadButton",
  "classitems": [
    {
      "file": "addon/components/rad-button.js",
      "line": 33,
      "description": "<p>Internal method that handles firiing a tag with or without custom dimensions.</p>\n",
      "itemtype": "method",
      "name": "_fireTag",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 140,
      "description": "<p>ALLLLLLLLLLL the attributes you might need.\nNOTE: <code>role</code> should not be bound here. You can set the role of a button\nby passing an <a href=\"http://emberjs.com/api/classes/Ember.Component.html#property_ariaRole\">ariaRole</a> prop.</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 56,
      "description": "<p>Pass a brand to have <code>btn-${brand}</code> class applied</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{?string}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 126,
      "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{string}",
      "class": "Component.RadButton",
      "subprops": [
        {
          "name": "'brand'",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 167,
      "description": "<p>Handle binding brand and link related css class names</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 158,
      "description": "<p>Bind standard core classname for component: <code>rad-button</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 63,
      "description": "<p>Pass true to create a button that looks and behaves like a link. This is\nuseful for creating accessible interaction targets.</p>\n",
      "itemtype": "property",
      "name": "link",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 194,
      "description": "<p>The <code>mouseDown</code> event is used for some utility/housekeeping methods because\nwe use the <code>click</code> event to pass in actions.</p>\n<p>Handle setting the outline on this element to <code>none</code> because we know this\nevent is only triggered by actual mouse clicks. Keyboard events don't trigger\nit, which is a convenient way to know we're good to hide the outline and\nmaintain usability for keyboard users. A++ accessibility!</p>\n<p>Handle checking for a tagging category and if one exists, fire a tag.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
      "itemtype": "event",
      "name": "mouseDown",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 225,
      "description": "<p>The <code>mouseEnter</code> checks for a tagging category and hover flag. If they're\npresent a tag is fired.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code>\nTODO: Only include this if Tagging feature is enabled</p>\n",
      "itemtype": "event",
      "name": "mouseEnter",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 176,
      "description": "<p>Button DOM element</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'button'",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 78,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagaction",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 71,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagcategory",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 101,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagcd",
      "type": "{Object}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 108,
      "description": "<p>Tagging property. Handles firing a tag on hover when true.</p>\n",
      "itemtype": "property",
      "name": "taghover",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 85,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation. Set to undefined\nso the tagging service will properly correct an un-passed value.</p>\n",
      "itemtype": "property",
      "name": "taglabel",
      "type": "{string}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 115,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagonce",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 94,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagvalue",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 183,
      "description": "<p>Include type button for usability.</p>\n",
      "itemtype": "property",
      "name": "type",
      "type": "{string}",
      "default": "'button'",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    }
  ],
  "plugins": [],
  "extensions": [],
  "plugin_for": [],
  "extension_for": [],
  "file": "addon/components/rad-button.js",
  "line": 6,
  "description": "<p>The <code>rad-button</code> component is used for all user interaction targets in Ember\nRadical. The component handles a number of housekeeping tasks including:</p>\n<ul>\n<li>Outline suppression only on clicks</li>\n<li>Tag firing when enabled</li>\n<li>Aria and html attributes</li>\n</ul>\n<p>{{#rad-button}}Core Button{{/rad-button}}</p>\n<table>\n<thead>\n<tr>\n<th>Configuration</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>link</code></td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>Toggles the <code>.btn-link</code> class, making the button look and act like a link</td>\n</tr>\n<tr>\n<td><code>brand</code></td>\n<td>{'primary', 'secondary', 'info' etc. }</td>\n<td><code>null</code></td>\n<td>Toggles brand class for a branded button</td>\n</tr>\n</tbody>\n</table>\n",
  "is_constructor": 1,
  "extends": "Ember.Component",
  "method": [
    {
      "file": "addon/components/rad-button.js",
      "line": 33,
      "description": "<p>Internal method that handles firiing a tag with or without custom dimensions.</p>\n",
      "itemtype": "method",
      "name": "_fireTag",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    }
  ],
  "property": [
    {
      "file": "addon/components/rad-button.js",
      "line": 140,
      "description": "<p>ALLLLLLLLLLL the attributes you might need.\nNOTE: <code>role</code> should not be bound here. You can set the role of a button\nby passing an <a href=\"http://emberjs.com/api/classes/Ember.Component.html#property_ariaRole\">ariaRole</a> prop.</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 56,
      "description": "<p>Pass a brand to have <code>btn-${brand}</code> class applied</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{?string}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 126,
      "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{string}",
      "class": "Component.RadButton",
      "subprops": [
        {
          "name": "'brand'",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 167,
      "description": "<p>Handle binding brand and link related css class names</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 158,
      "description": "<p>Bind standard core classname for component: <code>rad-button</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 63,
      "description": "<p>Pass true to create a button that looks and behaves like a link. This is\nuseful for creating accessible interaction targets.</p>\n",
      "itemtype": "property",
      "name": "link",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 176,
      "description": "<p>Button DOM element</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'button'",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 78,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagaction",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 71,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagcategory",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 101,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagcd",
      "type": "{Object}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 108,
      "description": "<p>Tagging property. Handles firing a tag on hover when true.</p>\n",
      "itemtype": "property",
      "name": "taghover",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 85,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation. Set to undefined\nso the tagging service will properly correct an un-passed value.</p>\n",
      "itemtype": "property",
      "name": "taglabel",
      "type": "{string}",
      "default": "null",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 115,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagonce",
      "type": "{Boolean}",
      "default": "false",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 94,
      "description": "<p>Tagging property. See <code>one-tag</code> for tagging documentation.</p>\n",
      "itemtype": "property",
      "name": "tagvalue",
      "type": "{string}",
      "default": "''",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 183,
      "description": "<p>Include type button for usability.</p>\n",
      "itemtype": "property",
      "name": "type",
      "type": "{string}",
      "default": "'button'",
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    }
  ],
  "event": [
    {
      "file": "addon/components/rad-button.js",
      "line": 194,
      "description": "<p>The <code>mouseDown</code> event is used for some utility/housekeeping methods because\nwe use the <code>click</code> event to pass in actions.</p>\n<p>Handle setting the outline on this element to <code>none</code> because we know this\nevent is only triggered by actual mouse clicks. Keyboard events don't trigger\nit, which is a convenient way to know we're good to hide the outline and\nmaintain usability for keyboard users. A++ accessibility!</p>\n<p>Handle checking for a tagging category and if one exists, fire a tag.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
      "itemtype": "event",
      "name": "mouseDown",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    },
    {
      "file": "addon/components/rad-button.js",
      "line": 225,
      "description": "<p>The <code>mouseEnter</code> checks for a tagging category and hover flag. If they're\npresent a tag is fired.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code>\nTODO: Only include this if Tagging feature is enabled</p>\n",
      "itemtype": "event",
      "name": "mouseEnter",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Component.RadButton",
      "srcFileId": "addon_components_rad-button.js"
    }
  ],
  "srcFileId": "addon_components_rad-button.js"
}