// ========================================================
// Bootstrap Functions
// ========================================================

/* Minimum breakpoint width. Null for the smallest (first) breakpoint.
 *
 *    >> breakpoint-min(sm, (xs: 0, sm: 544px, md: 768px))
 *    544px
 */
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

/* Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
 * Useful for making responsive utilities.
 *
 *    >> breakpoint-infix(xs, (xs: 0, sm: 544px, md: 768px))
 *    ""  (Returns a blank string)
 *    >> breakpoint-infix(sm, (xs: 0, sm: 544px, md: 768px))
 *    "-sm"
 */
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "-#{$name}", "-#{$name}");
}

/* Returns a rem converted value for any pixel value passed in
 *
 *    >> rem-calc(20)
 *    20 * rem-root * 1rem = 1.333rem
 */
@function rem-calc($value, $rem: $rem-root) {
  @return strip-units($value) / $rem * 1rem;
}

/* Returns a value with the units stripped
 *
 *    >> strip-units(20px)
 *    20
 */
@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}
